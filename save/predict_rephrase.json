[
    {
        "db_id": "concert_singer",
        "query": "SELECT count(*) FROM singer",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "singer"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "singer"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list the total number of singer",
        "gold_question": "list the total number of singer",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "singer"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT count(*) FROM singer",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "singer"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "singer"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list the total number of singer",
        "gold_question": "list the total number of singer",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "singer"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT name ,  country ,  age FROM singer ORDER BY age DESC",
        "query_toks": [
            "SELECT",
            "name",
            ",",
            "country",
            ",",
            "age",
            "FROM",
            "singer",
            "ORDER",
            "BY",
            "age",
            "DESC"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "country",
            ",",
            "age",
            "from",
            "singer",
            "order",
            "by",
            "age",
            "desc"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list name country age of singer ordered by age descendingly",
        "gold_question": "list name country age of singer ordered by age descendingly",
        "question_toks": [
            "list",
            "name",
            "country",
            "age",
            "of",
            "singer",
            "ordered",
            "by",
            "age",
            "descendingly"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT name ,  country ,  age FROM singer ORDER BY age DESC",
        "query_toks": [
            "SELECT",
            "name",
            ",",
            "country",
            ",",
            "age",
            "FROM",
            "singer",
            "ORDER",
            "BY",
            "age",
            "DESC"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "country",
            ",",
            "age",
            "from",
            "singer",
            "order",
            "by",
            "age",
            "desc"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list name country age of singer ordered by age descendingly",
        "gold_question": "list name country age of singer ordered by age descendingly",
        "question_toks": [
            "list",
            "name",
            "country",
            "age",
            "of",
            "singer",
            "ordered",
            "by",
            "age",
            "descendingly"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'France'",
        "query_toks": [
            "SELECT",
            "avg",
            "(",
            "age",
            ")",
            ",",
            "min",
            "(",
            "age",
            ")",
            ",",
            "max",
            "(",
            "age",
            ")",
            "FROM",
            "singer",
            "WHERE",
            "country",
            "=",
            "'France",
            "'"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "age",
            ")",
            ",",
            "min",
            "(",
            "age",
            ")",
            ",",
            "max",
            "(",
            "age",
            ")",
            "from",
            "singer",
            "where",
            "country",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    "\"France\"",
                    null
                ]
            ]
        },
        "question": "list the average of age the minimum of age the maximum of age of singer with country equal to value",
        "gold_question": "list the average of age the minimum of age the maximum of age of singer with country equal to value",
        "question_toks": [
            "list",
            "the",
            "average",
            "of",
            "age",
            "the",
            "minimum",
            "of",
            "age",
            "the",
            "maximum",
            "of",
            "age",
            "of",
            "singer",
            "with",
            "country",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'France'",
        "query_toks": [
            "SELECT",
            "avg",
            "(",
            "age",
            ")",
            ",",
            "min",
            "(",
            "age",
            ")",
            ",",
            "max",
            "(",
            "age",
            ")",
            "FROM",
            "singer",
            "WHERE",
            "country",
            "=",
            "'France",
            "'"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "age",
            ")",
            ",",
            "min",
            "(",
            "age",
            ")",
            ",",
            "max",
            "(",
            "age",
            ")",
            "from",
            "singer",
            "where",
            "country",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    "\"France\"",
                    null
                ]
            ]
        },
        "question": "list the average of age the minimum of age the maximum of age of singer with country equal to value",
        "gold_question": "list the average of age the minimum of age the maximum of age of singer with country equal to value",
        "question_toks": [
            "list",
            "the",
            "average",
            "of",
            "age",
            "the",
            "minimum",
            "of",
            "age",
            "the",
            "maximum",
            "of",
            "age",
            "of",
            "singer",
            "with",
            "country",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1",
        "query_toks": [
            "SELECT",
            "song_name",
            ",",
            "song_release_year",
            "FROM",
            "singer",
            "ORDER",
            "BY",
            "age",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "song_name",
            ",",
            "song_release_year",
            "from",
            "singer",
            "order",
            "by",
            "age",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of song name song release year of singer ordered by age ascendingly",
        "gold_question": "list top value items of song name song release year of singer ordered by age ascendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "song",
            "name",
            "song",
            "release",
            "year",
            "of",
            "singer",
            "ordered",
            "by",
            "age",
            "ascendingly"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1",
        "query_toks": [
            "SELECT",
            "song_name",
            ",",
            "song_release_year",
            "FROM",
            "singer",
            "ORDER",
            "BY",
            "age",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "song_name",
            ",",
            "song_release_year",
            "from",
            "singer",
            "order",
            "by",
            "age",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of song name song release year of singer ordered by age ascendingly",
        "gold_question": "list top value items of song name song release year of singer ordered by age ascendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "song",
            "name",
            "song",
            "release",
            "year",
            "of",
            "singer",
            "ordered",
            "by",
            "age",
            "ascendingly"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT DISTINCT country FROM singer WHERE age  >  20",
        "query_toks": [
            "SELECT",
            "DISTINCT",
            "country",
            "FROM",
            "singer",
            "WHERE",
            "age",
            ">",
            "20"
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "country",
            "from",
            "singer",
            "where",
            "age",
            ">",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ],
                    20.0,
                    null
                ]
            ]
        },
        "question": "list country of singer with age greater than value",
        "gold_question": "list country of singer with age greater than value",
        "question_toks": [
            "list",
            "country",
            "of",
            "singer",
            "with",
            "age",
            "greater",
            "than",
            "value"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT DISTINCT country FROM singer WHERE age  >  20",
        "query_toks": [
            "SELECT",
            "DISTINCT",
            "country",
            "FROM",
            "singer",
            "WHERE",
            "age",
            ">",
            "20"
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "country",
            "from",
            "singer",
            "where",
            "age",
            ">",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ],
                    20.0,
                    null
                ]
            ]
        },
        "question": "list country of singer with age greater than value",
        "gold_question": "list country of singer with age greater than value",
        "question_toks": [
            "list",
            "country",
            "of",
            "singer",
            "with",
            "age",
            "greater",
            "than",
            "value"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT country ,  count(*) FROM singer GROUP BY country",
        "query_toks": [
            "SELECT",
            "country",
            ",",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "singer",
            "GROUP",
            "BY",
            "country"
        ],
        "query_toks_no_value": [
            "select",
            "country",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "singer",
            "group",
            "by",
            "country"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    10,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list country the total number of singer for each country",
        "gold_question": "list country the total number of singer for each country",
        "question_toks": [
            "list",
            "country",
            "the",
            "total",
            "number",
            "of",
            "singer",
            "for",
            "each",
            "country"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT country ,  count(*) FROM singer GROUP BY country",
        "query_toks": [
            "SELECT",
            "country",
            ",",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "singer",
            "GROUP",
            "BY",
            "country"
        ],
        "query_toks_no_value": [
            "select",
            "country",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "singer",
            "group",
            "by",
            "country"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    10,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list country the total number of singer for each country",
        "gold_question": "list country the total number of singer for each country",
        "question_toks": [
            "list",
            "country",
            "the",
            "total",
            "number",
            "of",
            "singer",
            "for",
            "each",
            "country"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer)",
        "query_toks": [
            "SELECT",
            "song_name",
            "FROM",
            "singer",
            "WHERE",
            "age",
            ">",
            "(",
            "SELECT",
            "avg",
            "(",
            "age",
            ")",
            "FROM",
            "singer",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "song_name",
            "from",
            "singer",
            "where",
            "age",
            ">",
            "(",
            "select",
            "avg",
            "(",
            "age",
            ")",
            "from",
            "singer",
            ")"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    1
                                ]
                            ]
                        },
                        "groupby": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderby": [],
                        "select": [
                            false,
                            [
                                [
                                    5,
                                    [
                                        0,
                                        [
                                            0,
                                            13,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": []
                    },
                    null
                ]
            ]
        },
        "question": "list song name of singer with age greater than ( the average of age of singer )",
        "gold_question": "list song name of singer with age greater than ( the average of age of singer )",
        "question_toks": [
            "list",
            "song",
            "name",
            "of",
            "singer",
            "with",
            "age",
            "greater",
            "than",
            "(",
            "the",
            "average",
            "of",
            "age",
            "of",
            "singer",
            ")"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer)",
        "query_toks": [
            "SELECT",
            "song_name",
            "FROM",
            "singer",
            "WHERE",
            "age",
            ">",
            "(",
            "SELECT",
            "avg",
            "(",
            "age",
            ")",
            "FROM",
            "singer",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "song_name",
            "from",
            "singer",
            "where",
            "age",
            ">",
            "(",
            "select",
            "avg",
            "(",
            "age",
            ")",
            "from",
            "singer",
            ")"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    1
                                ]
                            ]
                        },
                        "groupby": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderby": [],
                        "select": [
                            false,
                            [
                                [
                                    5,
                                    [
                                        0,
                                        [
                                            0,
                                            13,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": []
                    },
                    null
                ]
            ]
        },
        "question": "list song name of singer with age greater than ( the average of age of singer )",
        "gold_question": "list song name of singer with age greater than ( the average of age of singer )",
        "question_toks": [
            "list",
            "song",
            "name",
            "of",
            "singer",
            "with",
            "age",
            "greater",
            "than",
            "(",
            "the",
            "average",
            "of",
            "age",
            "of",
            "singer",
            ")"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT LOCATION ,  name FROM stadium WHERE capacity BETWEEN 5000 AND 10000",
        "query_toks": [
            "SELECT",
            "LOCATION",
            ",",
            "name",
            "FROM",
            "stadium",
            "WHERE",
            "capacity",
            "BETWEEN",
            "5000",
            "AND",
            "10000"
        ],
        "query_toks_no_value": [
            "select",
            "location",
            ",",
            "name",
            "from",
            "stadium",
            "where",
            "capacity",
            "between",
            "value",
            "and",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    1,
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ],
                    5000.0,
                    10000.0
                ]
            ]
        },
        "question": "list location name of stadium with capacity is between value and value",
        "gold_question": "list location name of stadium with capacity is between value and value",
        "question_toks": [
            "list",
            "location",
            "name",
            "of",
            "stadium",
            "with",
            "capacity",
            "is",
            "between",
            "value",
            "and",
            "value"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT LOCATION ,  name FROM stadium WHERE capacity BETWEEN 5000 AND 10000",
        "query_toks": [
            "SELECT",
            "LOCATION",
            ",",
            "name",
            "FROM",
            "stadium",
            "WHERE",
            "capacity",
            "BETWEEN",
            "5000",
            "AND",
            "10000"
        ],
        "query_toks_no_value": [
            "select",
            "location",
            ",",
            "name",
            "from",
            "stadium",
            "where",
            "capacity",
            "between",
            "value",
            "and",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    1,
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ],
                    5000.0,
                    10000.0
                ]
            ]
        },
        "question": "list location name of stadium with capacity is between value and value",
        "gold_question": "list location name of stadium with capacity is between value and value",
        "question_toks": [
            "list",
            "location",
            "name",
            "of",
            "stadium",
            "with",
            "capacity",
            "is",
            "between",
            "value",
            "and",
            "value"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "select max(capacity), average from stadium",
        "query_toks": [
            "select",
            "max",
            "(",
            "capacity",
            ")",
            ",",
            "average",
            "from",
            "stadium"
        ],
        "query_toks_no_value": [
            "select",
            "max",
            "(",
            "capacity",
            ")",
            ",",
            "average",
            "from",
            "stadium"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list the maximum of capacity the average of average of stadium",
        "gold_question": "list the maximum of capacity average of stadium",
        "question_toks": [
            "list",
            "the",
            "maximum",
            "of",
            "capacity",
            "the",
            "average",
            "of",
            "average",
            "of",
            "stadium"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "select avg(capacity) ,  max(capacity) from stadium",
        "query_toks": [
            "select",
            "avg",
            "(",
            "capacity",
            ")",
            ",",
            "max",
            "(",
            "capacity",
            ")",
            "from",
            "stadium"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "capacity",
            ")",
            ",",
            "max",
            "(",
            "capacity",
            ")",
            "from",
            "stadium"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list the average of average the maximum of capacity of stadium",
        "gold_question": "list the average of capacity the maximum of capacity of stadium",
        "question_toks": [
            "list",
            "the",
            "average",
            "of",
            "average",
            "the",
            "maximum",
            "of",
            "capacity",
            "of",
            "stadium"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "name",
            ",",
            "capacity",
            "FROM",
            "stadium",
            "ORDER",
            "BY",
            "average",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "capacity",
            "from",
            "stadium",
            "order",
            "by",
            "average",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of name capacity of stadium ordered by average descendingly",
        "gold_question": "list top value items of name capacity of stadium ordered by average descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "name",
            "capacity",
            "of",
            "stadium",
            "ordered",
            "by",
            "average",
            "descendingly"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "name",
            ",",
            "capacity",
            "FROM",
            "stadium",
            "ORDER",
            "BY",
            "average",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "capacity",
            "from",
            "stadium",
            "order",
            "by",
            "average",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of name capacity of stadium ordered by average descendingly",
        "gold_question": "list top value items of name capacity of stadium ordered by average descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "name",
            "capacity",
            "of",
            "stadium",
            "ordered",
            "by",
            "average",
            "descendingly"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT count(*) FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "concert",
            "WHERE",
            "YEAR",
            "=",
            "2014",
            "OR",
            "YEAR",
            "=",
            "2015"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "concert",
            "where",
            "year",
            "=",
            "value",
            "or",
            "year",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            19,
                            false
                        ],
                        null
                    ],
                    2014.0,
                    null
                ],
                "or",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            19,
                            false
                        ],
                        null
                    ],
                    2015.0,
                    null
                ]
            ]
        },
        "question": "list the total number of concert with year equal to value or year equal to value",
        "gold_question": "list the total number of concert with year equal to value or year equal to value",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "concert",
            "with",
            "year",
            "equal",
            "to",
            "value",
            "or",
            "year",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT count(*) FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "concert",
            "WHERE",
            "YEAR",
            "=",
            "2014",
            "OR",
            "YEAR",
            "=",
            "2015"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "concert",
            "where",
            "year",
            "=",
            "value",
            "or",
            "year",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            19,
                            false
                        ],
                        null
                    ],
                    2014.0,
                    null
                ],
                "or",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            19,
                            false
                        ],
                        null
                    ],
                    2015.0,
                    null
                ]
            ]
        },
        "question": "list the total number of concert with year equal to value or year equal to value",
        "gold_question": "list the total number of concert with year equal to value or year equal to value",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "concert",
            "with",
            "year",
            "equal",
            "to",
            "value",
            "or",
            "year",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id",
        "query_toks": [
            "SELECT",
            "T2.name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "concert",
            "AS",
            "T1",
            "JOIN",
            "stadium",
            "AS",
            "T2",
            "ON",
            "T1.stadium_id",
            "=",
            "T2.stadium_id",
            "GROUP",
            "BY",
            "T1.stadium_id"
        ],
        "query_toks_no_value": [
            "select",
            "t2",
            ".",
            "name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "concert",
            "as",
            "t1",
            "join",
            "stadium",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "stadium_id",
            "=",
            "t2",
            ".",
            "stadium_id",
            "group",
            "by",
            "t1",
            ".",
            "stadium_id"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                18,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    18,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list name of concert the total number of concert for each stadium id of concert",
        "gold_question": "list name of concert the total number of concert for each stadium id of concert",
        "question_toks": [
            "list",
            "name",
            "of",
            "concert",
            "the",
            "total",
            "number",
            "of",
            "concert",
            "for",
            "each",
            "stadium",
            "id",
            "of",
            "concert"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id",
        "query_toks": [
            "SELECT",
            "T2.name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "concert",
            "AS",
            "T1",
            "JOIN",
            "stadium",
            "AS",
            "T2",
            "ON",
            "T1.stadium_id",
            "=",
            "T2.stadium_id",
            "GROUP",
            "BY",
            "T1.stadium_id"
        ],
        "query_toks_no_value": [
            "select",
            "t2",
            ".",
            "name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "concert",
            "as",
            "t1",
            "join",
            "stadium",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "stadium_id",
            "=",
            "t2",
            ".",
            "stadium_id",
            "group",
            "by",
            "t1",
            ".",
            "stadium_id"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                18,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    18,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list name of concert the total number of concert for each stadium id of concert",
        "gold_question": "list name of concert the total number of concert for each stadium id of concert",
        "question_toks": [
            "list",
            "name",
            "of",
            "concert",
            "the",
            "total",
            "number",
            "of",
            "concert",
            "for",
            "each",
            "stadium",
            "id",
            "of",
            "concert"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT T2.name ,  T2.capacity FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  >=  2014 GROUP BY T2.stadium_id ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T2.name",
            ",",
            "T2.capacity",
            "FROM",
            "concert",
            "AS",
            "T1",
            "JOIN",
            "stadium",
            "AS",
            "T2",
            "ON",
            "T1.stadium_id",
            "=",
            "T2.stadium_id",
            "WHERE",
            "T1.year",
            ">",
            "=",
            "2014",
            "GROUP",
            "BY",
            "T2.stadium_id",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t2",
            ".",
            "name",
            ",",
            "t2",
            ".",
            "capacity",
            "from",
            "concert",
            "as",
            "t1",
            "join",
            "stadium",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "stadium_id",
            "=",
            "t2",
            ".",
            "stadium_id",
            "where",
            "t1",
            ".",
            "year",
            ">",
            "=",
            "value",
            "group",
            "by",
            "t2",
            ".",
            "stadium_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                18,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    1,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    5,
                    [
                        0,
                        [
                            0,
                            19,
                            false
                        ],
                        null
                    ],
                    2014.0,
                    null
                ]
            ]
        },
        "question": "list top value items of name of stadium capacity of stadium with year of concert greater than or equal to value for each stadium id of concert ordered by the total number of concert descendingly",
        "gold_question": "list top value items of name of stadium capacity of stadium with year of concert greater than or equal to value for each stadium id ordered by the total number of stadium descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "name",
            "of",
            "stadium",
            "capacity",
            "of",
            "stadium",
            "with",
            "year",
            "of",
            "concert",
            "greater",
            "than",
            "or",
            "equal",
            "to",
            "value",
            "for",
            "each",
            "stadium",
            "id",
            "of",
            "concert",
            "ordered",
            "by",
            "the",
            "total",
            "number",
            "of",
            "concert",
            "descendingly"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "select t2.name ,  t2.capacity from concert as t1 join stadium as t2 on t1.stadium_id  =  t2.stadium_id where t1.year  >  2013 group by t2.stadium_id order by count(*) desc limit 1",
        "query_toks": [
            "select",
            "t2.name",
            ",",
            "t2.capacity",
            "from",
            "concert",
            "as",
            "t1",
            "join",
            "stadium",
            "as",
            "t2",
            "on",
            "t1.stadium_id",
            "=",
            "t2.stadium_id",
            "where",
            "t1.year",
            ">",
            "2013",
            "group",
            "by",
            "t2.stadium_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t2",
            ".",
            "name",
            ",",
            "t2",
            ".",
            "capacity",
            "from",
            "concert",
            "as",
            "t1",
            "join",
            "stadium",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "stadium_id",
            "=",
            "t2",
            ".",
            "stadium_id",
            "where",
            "t1",
            ".",
            "year",
            ">",
            "value",
            "group",
            "by",
            "t2",
            ".",
            "stadium_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                18,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    1,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            19,
                            false
                        ],
                        null
                    ],
                    2013.0,
                    null
                ]
            ]
        },
        "question": "list top value items of name of stadium capacity of stadium with year of concert greater than value for each stadium id of concert ordered by the total number of concert descendingly",
        "gold_question": "list top value items of name of stadium capacity of stadium with year of concert greater than value for each stadium id ordered by the total number of stadium descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "name",
            "of",
            "stadium",
            "capacity",
            "of",
            "stadium",
            "with",
            "year",
            "of",
            "concert",
            "greater",
            "than",
            "value",
            "for",
            "each",
            "stadium",
            "id",
            "of",
            "concert",
            "ordered",
            "by",
            "the",
            "total",
            "number",
            "of",
            "concert",
            "descendingly"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "YEAR",
            "FROM",
            "concert",
            "GROUP",
            "BY",
            "YEAR",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "year",
            "from",
            "concert",
            "group",
            "by",
            "year",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    19,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                19,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of year of concert for each year ordered by the total number of concert descendingly",
        "gold_question": "list top value items of year of concert for each year ordered by the total number of concert descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "year",
            "of",
            "concert",
            "for",
            "each",
            "year",
            "ordered",
            "by",
            "the",
            "total",
            "number",
            "of",
            "concert",
            "descendingly"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "YEAR",
            "FROM",
            "concert",
            "GROUP",
            "BY",
            "YEAR",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "year",
            "from",
            "concert",
            "group",
            "by",
            "year",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    19,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                19,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of year of concert for each year ordered by the total number of concert descendingly",
        "gold_question": "list top value items of year of concert for each year ordered by the total number of concert descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "year",
            "of",
            "concert",
            "for",
            "each",
            "year",
            "ordered",
            "by",
            "the",
            "total",
            "number",
            "of",
            "concert",
            "descendingly"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert)",
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "stadium",
            "WHERE",
            "stadium_id",
            "NOT",
            "IN",
            "(",
            "SELECT",
            "stadium_id",
            "FROM",
            "concert",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "stadium",
            "where",
            "stadium_id",
            "not",
            "in",
            "(",
            "select",
            "stadium_id",
            "from",
            "concert",
            ")"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    true,
                    8,
                    [
                        0,
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    2
                                ]
                            ]
                        },
                        "groupby": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderby": [],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            18,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": []
                    },
                    null
                ]
            ]
        },
        "question": "list name of stadium with stadium id that is not in ( stadium id of concert )",
        "gold_question": "list name of stadium with stadium id that is not in ( stadium id of concert )",
        "question_toks": [
            "list",
            "name",
            "of",
            "stadium",
            "with",
            "stadium",
            "id",
            "that",
            "is",
            "not",
            "in",
            "(",
            "stadium",
            "id",
            "of",
            "concert",
            ")"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert)",
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "stadium",
            "WHERE",
            "stadium_id",
            "NOT",
            "IN",
            "(",
            "SELECT",
            "stadium_id",
            "FROM",
            "concert",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "stadium",
            "where",
            "stadium_id",
            "not",
            "in",
            "(",
            "select",
            "stadium_id",
            "from",
            "concert",
            ")"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    true,
                    8,
                    [
                        0,
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    2
                                ]
                            ]
                        },
                        "groupby": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderby": [],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            18,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": []
                    },
                    null
                ]
            ]
        },
        "question": "list name of stadium with stadium id that is not in ( stadium id of concert )",
        "gold_question": "list name of stadium with stadium id that is not in ( stadium id of concert )",
        "question_toks": [
            "list",
            "name",
            "of",
            "stadium",
            "with",
            "stadium",
            "id",
            "that",
            "is",
            "not",
            "in",
            "(",
            "stadium",
            "id",
            "of",
            "concert",
            ")"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT country FROM singer WHERE age  >  40 INTERSECT SELECT country FROM singer WHERE age  <  30",
        "query_toks": [
            "SELECT",
            "country",
            "FROM",
            "singer",
            "WHERE",
            "age",
            ">",
            "40",
            "INTERSECT",
            "SELECT",
            "country",
            "FROM",
            "singer",
            "WHERE",
            "age",
            "<",
            "30"
        ],
        "query_toks_no_value": [
            "select",
            "country",
            "from",
            "singer",
            "where",
            "age",
            ">",
            "value",
            "intersect",
            "select",
            "country",
            "from",
            "singer",
            "where",
            "age",
            "<",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": {
                "except": null,
                "from": {
                    "conds": [],
                    "table_units": [
                        [
                            "table_unit",
                            1
                        ]
                    ]
                },
                "groupby": [],
                "having": [],
                "intersect": null,
                "limit": null,
                "orderby": [],
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    10,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "union": null,
                "where": [
                    [
                        false,
                        4,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ],
                        30.0,
                        null
                    ]
                ]
            },
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ],
                    40.0,
                    null
                ]
            ]
        },
        "question": "list country of singer with age greater than value and list country of singer with age less than value",
        "gold_question": "list country of singer with age greater than value and list country of singer with age less than value",
        "question_toks": [
            "list",
            "country",
            "of",
            "singer",
            "with",
            "age",
            "greater",
            "than",
            "value",
            "and",
            "list",
            "country",
            "of",
            "singer",
            "with",
            "age",
            "less",
            "than",
            "value"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014",
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "stadium",
            "EXCEPT",
            "SELECT",
            "T2.name",
            "FROM",
            "concert",
            "AS",
            "T1",
            "JOIN",
            "stadium",
            "AS",
            "T2",
            "ON",
            "T1.stadium_id",
            "=",
            "T2.stadium_id",
            "WHERE",
            "T1.year",
            "=",
            "2014"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "stadium",
            "except",
            "select",
            "t2",
            ".",
            "name",
            "from",
            "concert",
            "as",
            "t1",
            "join",
            "stadium",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "stadium_id",
            "=",
            "t2",
            ".",
            "stadium_id",
            "where",
            "t1",
            ".",
            "year",
            "=",
            "value"
        ],
        "sql": {
            "except": {
                "except": null,
                "from": {
                    "conds": [
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    18,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ],
                    "table_units": [
                        [
                            "table_unit",
                            2
                        ],
                        [
                            "table_unit",
                            0
                        ]
                    ]
                },
                "groupby": [],
                "having": [],
                "intersect": null,
                "limit": null,
                "orderby": [],
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    3,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "union": null,
                "where": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                19,
                                false
                            ],
                            null
                        ],
                        2014.0,
                        null
                    ]
                ]
            },
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list name of stadium except that list name of stadium with year of concert equal to value",
        "gold_question": "list name of stadium except that list name of stadium with year of concert equal to value",
        "question_toks": [
            "list",
            "name",
            "of",
            "stadium",
            "except",
            "that",
            "list",
            "name",
            "of",
            "stadium",
            "with",
            "year",
            "of",
            "concert",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014",
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "stadium",
            "EXCEPT",
            "SELECT",
            "T2.name",
            "FROM",
            "concert",
            "AS",
            "T1",
            "JOIN",
            "stadium",
            "AS",
            "T2",
            "ON",
            "T1.stadium_id",
            "=",
            "T2.stadium_id",
            "WHERE",
            "T1.year",
            "=",
            "2014"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "stadium",
            "except",
            "select",
            "t2",
            ".",
            "name",
            "from",
            "concert",
            "as",
            "t1",
            "join",
            "stadium",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "stadium_id",
            "=",
            "t2",
            ".",
            "stadium_id",
            "where",
            "t1",
            ".",
            "year",
            "=",
            "value"
        ],
        "sql": {
            "except": {
                "except": null,
                "from": {
                    "conds": [
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    18,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ],
                    "table_units": [
                        [
                            "table_unit",
                            2
                        ],
                        [
                            "table_unit",
                            0
                        ]
                    ]
                },
                "groupby": [],
                "having": [],
                "intersect": null,
                "limit": null,
                "orderby": [],
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    3,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "union": null,
                "where": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                19,
                                false
                            ],
                            null
                        ],
                        2014.0,
                        null
                    ]
                ]
            },
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list name of stadium except that list name of stadium with year of concert equal to value",
        "gold_question": "list name of stadium except that list name of stadium with year of concert equal to value",
        "question_toks": [
            "list",
            "name",
            "of",
            "stadium",
            "except",
            "that",
            "list",
            "name",
            "of",
            "stadium",
            "with",
            "year",
            "of",
            "concert",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT T2.concert_name ,  T2.theme ,  count(*) FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_id  =  T2.concert_id GROUP BY T2.concert_id",
        "query_toks": [
            "SELECT",
            "T2.concert_name",
            ",",
            "T2.theme",
            ",",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "singer_in_concert",
            "AS",
            "T1",
            "JOIN",
            "concert",
            "AS",
            "T2",
            "ON",
            "T1.concert_id",
            "=",
            "T2.concert_id",
            "GROUP",
            "BY",
            "T2.concert_id"
        ],
        "query_toks_no_value": [
            "select",
            "t2",
            ".",
            "concert_name",
            ",",
            "t2",
            ".",
            "theme",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "singer_in_concert",
            "as",
            "t1",
            "join",
            "concert",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "concert_id",
            "=",
            "t2",
            ".",
            "concert_id",
            "group",
            "by",
            "t2",
            ".",
            "concert_id"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                20,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            15,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    15,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                16,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                17,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list concert name of concert theme of singer in concert the total number of singer in concert for each concert id of singer in concert",
        "gold_question": "list concert name theme of singer in concert the total number of singer in concert for each concert id",
        "question_toks": [
            "list",
            "concert",
            "name",
            "of",
            "concert",
            "theme",
            "of",
            "singer",
            "in",
            "concert",
            "the",
            "total",
            "number",
            "of",
            "singer",
            "in",
            "concert",
            "for",
            "each",
            "concert",
            "id",
            "of",
            "singer",
            "in",
            "concert"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "select t2.concert_name ,  t2.theme ,  count(*) from singer_in_concert as t1 join concert as t2 on t1.concert_id  =  t2.concert_id group by t2.concert_id",
        "query_toks": [
            "select",
            "t2.concert_name",
            ",",
            "t2.theme",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "singer_in_concert",
            "as",
            "t1",
            "join",
            "concert",
            "as",
            "t2",
            "on",
            "t1.concert_id",
            "=",
            "t2.concert_id",
            "group",
            "by",
            "t2.concert_id"
        ],
        "query_toks_no_value": [
            "select",
            "t2",
            ".",
            "concert_name",
            ",",
            "t2",
            ".",
            "theme",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "singer_in_concert",
            "as",
            "t1",
            "join",
            "concert",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "concert_id",
            "=",
            "t2",
            ".",
            "concert_id",
            "group",
            "by",
            "t2",
            ".",
            "concert_id"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                20,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            15,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    15,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                16,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                17,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list name of concert theme of singer in concert the total number of singer in concert for each concert name of concert concert id",
        "gold_question": "list concert name theme of singer in concert the total number of singer in concert for each concert id",
        "question_toks": [
            "list",
            "name",
            "of",
            "concert",
            "theme",
            "of",
            "singer",
            "in",
            "concert",
            "the",
            "total",
            "number",
            "of",
            "singer",
            "in",
            "concert",
            "for",
            "each",
            "concert",
            "name",
            "of",
            "concert",
            "concert",
            "id"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id",
        "query_toks": [
            "SELECT",
            "T2.name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "singer_in_concert",
            "AS",
            "T1",
            "JOIN",
            "singer",
            "AS",
            "T2",
            "ON",
            "T1.singer_id",
            "=",
            "T2.singer_id",
            "GROUP",
            "BY",
            "T2.singer_id"
        ],
        "query_toks_no_value": [
            "select",
            "t2",
            ".",
            "name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "singer_in_concert",
            "as",
            "t1",
            "join",
            "singer",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "singer_id",
            "=",
            "t2",
            ".",
            "singer_id",
            "group",
            "by",
            "t2",
            ".",
            "singer_id"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                21,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    8,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list name of singer in concert the total number of singer in concert for each singer id of singer in concert",
        "gold_question": "list name of singer in concert the total number of singer in concert for each singer id",
        "question_toks": [
            "list",
            "name",
            "of",
            "singer",
            "in",
            "concert",
            "the",
            "total",
            "number",
            "of",
            "singer",
            "in",
            "concert",
            "for",
            "each",
            "singer",
            "id",
            "of",
            "singer",
            "in",
            "concert"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id",
        "query_toks": [
            "SELECT",
            "T2.name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "singer_in_concert",
            "AS",
            "T1",
            "JOIN",
            "singer",
            "AS",
            "T2",
            "ON",
            "T1.singer_id",
            "=",
            "T2.singer_id",
            "GROUP",
            "BY",
            "T2.singer_id"
        ],
        "query_toks_no_value": [
            "select",
            "t2",
            ".",
            "name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "singer_in_concert",
            "as",
            "t1",
            "join",
            "singer",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "singer_id",
            "=",
            "t2",
            ".",
            "singer_id",
            "group",
            "by",
            "t2",
            ".",
            "singer_id"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                21,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    8,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list name of singer in concert the total number of singer in concert for each singer id of singer in concert",
        "gold_question": "list name of singer in concert the total number of singer in concert for each singer id",
        "question_toks": [
            "list",
            "name",
            "of",
            "singer",
            "in",
            "concert",
            "the",
            "total",
            "number",
            "of",
            "singer",
            "in",
            "concert",
            "for",
            "each",
            "singer",
            "id",
            "of",
            "singer",
            "in",
            "concert"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014",
        "query_toks": [
            "SELECT",
            "T2.name",
            "FROM",
            "singer_in_concert",
            "AS",
            "T1",
            "JOIN",
            "singer",
            "AS",
            "T2",
            "ON",
            "T1.singer_id",
            "=",
            "T2.singer_id",
            "JOIN",
            "concert",
            "AS",
            "T3",
            "ON",
            "T1.concert_id",
            "=",
            "T3.concert_id",
            "WHERE",
            "T3.year",
            "=",
            "2014"
        ],
        "query_toks_no_value": [
            "select",
            "t2",
            ".",
            "name",
            "from",
            "singer_in_concert",
            "as",
            "t1",
            "join",
            "singer",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "singer_id",
            "=",
            "t2",
            ".",
            "singer_id",
            "join",
            "concert",
            "as",
            "t3",
            "on",
            "t1",
            ".",
            "concert_id",
            "=",
            "t3",
            ".",
            "concert_id",
            "where",
            "t3",
            ".",
            "year",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                21,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                20,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            15,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ],
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            19,
                            false
                        ],
                        null
                    ],
                    2014.0,
                    null
                ]
            ]
        },
        "question": "list name of singer with year of concert equal to value",
        "gold_question": "list name of singer with year of concert equal to value",
        "question_toks": [
            "list",
            "name",
            "of",
            "singer",
            "with",
            "year",
            "of",
            "concert",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014",
        "query_toks": [
            "SELECT",
            "T2.name",
            "FROM",
            "singer_in_concert",
            "AS",
            "T1",
            "JOIN",
            "singer",
            "AS",
            "T2",
            "ON",
            "T1.singer_id",
            "=",
            "T2.singer_id",
            "JOIN",
            "concert",
            "AS",
            "T3",
            "ON",
            "T1.concert_id",
            "=",
            "T3.concert_id",
            "WHERE",
            "T3.year",
            "=",
            "2014"
        ],
        "query_toks_no_value": [
            "select",
            "t2",
            ".",
            "name",
            "from",
            "singer_in_concert",
            "as",
            "t1",
            "join",
            "singer",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "singer_id",
            "=",
            "t2",
            ".",
            "singer_id",
            "join",
            "concert",
            "as",
            "t3",
            "on",
            "t1",
            ".",
            "concert_id",
            "=",
            "t3",
            ".",
            "concert_id",
            "where",
            "t3",
            ".",
            "year",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                21,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                20,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            15,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ],
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            19,
                            false
                        ],
                        null
                    ],
                    2014.0,
                    null
                ]
            ]
        },
        "question": "list name of singer with year of concert equal to value",
        "gold_question": "list name of singer with year of concert equal to value",
        "question_toks": [
            "list",
            "name",
            "of",
            "singer",
            "with",
            "year",
            "of",
            "concert",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT name ,  country FROM singer WHERE song_name LIKE '%Hey%'",
        "query_toks": [
            "SELECT",
            "name",
            ",",
            "country",
            "FROM",
            "singer",
            "WHERE",
            "song_name",
            "LIKE",
            "'",
            "%",
            "Hey",
            "%",
            "'"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "country",
            "from",
            "singer",
            "where",
            "song_name",
            "like",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    9,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    "\"%Hey%\"",
                    null
                ]
            ]
        },
        "question": "list name country of singer with song name formatted as value",
        "gold_question": "list name country of singer with song name formatted as value",
        "question_toks": [
            "list",
            "name",
            "country",
            "of",
            "singer",
            "with",
            "song",
            "name",
            "formatted",
            "as",
            "value"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT name ,  country FROM singer WHERE song_name LIKE '%Hey%'",
        "query_toks": [
            "SELECT",
            "name",
            ",",
            "country",
            "FROM",
            "singer",
            "WHERE",
            "song_name",
            "LIKE",
            "'",
            "%",
            "Hey",
            "%",
            "'"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "country",
            "from",
            "singer",
            "where",
            "song_name",
            "like",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    9,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    "\"%Hey%\"",
                    null
                ]
            ]
        },
        "question": "list name country of singer with song name formatted as value",
        "gold_question": "list name country of singer with song name formatted as value",
        "question_toks": [
            "list",
            "name",
            "country",
            "of",
            "singer",
            "with",
            "song",
            "name",
            "formatted",
            "as",
            "value"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015",
        "query_toks": [
            "SELECT",
            "T2.name",
            ",",
            "T2.location",
            "FROM",
            "concert",
            "AS",
            "T1",
            "JOIN",
            "stadium",
            "AS",
            "T2",
            "ON",
            "T1.stadium_id",
            "=",
            "T2.stadium_id",
            "WHERE",
            "T1.Year",
            "=",
            "2014",
            "INTERSECT",
            "SELECT",
            "T2.name",
            ",",
            "T2.location",
            "FROM",
            "concert",
            "AS",
            "T1",
            "JOIN",
            "stadium",
            "AS",
            "T2",
            "ON",
            "T1.stadium_id",
            "=",
            "T2.stadium_id",
            "WHERE",
            "T1.Year",
            "=",
            "2015"
        ],
        "query_toks_no_value": [
            "select",
            "t2",
            ".",
            "name",
            ",",
            "t2",
            ".",
            "location",
            "from",
            "concert",
            "as",
            "t1",
            "join",
            "stadium",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "stadium_id",
            "=",
            "t2",
            ".",
            "stadium_id",
            "where",
            "t1",
            ".",
            "year",
            "=",
            "value",
            "intersect",
            "select",
            "t2",
            ".",
            "name",
            ",",
            "t2",
            ".",
            "location",
            "from",
            "concert",
            "as",
            "t1",
            "join",
            "stadium",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "stadium_id",
            "=",
            "t2",
            ".",
            "stadium_id",
            "where",
            "t1",
            ".",
            "year",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                18,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": {
                "except": null,
                "from": {
                    "conds": [
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    18,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ],
                    "table_units": [
                        [
                            "table_unit",
                            2
                        ],
                        [
                            "table_unit",
                            0
                        ]
                    ]
                },
                "groupby": [],
                "having": [],
                "intersect": null,
                "limit": null,
                "orderby": [],
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    3,
                                    false
                                ],
                                null
                            ]
                        ],
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    2,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "union": null,
                "where": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                19,
                                false
                            ],
                            null
                        ],
                        2015.0,
                        null
                    ]
                ]
            },
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            19,
                            false
                        ],
                        null
                    ],
                    2014.0,
                    null
                ]
            ]
        },
        "question": "list name of stadium location of stadium with year of concert equal to value and list name of stadium location of stadium with year of concert equal to value",
        "gold_question": "list name of stadium location of stadium with year of concert equal to value and list name of stadium location of stadium with year of concert equal to value",
        "question_toks": [
            "list",
            "name",
            "of",
            "stadium",
            "location",
            "of",
            "stadium",
            "with",
            "year",
            "of",
            "concert",
            "equal",
            "to",
            "value",
            "and",
            "list",
            "name",
            "of",
            "stadium",
            "location",
            "of",
            "stadium",
            "with",
            "year",
            "of",
            "concert",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015",
        "query_toks": [
            "SELECT",
            "T2.name",
            ",",
            "T2.location",
            "FROM",
            "concert",
            "AS",
            "T1",
            "JOIN",
            "stadium",
            "AS",
            "T2",
            "ON",
            "T1.stadium_id",
            "=",
            "T2.stadium_id",
            "WHERE",
            "T1.Year",
            "=",
            "2014",
            "INTERSECT",
            "SELECT",
            "T2.name",
            ",",
            "T2.location",
            "FROM",
            "concert",
            "AS",
            "T1",
            "JOIN",
            "stadium",
            "AS",
            "T2",
            "ON",
            "T1.stadium_id",
            "=",
            "T2.stadium_id",
            "WHERE",
            "T1.Year",
            "=",
            "2015"
        ],
        "query_toks_no_value": [
            "select",
            "t2",
            ".",
            "name",
            ",",
            "t2",
            ".",
            "location",
            "from",
            "concert",
            "as",
            "t1",
            "join",
            "stadium",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "stadium_id",
            "=",
            "t2",
            ".",
            "stadium_id",
            "where",
            "t1",
            ".",
            "year",
            "=",
            "value",
            "intersect",
            "select",
            "t2",
            ".",
            "name",
            ",",
            "t2",
            ".",
            "location",
            "from",
            "concert",
            "as",
            "t1",
            "join",
            "stadium",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "stadium_id",
            "=",
            "t2",
            ".",
            "stadium_id",
            "where",
            "t1",
            ".",
            "year",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                18,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": {
                "except": null,
                "from": {
                    "conds": [
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    18,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ],
                    "table_units": [
                        [
                            "table_unit",
                            2
                        ],
                        [
                            "table_unit",
                            0
                        ]
                    ]
                },
                "groupby": [],
                "having": [],
                "intersect": null,
                "limit": null,
                "orderby": [],
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    3,
                                    false
                                ],
                                null
                            ]
                        ],
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    2,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "union": null,
                "where": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                19,
                                false
                            ],
                            null
                        ],
                        2015.0,
                        null
                    ]
                ]
            },
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            19,
                            false
                        ],
                        null
                    ],
                    2014.0,
                    null
                ]
            ]
        },
        "question": "list name of stadium location of stadium with year of concert equal to value and list name of stadium location of stadium with year of concert equal to value",
        "gold_question": "list name of stadium location of stadium with year of concert equal to value and list name of stadium location of stadium with year of concert equal to value",
        "question_toks": [
            "list",
            "name",
            "of",
            "stadium",
            "location",
            "of",
            "stadium",
            "with",
            "year",
            "of",
            "concert",
            "equal",
            "to",
            "value",
            "and",
            "list",
            "name",
            "of",
            "stadium",
            "location",
            "of",
            "stadium",
            "with",
            "year",
            "of",
            "concert",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "select count(*) from concert where stadium_id = (select stadium_id from stadium order by capacity desc limit 1)",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "concert",
            "where",
            "stadium_id",
            "=",
            "(",
            "select",
            "stadium_id",
            "from",
            "stadium",
            "order",
            "by",
            "capacity",
            "desc",
            "limit",
            "1",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "concert",
            "where",
            "stadium_id",
            "=",
            "(",
            "select",
            "stadium_id",
            "from",
            "stadium",
            "order",
            "by",
            "capacity",
            "desc",
            "limit",
            "value",
            ")"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            18,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    0
                                ]
                            ]
                        },
                        "groupby": [],
                        "having": [],
                        "intersect": null,
                        "limit": 1,
                        "orderby": [
                            "desc",
                            [
                                [
                                    0,
                                    [
                                        0,
                                        4,
                                        false
                                    ],
                                    null
                                ]
                            ]
                        ],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            1,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": []
                    },
                    null
                ]
            ]
        },
        "question": "list top value items of the total number of stadium with capacity of stadium equal to ( the maximum of capacity of stadium )",
        "gold_question": "list the total number of concert with stadium id equal to ( stadium id top value items of of stadium ordered by capacity descendingly )",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "the",
            "total",
            "number",
            "of",
            "stadium",
            "with",
            "capacity",
            "of",
            "stadium",
            "equal",
            "to",
            "(",
            "the",
            "maximum",
            "of",
            "capacity",
            "of",
            "stadium",
            ")"
        ]
    },
    {
        "db_id": "concert_singer",
        "query": "select count(*) from concert where stadium_id = (select stadium_id from stadium order by capacity desc limit 1)",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "concert",
            "where",
            "stadium_id",
            "=",
            "(",
            "select",
            "stadium_id",
            "from",
            "stadium",
            "order",
            "by",
            "capacity",
            "desc",
            "limit",
            "1",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "concert",
            "where",
            "stadium_id",
            "=",
            "(",
            "select",
            "stadium_id",
            "from",
            "stadium",
            "order",
            "by",
            "capacity",
            "desc",
            "limit",
            "value",
            ")"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            18,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    0
                                ]
                            ]
                        },
                        "groupby": [],
                        "having": [],
                        "intersect": null,
                        "limit": 1,
                        "orderby": [
                            "desc",
                            [
                                [
                                    0,
                                    [
                                        0,
                                        4,
                                        false
                                    ],
                                    null
                                ]
                            ]
                        ],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            1,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": []
                    },
                    null
                ]
            ]
        },
        "question": "list top value items of the total number of stadium with capacity of stadium equal to ( the maximum of capacity of stadium )",
        "gold_question": "list the total number of concert with stadium id equal to ( stadium id top value items of of stadium ordered by capacity descendingly )",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "the",
            "total",
            "number",
            "of",
            "stadium",
            "with",
            "capacity",
            "of",
            "stadium",
            "equal",
            "to",
            "(",
            "the",
            "maximum",
            "of",
            "capacity",
            "of",
            "stadium",
            ")"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT count(*) FROM pets WHERE weight  >  10",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "pets",
            "WHERE",
            "weight",
            ">",
            "10"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "pets",
            "where",
            "weight",
            ">",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            14,
                            false
                        ],
                        null
                    ],
                    10.0,
                    null
                ]
            ]
        },
        "question": "list the total number of pet with weight greater than value",
        "gold_question": "list the total number of pet with weight greater than value",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "pet",
            "with",
            "weight",
            "greater",
            "than",
            "value"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT count(*) FROM pets WHERE weight  >  10",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "pets",
            "WHERE",
            "weight",
            ">",
            "10"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "pets",
            "where",
            "weight",
            ">",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            14,
                            false
                        ],
                        null
                    ],
                    10.0,
                    null
                ]
            ]
        },
        "question": "list the total number of pet with weight greater than value",
        "gold_question": "list the total number of pet with weight greater than value",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "pet",
            "with",
            "weight",
            "greater",
            "than",
            "value"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT weight FROM pets ORDER BY pet_age LIMIT 1",
        "query_toks": [
            "SELECT",
            "weight",
            "FROM",
            "pets",
            "ORDER",
            "BY",
            "pet_age",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "weight",
            "from",
            "pets",
            "order",
            "by",
            "pet_age",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of weight of pet ordered by pet age ascendingly",
        "gold_question": "list top value items of weight of pet ordered by pet age ascendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "weight",
            "of",
            "pet",
            "ordered",
            "by",
            "pet",
            "age",
            "ascendingly"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT weight FROM pets ORDER BY pet_age LIMIT 1",
        "query_toks": [
            "SELECT",
            "weight",
            "FROM",
            "pets",
            "ORDER",
            "BY",
            "pet_age",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "weight",
            "from",
            "pets",
            "order",
            "by",
            "pet_age",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of weight of pet ordered by pet age ascendingly",
        "gold_question": "list top value items of weight of pet ordered by pet age ascendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "weight",
            "of",
            "pet",
            "ordered",
            "by",
            "pet",
            "age",
            "ascendingly"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT max(weight) ,  petType FROM pets GROUP BY petType",
        "query_toks": [
            "SELECT",
            "max",
            "(",
            "weight",
            ")",
            ",",
            "petType",
            "FROM",
            "pets",
            "GROUP",
            "BY",
            "petType"
        ],
        "query_toks_no_value": [
            "select",
            "max",
            "(",
            "weight",
            ")",
            ",",
            "pettype",
            "from",
            "pets",
            "group",
            "by",
            "pettype"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    12,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list the maximum of weight pet type of pet for each pet type",
        "gold_question": "list the maximum of weight pet type of pet for each pet type",
        "question_toks": [
            "list",
            "the",
            "maximum",
            "of",
            "weight",
            "pet",
            "type",
            "of",
            "pet",
            "for",
            "each",
            "pet",
            "type"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT max(weight) ,  petType FROM pets GROUP BY petType",
        "query_toks": [
            "SELECT",
            "max",
            "(",
            "weight",
            ")",
            ",",
            "petType",
            "FROM",
            "pets",
            "GROUP",
            "BY",
            "petType"
        ],
        "query_toks_no_value": [
            "select",
            "max",
            "(",
            "weight",
            ")",
            ",",
            "pettype",
            "from",
            "pets",
            "group",
            "by",
            "pettype"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    12,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list the maximum of weight pet type of pet for each pet type",
        "gold_question": "list the maximum of weight pet type of pet for each pet type",
        "question_toks": [
            "list",
            "the",
            "maximum",
            "of",
            "weight",
            "pet",
            "type",
            "of",
            "pet",
            "for",
            "each",
            "pet",
            "type"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "student",
            "AS",
            "T1",
            "JOIN",
            "has_pet",
            "AS",
            "T2",
            "ON",
            "T1.stuid",
            "=",
            "T2.stuid",
            "WHERE",
            "T1.age",
            ">",
            "20"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "stuid",
            "=",
            "t2",
            ".",
            "stuid",
            "where",
            "t1",
            ".",
            "age",
            ">",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ],
                    20.0,
                    null
                ]
            ]
        },
        "question": "list the total number of student with age of student greater than value",
        "gold_question": "list the total number of student with age of student greater than value",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "student",
            "with",
            "age",
            "of",
            "student",
            "greater",
            "than",
            "value"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "student",
            "AS",
            "T1",
            "JOIN",
            "has_pet",
            "AS",
            "T2",
            "ON",
            "T1.stuid",
            "=",
            "T2.stuid",
            "WHERE",
            "T1.age",
            ">",
            "20"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "stuid",
            "=",
            "t2",
            ".",
            "stuid",
            "where",
            "t1",
            ".",
            "age",
            ">",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ],
                    20.0,
                    null
                ]
            ]
        },
        "question": "list the total number of student with age of student greater than value",
        "gold_question": "list the total number of student with age of student greater than value",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "student",
            "with",
            "age",
            "of",
            "student",
            "greater",
            "than",
            "value"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog'",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "student",
            "AS",
            "T1",
            "JOIN",
            "has_pet",
            "AS",
            "T2",
            "ON",
            "T1.stuid",
            "=",
            "T2.stuid",
            "JOIN",
            "pets",
            "AS",
            "T3",
            "ON",
            "T2.petid",
            "=",
            "T3.petid",
            "WHERE",
            "T1.sex",
            "=",
            "'F",
            "'",
            "AND",
            "T3.pettype",
            "=",
            "'dog",
            "'"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "stuid",
            "=",
            "t2",
            ".",
            "stuid",
            "join",
            "pets",
            "as",
            "t3",
            "on",
            "t2",
            ".",
            "petid",
            "=",
            "t3",
            ".",
            "petid",
            "where",
            "t1",
            ".",
            "sex",
            "=",
            "value",
            "and",
            "t3",
            ".",
            "pettype",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "\"F\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            12,
                            false
                        ],
                        null
                    ],
                    "\"dog\"",
                    null
                ]
            ]
        },
        "question": "list the total number of student with sex of student equal to value and pet type of pet equal to value",
        "gold_question": "list the total number of student with sex of student equal to value and pet type of pet equal to value",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "student",
            "with",
            "sex",
            "of",
            "student",
            "equal",
            "to",
            "value",
            "and",
            "pet",
            "type",
            "of",
            "pet",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog'",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "student",
            "AS",
            "T1",
            "JOIN",
            "has_pet",
            "AS",
            "T2",
            "ON",
            "T1.stuid",
            "=",
            "T2.stuid",
            "JOIN",
            "pets",
            "AS",
            "T3",
            "ON",
            "T2.petid",
            "=",
            "T3.petid",
            "WHERE",
            "T1.sex",
            "=",
            "'F",
            "'",
            "AND",
            "T3.pettype",
            "=",
            "'dog",
            "'"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "stuid",
            "=",
            "t2",
            ".",
            "stuid",
            "join",
            "pets",
            "as",
            "t3",
            "on",
            "t2",
            ".",
            "petid",
            "=",
            "t3",
            ".",
            "petid",
            "where",
            "t1",
            ".",
            "sex",
            "=",
            "value",
            "and",
            "t3",
            ".",
            "pettype",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "\"F\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            12,
                            false
                        ],
                        null
                    ],
                    "\"dog\"",
                    null
                ]
            ]
        },
        "question": "list the total number of student with sex of student equal to value and pet type of pet equal to value",
        "gold_question": "list the total number of student with sex of student equal to value and pet type of pet equal to value",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "student",
            "with",
            "sex",
            "of",
            "student",
            "equal",
            "to",
            "value",
            "and",
            "pet",
            "type",
            "of",
            "pet",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT count(DISTINCT pettype) FROM pets",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "DISTINCT",
            "pettype",
            ")",
            "FROM",
            "pets"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "distinct",
            "pettype",
            ")",
            "from",
            "pets"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                12,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list the number of pet type",
        "gold_question": "list the number of pet type of pet",
        "question_toks": [
            "list",
            "the",
            "number",
            "of",
            "pet",
            "type"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT count(DISTINCT pettype) FROM pets",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "DISTINCT",
            "pettype",
            ")",
            "FROM",
            "pets"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "distinct",
            "pettype",
            ")",
            "from",
            "pets"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                12,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list the number of pet type",
        "gold_question": "list the number of pet type of pet",
        "question_toks": [
            "list",
            "the",
            "number",
            "of",
            "pet",
            "type"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog'",
        "query_toks": [
            "SELECT",
            "DISTINCT",
            "T1.Fname",
            "FROM",
            "student",
            "AS",
            "T1",
            "JOIN",
            "has_pet",
            "AS",
            "T2",
            "ON",
            "T1.stuid",
            "=",
            "T2.stuid",
            "JOIN",
            "pets",
            "AS",
            "T3",
            "ON",
            "T3.petid",
            "=",
            "T2.petid",
            "WHERE",
            "T3.pettype",
            "=",
            "'cat",
            "'",
            "OR",
            "T3.pettype",
            "=",
            "'dog",
            "'"
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "t1",
            ".",
            "fname",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "stuid",
            "=",
            "t2",
            ".",
            "stuid",
            "join",
            "pets",
            "as",
            "t3",
            "on",
            "t3",
            ".",
            "petid",
            "=",
            "t2",
            ".",
            "petid",
            "where",
            "t3",
            ".",
            "pettype",
            "=",
            "value",
            "or",
            "t3",
            ".",
            "pettype",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            12,
                            false
                        ],
                        null
                    ],
                    "\"cat\"",
                    null
                ],
                "or",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            12,
                            false
                        ],
                        null
                    ],
                    "\"dog\"",
                    null
                ]
            ]
        },
        "question": "list first name of student with pet type of pet equal to value or pet type of pet equal to value",
        "gold_question": "list first name of student with pet type of pet equal to value or pet type of pet equal to value",
        "question_toks": [
            "list",
            "first",
            "name",
            "of",
            "student",
            "with",
            "pet",
            "type",
            "of",
            "pet",
            "equal",
            "to",
            "value",
            "or",
            "pet",
            "type",
            "of",
            "pet",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog'",
        "query_toks": [
            "SELECT",
            "DISTINCT",
            "T1.Fname",
            "FROM",
            "student",
            "AS",
            "T1",
            "JOIN",
            "has_pet",
            "AS",
            "T2",
            "ON",
            "T1.stuid",
            "=",
            "T2.stuid",
            "JOIN",
            "pets",
            "AS",
            "T3",
            "ON",
            "T3.petid",
            "=",
            "T2.petid",
            "WHERE",
            "T3.pettype",
            "=",
            "'cat",
            "'",
            "OR",
            "T3.pettype",
            "=",
            "'dog",
            "'"
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "t1",
            ".",
            "fname",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "stuid",
            "=",
            "t2",
            ".",
            "stuid",
            "join",
            "pets",
            "as",
            "t3",
            "on",
            "t3",
            ".",
            "petid",
            "=",
            "t2",
            ".",
            "petid",
            "where",
            "t3",
            ".",
            "pettype",
            "=",
            "value",
            "or",
            "t3",
            ".",
            "pettype",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            12,
                            false
                        ],
                        null
                    ],
                    "\"cat\"",
                    null
                ],
                "or",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            12,
                            false
                        ],
                        null
                    ],
                    "\"dog\"",
                    null
                ]
            ]
        },
        "question": "list first name of student with pet type of pet equal to value or pet type of pet equal to value",
        "gold_question": "list first name of student with pet type of pet equal to value or pet type of pet equal to value",
        "question_toks": [
            "list",
            "first",
            "name",
            "of",
            "student",
            "with",
            "pet",
            "type",
            "of",
            "pet",
            "equal",
            "to",
            "value",
            "or",
            "pet",
            "type",
            "of",
            "pet",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "select t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid join pets as t3 on t3.petid  =  t2.petid where t3.pettype  =  'cat' intersect select t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid join pets as t3 on t3.petid  =  t2.petid where t3.pettype  =  'dog'",
        "query_toks": [
            "select",
            "t1.fname",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1.stuid",
            "=",
            "t2.stuid",
            "join",
            "pets",
            "as",
            "t3",
            "on",
            "t3.petid",
            "=",
            "t2.petid",
            "where",
            "t3.pettype",
            "=",
            "\"cat\"",
            "intersect",
            "select",
            "t1.fname",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1.stuid",
            "=",
            "t2.stuid",
            "join",
            "pets",
            "as",
            "t3",
            "on",
            "t3.petid",
            "=",
            "t2.petid",
            "where",
            "t3.pettype",
            "=",
            "\"dog\""
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "fname",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "stuid",
            "=",
            "t2",
            ".",
            "stuid",
            "join",
            "pets",
            "as",
            "t3",
            "on",
            "t3",
            ".",
            "petid",
            "=",
            "t2",
            ".",
            "petid",
            "where",
            "t3",
            ".",
            "pettype",
            "=",
            "value",
            "intersect",
            "select",
            "t1",
            ".",
            "fname",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "stuid",
            "=",
            "t2",
            ".",
            "stuid",
            "join",
            "pets",
            "as",
            "t3",
            "on",
            "t3",
            ".",
            "petid",
            "=",
            "t2",
            ".",
            "petid",
            "where",
            "t3",
            ".",
            "pettype",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": {
                "except": null,
                "from": {
                    "conds": [
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    1,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ],
                        "and",
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    11,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ],
                    "table_units": [
                        [
                            "table_unit",
                            0
                        ],
                        [
                            "table_unit",
                            1
                        ],
                        [
                            "table_unit",
                            2
                        ]
                    ]
                },
                "groupby": [],
                "having": [],
                "intersect": null,
                "limit": null,
                "orderby": [],
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    3,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "union": null,
                "where": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ],
                        "\"dog\"",
                        null
                    ]
                ]
            },
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            12,
                            false
                        ],
                        null
                    ],
                    "\"cat\"",
                    null
                ]
            ]
        },
        "question": "list first name of student with pet type of pet equal to value and list first name of student with pet type of pet equal to value",
        "gold_question": "list first name of student with pet type of pet equal to value and list first name of student with pet type of pet equal to value",
        "question_toks": [
            "list",
            "first",
            "name",
            "of",
            "student",
            "with",
            "pet",
            "type",
            "of",
            "pet",
            "equal",
            "to",
            "value",
            "and",
            "list",
            "first",
            "name",
            "of",
            "student",
            "with",
            "pet",
            "type",
            "of",
            "pet",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' INTERSECT SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog'",
        "query_toks": [
            "SELECT",
            "T1.Fname",
            "FROM",
            "student",
            "AS",
            "T1",
            "JOIN",
            "has_pet",
            "AS",
            "T2",
            "ON",
            "T1.stuid",
            "=",
            "T2.stuid",
            "JOIN",
            "pets",
            "AS",
            "T3",
            "ON",
            "T3.petid",
            "=",
            "T2.petid",
            "WHERE",
            "T3.pettype",
            "=",
            "'cat",
            "'",
            "INTERSECT",
            "SELECT",
            "T1.Fname",
            "FROM",
            "student",
            "AS",
            "T1",
            "JOIN",
            "has_pet",
            "AS",
            "T2",
            "ON",
            "T1.stuid",
            "=",
            "T2.stuid",
            "JOIN",
            "pets",
            "AS",
            "T3",
            "ON",
            "T3.petid",
            "=",
            "T2.petid",
            "WHERE",
            "T3.pettype",
            "=",
            "'dog",
            "'"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "fname",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "stuid",
            "=",
            "t2",
            ".",
            "stuid",
            "join",
            "pets",
            "as",
            "t3",
            "on",
            "t3",
            ".",
            "petid",
            "=",
            "t2",
            ".",
            "petid",
            "where",
            "t3",
            ".",
            "pettype",
            "=",
            "value",
            "intersect",
            "select",
            "t1",
            ".",
            "fname",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "stuid",
            "=",
            "t2",
            ".",
            "stuid",
            "join",
            "pets",
            "as",
            "t3",
            "on",
            "t3",
            ".",
            "petid",
            "=",
            "t2",
            ".",
            "petid",
            "where",
            "t3",
            ".",
            "pettype",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": {
                "except": null,
                "from": {
                    "conds": [
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    1,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ],
                        "and",
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    11,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ],
                    "table_units": [
                        [
                            "table_unit",
                            0
                        ],
                        [
                            "table_unit",
                            1
                        ],
                        [
                            "table_unit",
                            2
                        ]
                    ]
                },
                "groupby": [],
                "having": [],
                "intersect": null,
                "limit": null,
                "orderby": [],
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    3,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "union": null,
                "where": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ],
                        "\"dog\"",
                        null
                    ]
                ]
            },
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            12,
                            false
                        ],
                        null
                    ],
                    "\"cat\"",
                    null
                ]
            ]
        },
        "question": "list first name of student with pet type of pet equal to value and list first name of student with pet type of pet equal to value",
        "gold_question": "list first name of student with pet type of pet equal to value and list first name of student with pet type of pet equal to value",
        "question_toks": [
            "list",
            "first",
            "name",
            "of",
            "student",
            "with",
            "pet",
            "type",
            "of",
            "pet",
            "equal",
            "to",
            "value",
            "and",
            "list",
            "first",
            "name",
            "of",
            "student",
            "with",
            "pet",
            "type",
            "of",
            "pet",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')",
        "query_toks": [
            "SELECT",
            "major",
            ",",
            "age",
            "FROM",
            "student",
            "WHERE",
            "stuid",
            "NOT",
            "IN",
            "(",
            "SELECT",
            "T1.stuid",
            "FROM",
            "student",
            "AS",
            "T1",
            "JOIN",
            "has_pet",
            "AS",
            "T2",
            "ON",
            "T1.stuid",
            "=",
            "T2.stuid",
            "JOIN",
            "pets",
            "AS",
            "T3",
            "ON",
            "T3.petid",
            "=",
            "T2.petid",
            "WHERE",
            "T3.pettype",
            "=",
            "'cat",
            "'",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "major",
            ",",
            "age",
            "from",
            "student",
            "where",
            "stuid",
            "not",
            "in",
            "(",
            "select",
            "t1",
            ".",
            "stuid",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "stuid",
            "=",
            "t2",
            ".",
            "stuid",
            "join",
            "pets",
            "as",
            "t3",
            "on",
            "t3",
            ".",
            "petid",
            "=",
            "t2",
            ".",
            "petid",
            "where",
            "t3",
            ".",
            "pettype",
            "=",
            "value",
            ")"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    true,
                    8,
                    [
                        0,
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [
                                [
                                    false,
                                    2,
                                    [
                                        0,
                                        [
                                            0,
                                            1,
                                            false
                                        ],
                                        null
                                    ],
                                    [
                                        0,
                                        9,
                                        false
                                    ],
                                    null
                                ],
                                "and",
                                [
                                    false,
                                    2,
                                    [
                                        0,
                                        [
                                            0,
                                            11,
                                            false
                                        ],
                                        null
                                    ],
                                    [
                                        0,
                                        10,
                                        false
                                    ],
                                    null
                                ]
                            ],
                            "table_units": [
                                [
                                    "table_unit",
                                    0
                                ],
                                [
                                    "table_unit",
                                    1
                                ],
                                [
                                    "table_unit",
                                    2
                                ]
                            ]
                        },
                        "groupby": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderby": [],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            1,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": [
                            [
                                false,
                                2,
                                [
                                    0,
                                    [
                                        0,
                                        12,
                                        false
                                    ],
                                    null
                                ],
                                "\"cat\"",
                                null
                            ]
                        ]
                    },
                    null
                ]
            ]
        },
        "question": "list major of student age of student with student id that is not in ( student id of ha pet with pet type of pet equal to value )",
        "gold_question": "list major of student age of student with student id that is not in ( student id with pet type of pet equal to value )",
        "question_toks": [
            "list",
            "major",
            "of",
            "student",
            "age",
            "of",
            "student",
            "with",
            "student",
            "id",
            "that",
            "is",
            "not",
            "in",
            "(",
            "student",
            "id",
            "of",
            "ha",
            "pet",
            "with",
            "pet",
            "type",
            "of",
            "pet",
            "equal",
            "to",
            "value",
            ")"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')",
        "query_toks": [
            "SELECT",
            "major",
            ",",
            "age",
            "FROM",
            "student",
            "WHERE",
            "stuid",
            "NOT",
            "IN",
            "(",
            "SELECT",
            "T1.stuid",
            "FROM",
            "student",
            "AS",
            "T1",
            "JOIN",
            "has_pet",
            "AS",
            "T2",
            "ON",
            "T1.stuid",
            "=",
            "T2.stuid",
            "JOIN",
            "pets",
            "AS",
            "T3",
            "ON",
            "T3.petid",
            "=",
            "T2.petid",
            "WHERE",
            "T3.pettype",
            "=",
            "'cat",
            "'",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "major",
            ",",
            "age",
            "from",
            "student",
            "where",
            "stuid",
            "not",
            "in",
            "(",
            "select",
            "t1",
            ".",
            "stuid",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "stuid",
            "=",
            "t2",
            ".",
            "stuid",
            "join",
            "pets",
            "as",
            "t3",
            "on",
            "t3",
            ".",
            "petid",
            "=",
            "t2",
            ".",
            "petid",
            "where",
            "t3",
            ".",
            "pettype",
            "=",
            "value",
            ")"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    true,
                    8,
                    [
                        0,
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [
                                [
                                    false,
                                    2,
                                    [
                                        0,
                                        [
                                            0,
                                            1,
                                            false
                                        ],
                                        null
                                    ],
                                    [
                                        0,
                                        9,
                                        false
                                    ],
                                    null
                                ],
                                "and",
                                [
                                    false,
                                    2,
                                    [
                                        0,
                                        [
                                            0,
                                            11,
                                            false
                                        ],
                                        null
                                    ],
                                    [
                                        0,
                                        10,
                                        false
                                    ],
                                    null
                                ]
                            ],
                            "table_units": [
                                [
                                    "table_unit",
                                    0
                                ],
                                [
                                    "table_unit",
                                    1
                                ],
                                [
                                    "table_unit",
                                    2
                                ]
                            ]
                        },
                        "groupby": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderby": [],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            1,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": [
                            [
                                false,
                                2,
                                [
                                    0,
                                    [
                                        0,
                                        12,
                                        false
                                    ],
                                    null
                                ],
                                "\"cat\"",
                                null
                            ]
                        ]
                    },
                    null
                ]
            ]
        },
        "question": "list major of student age of student with student id that is not in ( student id of ha pet with pet type of pet equal to value )",
        "gold_question": "list major of student age of student with student id that is not in ( student id with pet type of pet equal to value )",
        "question_toks": [
            "list",
            "major",
            "of",
            "student",
            "age",
            "of",
            "student",
            "with",
            "student",
            "id",
            "that",
            "is",
            "not",
            "in",
            "(",
            "student",
            "id",
            "of",
            "ha",
            "pet",
            "with",
            "pet",
            "type",
            "of",
            "pet",
            "equal",
            "to",
            "value",
            ")"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'",
        "query_toks": [
            "SELECT",
            "stuid",
            "FROM",
            "student",
            "EXCEPT",
            "SELECT",
            "T1.stuid",
            "FROM",
            "student",
            "AS",
            "T1",
            "JOIN",
            "has_pet",
            "AS",
            "T2",
            "ON",
            "T1.stuid",
            "=",
            "T2.stuid",
            "JOIN",
            "pets",
            "AS",
            "T3",
            "ON",
            "T3.petid",
            "=",
            "T2.petid",
            "WHERE",
            "T3.pettype",
            "=",
            "'cat",
            "'"
        ],
        "query_toks_no_value": [
            "select",
            "stuid",
            "from",
            "student",
            "except",
            "select",
            "t1",
            ".",
            "stuid",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "stuid",
            "=",
            "t2",
            ".",
            "stuid",
            "join",
            "pets",
            "as",
            "t3",
            "on",
            "t3",
            ".",
            "petid",
            "=",
            "t2",
            ".",
            "petid",
            "where",
            "t3",
            ".",
            "pettype",
            "=",
            "value"
        ],
        "sql": {
            "except": {
                "except": null,
                "from": {
                    "conds": [
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    1,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ],
                        "and",
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    11,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ],
                    "table_units": [
                        [
                            "table_unit",
                            0
                        ],
                        [
                            "table_unit",
                            1
                        ],
                        [
                            "table_unit",
                            2
                        ]
                    ]
                },
                "groupby": [],
                "having": [],
                "intersect": null,
                "limit": null,
                "orderby": [],
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    1,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "union": null,
                "where": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ],
                        "\"cat\"",
                        null
                    ]
                ]
            },
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list student id with pet type of pet equal to value except that list student id of ha pet with pet type of pet equal to value",
        "gold_question": "list student id except that list student id with pet type of pet equal to value",
        "question_toks": [
            "list",
            "student",
            "id",
            "with",
            "pet",
            "type",
            "of",
            "pet",
            "equal",
            "to",
            "value",
            "except",
            "that",
            "list",
            "student",
            "id",
            "of",
            "ha",
            "pet",
            "with",
            "pet",
            "type",
            "of",
            "pet",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'",
        "query_toks": [
            "SELECT",
            "stuid",
            "FROM",
            "student",
            "EXCEPT",
            "SELECT",
            "T1.stuid",
            "FROM",
            "student",
            "AS",
            "T1",
            "JOIN",
            "has_pet",
            "AS",
            "T2",
            "ON",
            "T1.stuid",
            "=",
            "T2.stuid",
            "JOIN",
            "pets",
            "AS",
            "T3",
            "ON",
            "T3.petid",
            "=",
            "T2.petid",
            "WHERE",
            "T3.pettype",
            "=",
            "'cat",
            "'"
        ],
        "query_toks_no_value": [
            "select",
            "stuid",
            "from",
            "student",
            "except",
            "select",
            "t1",
            ".",
            "stuid",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "stuid",
            "=",
            "t2",
            ".",
            "stuid",
            "join",
            "pets",
            "as",
            "t3",
            "on",
            "t3",
            ".",
            "petid",
            "=",
            "t2",
            ".",
            "petid",
            "where",
            "t3",
            ".",
            "pettype",
            "=",
            "value"
        ],
        "sql": {
            "except": {
                "except": null,
                "from": {
                    "conds": [
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    1,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ],
                        "and",
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    11,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ],
                    "table_units": [
                        [
                            "table_unit",
                            0
                        ],
                        [
                            "table_unit",
                            1
                        ],
                        [
                            "table_unit",
                            2
                        ]
                    ]
                },
                "groupby": [],
                "having": [],
                "intersect": null,
                "limit": null,
                "orderby": [],
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    1,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "union": null,
                "where": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ],
                        "\"cat\"",
                        null
                    ]
                ]
            },
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list student id with pet type equal to value except that list student id of ha pet with pet type of pet equal to value",
        "gold_question": "list student id except that list student id with pet type of pet equal to value",
        "question_toks": [
            "list",
            "student",
            "id",
            "with",
            "pet",
            "type",
            "equal",
            "to",
            "value",
            "except",
            "that",
            "list",
            "student",
            "id",
            "of",
            "ha",
            "pet",
            "with",
            "pet",
            "type",
            "of",
            "pet",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')",
        "query_toks": [
            "SELECT",
            "T1.fname",
            ",",
            "T1.age",
            "FROM",
            "student",
            "AS",
            "T1",
            "JOIN",
            "has_pet",
            "AS",
            "T2",
            "ON",
            "T1.stuid",
            "=",
            "T2.stuid",
            "JOIN",
            "pets",
            "AS",
            "T3",
            "ON",
            "T3.petid",
            "=",
            "T2.petid",
            "WHERE",
            "T3.pettype",
            "=",
            "'dog",
            "'",
            "AND",
            "T1.stuid",
            "NOT",
            "IN",
            "(",
            "SELECT",
            "T1.stuid",
            "FROM",
            "student",
            "AS",
            "T1",
            "JOIN",
            "has_pet",
            "AS",
            "T2",
            "ON",
            "T1.stuid",
            "=",
            "T2.stuid",
            "JOIN",
            "pets",
            "AS",
            "T3",
            "ON",
            "T3.petid",
            "=",
            "T2.petid",
            "WHERE",
            "T3.pettype",
            "=",
            "'cat",
            "'",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "fname",
            ",",
            "t1",
            ".",
            "age",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "stuid",
            "=",
            "t2",
            ".",
            "stuid",
            "join",
            "pets",
            "as",
            "t3",
            "on",
            "t3",
            ".",
            "petid",
            "=",
            "t2",
            ".",
            "petid",
            "where",
            "t3",
            ".",
            "pettype",
            "=",
            "value",
            "and",
            "t1",
            ".",
            "stuid",
            "not",
            "in",
            "(",
            "select",
            "t1",
            ".",
            "stuid",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "stuid",
            "=",
            "t2",
            ".",
            "stuid",
            "join",
            "pets",
            "as",
            "t3",
            "on",
            "t3",
            ".",
            "petid",
            "=",
            "t2",
            ".",
            "petid",
            "where",
            "t3",
            ".",
            "pettype",
            "=",
            "value",
            ")"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            12,
                            false
                        ],
                        null
                    ],
                    "\"dog\"",
                    null
                ],
                "and",
                [
                    true,
                    8,
                    [
                        0,
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [
                                [
                                    false,
                                    2,
                                    [
                                        0,
                                        [
                                            0,
                                            1,
                                            false
                                        ],
                                        null
                                    ],
                                    [
                                        0,
                                        9,
                                        false
                                    ],
                                    null
                                ],
                                "and",
                                [
                                    false,
                                    2,
                                    [
                                        0,
                                        [
                                            0,
                                            11,
                                            false
                                        ],
                                        null
                                    ],
                                    [
                                        0,
                                        10,
                                        false
                                    ],
                                    null
                                ]
                            ],
                            "table_units": [
                                [
                                    "table_unit",
                                    0
                                ],
                                [
                                    "table_unit",
                                    1
                                ],
                                [
                                    "table_unit",
                                    2
                                ]
                            ]
                        },
                        "groupby": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderby": [],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            1,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": [
                            [
                                false,
                                2,
                                [
                                    0,
                                    [
                                        0,
                                        12,
                                        false
                                    ],
                                    null
                                ],
                                "\"cat\"",
                                null
                            ]
                        ]
                    },
                    null
                ]
            ]
        },
        "question": "list first name of student age of student with student id that is not in ( student id of ha pet with pet type of pet equal to value )",
        "gold_question": "list first name of student age of student with pet type of pet equal to value and student id that is not in ( student id with pet type of pet equal to value )",
        "question_toks": [
            "list",
            "first",
            "name",
            "of",
            "student",
            "age",
            "of",
            "student",
            "with",
            "student",
            "id",
            "that",
            "is",
            "not",
            "in",
            "(",
            "student",
            "id",
            "of",
            "ha",
            "pet",
            "with",
            "pet",
            "type",
            "of",
            "pet",
            "equal",
            "to",
            "value",
            ")"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')",
        "query_toks": [
            "SELECT",
            "T1.fname",
            ",",
            "T1.age",
            "FROM",
            "student",
            "AS",
            "T1",
            "JOIN",
            "has_pet",
            "AS",
            "T2",
            "ON",
            "T1.stuid",
            "=",
            "T2.stuid",
            "JOIN",
            "pets",
            "AS",
            "T3",
            "ON",
            "T3.petid",
            "=",
            "T2.petid",
            "WHERE",
            "T3.pettype",
            "=",
            "'dog",
            "'",
            "AND",
            "T1.stuid",
            "NOT",
            "IN",
            "(",
            "SELECT",
            "T1.stuid",
            "FROM",
            "student",
            "AS",
            "T1",
            "JOIN",
            "has_pet",
            "AS",
            "T2",
            "ON",
            "T1.stuid",
            "=",
            "T2.stuid",
            "JOIN",
            "pets",
            "AS",
            "T3",
            "ON",
            "T3.petid",
            "=",
            "T2.petid",
            "WHERE",
            "T3.pettype",
            "=",
            "'cat",
            "'",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "fname",
            ",",
            "t1",
            ".",
            "age",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "stuid",
            "=",
            "t2",
            ".",
            "stuid",
            "join",
            "pets",
            "as",
            "t3",
            "on",
            "t3",
            ".",
            "petid",
            "=",
            "t2",
            ".",
            "petid",
            "where",
            "t3",
            ".",
            "pettype",
            "=",
            "value",
            "and",
            "t1",
            ".",
            "stuid",
            "not",
            "in",
            "(",
            "select",
            "t1",
            ".",
            "stuid",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "stuid",
            "=",
            "t2",
            ".",
            "stuid",
            "join",
            "pets",
            "as",
            "t3",
            "on",
            "t3",
            ".",
            "petid",
            "=",
            "t2",
            ".",
            "petid",
            "where",
            "t3",
            ".",
            "pettype",
            "=",
            "value",
            ")"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            12,
                            false
                        ],
                        null
                    ],
                    "\"dog\"",
                    null
                ],
                "and",
                [
                    true,
                    8,
                    [
                        0,
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [
                                [
                                    false,
                                    2,
                                    [
                                        0,
                                        [
                                            0,
                                            1,
                                            false
                                        ],
                                        null
                                    ],
                                    [
                                        0,
                                        9,
                                        false
                                    ],
                                    null
                                ],
                                "and",
                                [
                                    false,
                                    2,
                                    [
                                        0,
                                        [
                                            0,
                                            11,
                                            false
                                        ],
                                        null
                                    ],
                                    [
                                        0,
                                        10,
                                        false
                                    ],
                                    null
                                ]
                            ],
                            "table_units": [
                                [
                                    "table_unit",
                                    0
                                ],
                                [
                                    "table_unit",
                                    1
                                ],
                                [
                                    "table_unit",
                                    2
                                ]
                            ]
                        },
                        "groupby": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderby": [],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            1,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": [
                            [
                                false,
                                2,
                                [
                                    0,
                                    [
                                        0,
                                        12,
                                        false
                                    ],
                                    null
                                ],
                                "\"cat\"",
                                null
                            ]
                        ]
                    },
                    null
                ]
            ]
        },
        "question": "list first name of student with pet type of pet equal to value except that list first name of student with pet type of pet equal to value",
        "gold_question": "list first name of student age of student with pet type of pet equal to value and student id that is not in ( student id with pet type of pet equal to value )",
        "question_toks": [
            "list",
            "first",
            "name",
            "of",
            "student",
            "with",
            "pet",
            "type",
            "of",
            "pet",
            "equal",
            "to",
            "value",
            "except",
            "that",
            "list",
            "first",
            "name",
            "of",
            "student",
            "with",
            "pet",
            "type",
            "of",
            "pet",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1",
        "query_toks": [
            "SELECT",
            "pettype",
            ",",
            "weight",
            "FROM",
            "pets",
            "ORDER",
            "BY",
            "pet_age",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "pettype",
            ",",
            "weight",
            "from",
            "pets",
            "order",
            "by",
            "pet_age",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of pet type weight of pet ordered by pet age ascendingly",
        "gold_question": "list top value items of pet type weight of pet ordered by pet age ascendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "pet",
            "type",
            "weight",
            "of",
            "pet",
            "ordered",
            "by",
            "pet",
            "age",
            "ascendingly"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1",
        "query_toks": [
            "SELECT",
            "pettype",
            ",",
            "weight",
            "FROM",
            "pets",
            "ORDER",
            "BY",
            "pet_age",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "pettype",
            ",",
            "weight",
            "from",
            "pets",
            "order",
            "by",
            "pet_age",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of pet type weight of pet ordered by pet age ascendingly",
        "gold_question": "list top value items of pet type weight of pet ordered by pet age ascendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "pet",
            "type",
            "weight",
            "of",
            "pet",
            "ordered",
            "by",
            "pet",
            "age",
            "ascendingly"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT petid ,  weight FROM pets WHERE pet_age  >  1",
        "query_toks": [
            "SELECT",
            "petid",
            ",",
            "weight",
            "FROM",
            "pets",
            "WHERE",
            "pet_age",
            ">",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "petid",
            ",",
            "weight",
            "from",
            "pets",
            "where",
            "pet_age",
            ">",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ]
        },
        "question": "list pet id weight of pet with pet age greater than value",
        "gold_question": "list pet id weight of pet with pet age greater than value",
        "question_toks": [
            "list",
            "pet",
            "id",
            "weight",
            "of",
            "pet",
            "with",
            "pet",
            "age",
            "greater",
            "than",
            "value"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT petid ,  weight FROM pets WHERE pet_age  >  1",
        "query_toks": [
            "SELECT",
            "petid",
            ",",
            "weight",
            "FROM",
            "pets",
            "WHERE",
            "pet_age",
            ">",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "petid",
            ",",
            "weight",
            "from",
            "pets",
            "where",
            "pet_age",
            ">",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ]
        },
        "question": "list pet id weight of pet with pet age greater than value",
        "gold_question": "list pet id weight of pet with pet age greater than value",
        "question_toks": [
            "list",
            "pet",
            "id",
            "weight",
            "of",
            "pet",
            "with",
            "pet",
            "age",
            "greater",
            "than",
            "value"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype",
        "query_toks": [
            "SELECT",
            "avg",
            "(",
            "pet_age",
            ")",
            ",",
            "max",
            "(",
            "pet_age",
            ")",
            ",",
            "pettype",
            "FROM",
            "pets",
            "GROUP",
            "BY",
            "pettype"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "pet_age",
            ")",
            ",",
            "max",
            "(",
            "pet_age",
            ")",
            ",",
            "pettype",
            "from",
            "pets",
            "group",
            "by",
            "pettype"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    12,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list pet type the average of pet age the maximum of pet age of pet for each pet type",
        "gold_question": "list the average of pet age the maximum of pet age pet type of pet for each pet type",
        "question_toks": [
            "list",
            "pet",
            "type",
            "the",
            "average",
            "of",
            "pet",
            "age",
            "the",
            "maximum",
            "of",
            "pet",
            "age",
            "of",
            "pet",
            "for",
            "each",
            "pet",
            "type"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype",
        "query_toks": [
            "SELECT",
            "avg",
            "(",
            "pet_age",
            ")",
            ",",
            "max",
            "(",
            "pet_age",
            ")",
            ",",
            "pettype",
            "FROM",
            "pets",
            "GROUP",
            "BY",
            "pettype"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "pet_age",
            ")",
            ",",
            "max",
            "(",
            "pet_age",
            ")",
            ",",
            "pettype",
            "from",
            "pets",
            "group",
            "by",
            "pettype"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    12,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list pet type the average of pet age the maximum of pet age of pet for each pet type",
        "gold_question": "list the average of pet age the maximum of pet age pet type of pet for each pet type",
        "question_toks": [
            "list",
            "pet",
            "type",
            "the",
            "average",
            "of",
            "pet",
            "age",
            "the",
            "maximum",
            "of",
            "pet",
            "age",
            "of",
            "pet",
            "for",
            "each",
            "pet",
            "type"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype",
        "query_toks": [
            "SELECT",
            "avg",
            "(",
            "weight",
            ")",
            ",",
            "pettype",
            "FROM",
            "pets",
            "GROUP",
            "BY",
            "pettype"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "weight",
            ")",
            ",",
            "pettype",
            "from",
            "pets",
            "group",
            "by",
            "pettype"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    12,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list the average of weight pet type of pet for each pet type",
        "gold_question": "list the average of weight pet type of pet for each pet type",
        "question_toks": [
            "list",
            "the",
            "average",
            "of",
            "weight",
            "pet",
            "type",
            "of",
            "pet",
            "for",
            "each",
            "pet",
            "type"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype",
        "query_toks": [
            "SELECT",
            "avg",
            "(",
            "weight",
            ")",
            ",",
            "pettype",
            "FROM",
            "pets",
            "GROUP",
            "BY",
            "pettype"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "weight",
            ")",
            ",",
            "pettype",
            "from",
            "pets",
            "group",
            "by",
            "pettype"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    12,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list the average of weight pet type of pet for each pet type",
        "gold_question": "list the average of weight pet type of pet for each pet type",
        "question_toks": [
            "list",
            "the",
            "average",
            "of",
            "weight",
            "pet",
            "type",
            "of",
            "pet",
            "for",
            "each",
            "pet",
            "type"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid",
        "query_toks": [
            "SELECT",
            "DISTINCT",
            "T1.fname",
            ",",
            "T1.age",
            "FROM",
            "student",
            "AS",
            "T1",
            "JOIN",
            "has_pet",
            "AS",
            "T2",
            "ON",
            "T1.stuid",
            "=",
            "T2.stuid"
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "t1",
            ".",
            "fname",
            ",",
            "t1",
            ".",
            "age",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "stuid",
            "=",
            "t2",
            ".",
            "stuid"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list first name of student age of student",
        "gold_question": "list first name of student age of student",
        "question_toks": [
            "list",
            "first",
            "name",
            "of",
            "student",
            "age",
            "of",
            "student"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid",
        "query_toks": [
            "SELECT",
            "DISTINCT",
            "T1.fname",
            ",",
            "T1.age",
            "FROM",
            "student",
            "AS",
            "T1",
            "JOIN",
            "has_pet",
            "AS",
            "T2",
            "ON",
            "T1.stuid",
            "=",
            "T2.stuid"
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "t1",
            ".",
            "fname",
            ",",
            "t1",
            ".",
            "age",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "stuid",
            "=",
            "t2",
            ".",
            "stuid"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list first name age of student with student id that is not in ( student id of ha pet )",
        "gold_question": "list first name of student age of student",
        "question_toks": [
            "list",
            "first",
            "name",
            "age",
            "of",
            "student",
            "with",
            "student",
            "id",
            "that",
            "is",
            "not",
            "in",
            "(",
            "student",
            "id",
            "of",
            "ha",
            "pet",
            ")"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith'",
        "query_toks": [
            "SELECT",
            "T2.petid",
            "FROM",
            "student",
            "AS",
            "T1",
            "JOIN",
            "has_pet",
            "AS",
            "T2",
            "ON",
            "T1.stuid",
            "=",
            "T2.stuid",
            "WHERE",
            "T1.Lname",
            "=",
            "'Smith",
            "'"
        ],
        "query_toks_no_value": [
            "select",
            "t2",
            ".",
            "petid",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "stuid",
            "=",
            "t2",
            ".",
            "stuid",
            "where",
            "t1",
            ".",
            "lname",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"Smith\"",
                    null
                ]
            ]
        },
        "question": "list pet id of ha pet with last name of student equal to value",
        "gold_question": "list pet id of has pet with last name of student equal to value",
        "question_toks": [
            "list",
            "pet",
            "id",
            "of",
            "ha",
            "pet",
            "with",
            "last",
            "name",
            "of",
            "student",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith'",
        "query_toks": [
            "SELECT",
            "T2.petid",
            "FROM",
            "student",
            "AS",
            "T1",
            "JOIN",
            "has_pet",
            "AS",
            "T2",
            "ON",
            "T1.stuid",
            "=",
            "T2.stuid",
            "WHERE",
            "T1.Lname",
            "=",
            "'Smith",
            "'"
        ],
        "query_toks_no_value": [
            "select",
            "t2",
            ".",
            "petid",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "stuid",
            "=",
            "t2",
            ".",
            "stuid",
            "where",
            "t1",
            ".",
            "lname",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"Smith\"",
                    null
                ]
            ]
        },
        "question": "list pet id of ha pet with last name of student equal to value",
        "gold_question": "list pet id of has pet with last name of student equal to value",
        "question_toks": [
            "list",
            "pet",
            "id",
            "of",
            "ha",
            "pet",
            "with",
            "last",
            "name",
            "of",
            "student",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT count(*) ,  T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            ",",
            "T1.stuid",
            "FROM",
            "student",
            "AS",
            "T1",
            "JOIN",
            "has_pet",
            "AS",
            "T2",
            "ON",
            "T1.stuid",
            "=",
            "T2.stuid",
            "GROUP",
            "BY",
            "T1.stuid"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            ",",
            "t1",
            ".",
            "stuid",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "stuid",
            "=",
            "t2",
            ".",
            "stuid",
            "group",
            "by",
            "t1",
            ".",
            "stuid"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    1,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list the total number of ha pet student id of ha pet for each student id",
        "gold_question": "list the total number of has pet student id for each student id",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "ha",
            "pet",
            "student",
            "id",
            "of",
            "ha",
            "pet",
            "for",
            "each",
            "student",
            "id"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "select count(*) ,  t1.stuid from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid group by t1.stuid",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            ",",
            "t1.stuid",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1.stuid",
            "=",
            "t2.stuid",
            "group",
            "by",
            "t1.stuid"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            ",",
            "t1",
            ".",
            "stuid",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "stuid",
            "=",
            "t2",
            ".",
            "stuid",
            "group",
            "by",
            "t1",
            ".",
            "stuid"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    1,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list the total number of ha pet student id with last name of student not equal to value for each student id of ha pet",
        "gold_question": "list the total number of has pet student id for each student id",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "ha",
            "pet",
            "student",
            "id",
            "with",
            "last",
            "name",
            "of",
            "student",
            "not",
            "equal",
            "to",
            "value",
            "for",
            "each",
            "student",
            "id",
            "of",
            "ha",
            "pet"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1",
        "query_toks": [
            "SELECT",
            "T1.fname",
            ",",
            "T1.sex",
            "FROM",
            "student",
            "AS",
            "T1",
            "JOIN",
            "has_pet",
            "AS",
            "T2",
            "ON",
            "T1.stuid",
            "=",
            "T2.stuid",
            "GROUP",
            "BY",
            "T1.stuid",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "fname",
            ",",
            "t1",
            ".",
            "sex",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "stuid",
            "=",
            "t2",
            ".",
            "stuid",
            "group",
            "by",
            "t1",
            ".",
            "stuid",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    1,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list first name of student sex of student for each student id of ha pet that have the total number of ha pet greater than value",
        "gold_question": "list first name of student sex of student for each student id that have the total number of student greater than value",
        "question_toks": [
            "list",
            "first",
            "name",
            "of",
            "student",
            "sex",
            "of",
            "student",
            "for",
            "each",
            "student",
            "id",
            "of",
            "ha",
            "pet",
            "that",
            "have",
            "the",
            "total",
            "number",
            "of",
            "ha",
            "pet",
            "greater",
            "than",
            "value"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1",
        "query_toks": [
            "SELECT",
            "T1.fname",
            ",",
            "T1.sex",
            "FROM",
            "student",
            "AS",
            "T1",
            "JOIN",
            "has_pet",
            "AS",
            "T2",
            "ON",
            "T1.stuid",
            "=",
            "T2.stuid",
            "GROUP",
            "BY",
            "T1.stuid",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "fname",
            ",",
            "t1",
            ".",
            "sex",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "stuid",
            "=",
            "t2",
            ".",
            "stuid",
            "group",
            "by",
            "t1",
            ".",
            "stuid",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    1,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list first name of student sex of student for each student id of ha pet that have the total number of ha pet greater than value",
        "gold_question": "list first name of student sex of student for each student id that have the total number of student greater than value",
        "question_toks": [
            "list",
            "first",
            "name",
            "of",
            "student",
            "sex",
            "of",
            "student",
            "for",
            "each",
            "student",
            "id",
            "of",
            "ha",
            "pet",
            "that",
            "have",
            "the",
            "total",
            "number",
            "of",
            "ha",
            "pet",
            "greater",
            "than",
            "value"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat'",
        "query_toks": [
            "SELECT",
            "T1.lname",
            "FROM",
            "student",
            "AS",
            "T1",
            "JOIN",
            "has_pet",
            "AS",
            "T2",
            "ON",
            "T1.stuid",
            "=",
            "T2.stuid",
            "JOIN",
            "pets",
            "AS",
            "T3",
            "ON",
            "T3.petid",
            "=",
            "T2.petid",
            "WHERE",
            "T3.pet_age",
            "=",
            "3",
            "AND",
            "T3.pettype",
            "=",
            "'cat",
            "'"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "lname",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "stuid",
            "=",
            "t2",
            ".",
            "stuid",
            "join",
            "pets",
            "as",
            "t3",
            "on",
            "t3",
            ".",
            "petid",
            "=",
            "t2",
            ".",
            "petid",
            "where",
            "t3",
            ".",
            "pet_age",
            "=",
            "value",
            "and",
            "t3",
            ".",
            "pettype",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            12,
                            false
                        ],
                        null
                    ],
                    "\"cat\"",
                    null
                ]
            ]
        },
        "question": "list last name of student with pet age of pet equal to value",
        "gold_question": "list last name of student with pet age of pet equal to value and pet type of pet equal to value",
        "question_toks": [
            "list",
            "last",
            "name",
            "of",
            "student",
            "with",
            "pet",
            "age",
            "of",
            "pet",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat'",
        "query_toks": [
            "SELECT",
            "T1.lname",
            "FROM",
            "student",
            "AS",
            "T1",
            "JOIN",
            "has_pet",
            "AS",
            "T2",
            "ON",
            "T1.stuid",
            "=",
            "T2.stuid",
            "JOIN",
            "pets",
            "AS",
            "T3",
            "ON",
            "T3.petid",
            "=",
            "T2.petid",
            "WHERE",
            "T3.pet_age",
            "=",
            "3",
            "AND",
            "T3.pettype",
            "=",
            "'cat",
            "'"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "lname",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "has_pet",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "stuid",
            "=",
            "t2",
            ".",
            "stuid",
            "join",
            "pets",
            "as",
            "t3",
            "on",
            "t3",
            ".",
            "petid",
            "=",
            "t2",
            ".",
            "petid",
            "where",
            "t3",
            ".",
            "pet_age",
            "=",
            "value",
            "and",
            "t3",
            ".",
            "pettype",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            12,
                            false
                        ],
                        null
                    ],
                    "\"cat\"",
                    null
                ]
            ]
        },
        "question": "list last name of student with pet age of pet equal to value",
        "gold_question": "list last name of student with pet age of pet equal to value and pet type of pet equal to value",
        "question_toks": [
            "list",
            "last",
            "name",
            "of",
            "student",
            "with",
            "pet",
            "age",
            "of",
            "pet",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "select avg(age) from student where stuid not in (select stuid from has_pet)",
        "query_toks": [
            "select",
            "avg",
            "(",
            "age",
            ")",
            "from",
            "student",
            "where",
            "stuid",
            "not",
            "in",
            "(",
            "select",
            "stuid",
            "from",
            "has_pet",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "age",
            ")",
            "from",
            "student",
            "where",
            "stuid",
            "not",
            "in",
            "(",
            "select",
            "stuid",
            "from",
            "has_pet",
            ")"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    true,
                    8,
                    [
                        0,
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    1
                                ]
                            ]
                        },
                        "groupby": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderby": [],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            9,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": []
                    },
                    null
                ]
            ]
        },
        "question": "list the average of age of student with student id that is not in ( student id of ha pet )",
        "gold_question": "list the average of age of student with student id that is not in ( student id of has pet )",
        "question_toks": [
            "list",
            "the",
            "average",
            "of",
            "age",
            "of",
            "student",
            "with",
            "student",
            "id",
            "that",
            "is",
            "not",
            "in",
            "(",
            "student",
            "id",
            "of",
            "ha",
            "pet",
            ")"
        ]
    },
    {
        "db_id": "pets_1",
        "query": "select avg(age) from student where stuid not in (select stuid from has_pet)",
        "query_toks": [
            "select",
            "avg",
            "(",
            "age",
            ")",
            "from",
            "student",
            "where",
            "stuid",
            "not",
            "in",
            "(",
            "select",
            "stuid",
            "from",
            "has_pet",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "age",
            ")",
            "from",
            "student",
            "where",
            "stuid",
            "not",
            "in",
            "(",
            "select",
            "stuid",
            "from",
            "has_pet",
            ")"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    true,
                    8,
                    [
                        0,
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    1
                                ]
                            ]
                        },
                        "groupby": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderby": [],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            9,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": []
                    },
                    null
                ]
            ]
        },
        "question": "list the average of age of student with student id that is not in ( student id of ha pet )",
        "gold_question": "list the average of age of student with student id that is not in ( student id of has pet )",
        "question_toks": [
            "list",
            "the",
            "average",
            "of",
            "age",
            "of",
            "student",
            "with",
            "student",
            "id",
            "that",
            "is",
            "not",
            "in",
            "(",
            "student",
            "id",
            "of",
            "ha",
            "pet",
            ")"
        ]
    },
    {
        "db_id": "car_1",
        "query": "SELECT count(*) FROM CONTINENTS;",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "CONTINENTS",
            ";"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "continents"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list the total number of continent",
        "gold_question": "list the total number of continent",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "continent"
        ]
    },
    {
        "db_id": "car_1",
        "query": "SELECT count(*) FROM CONTINENTS;",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "CONTINENTS",
            ";"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "continents"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list the total number of continent",
        "gold_question": "list the total number of continent",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "continent"
        ]
    },
    {
        "db_id": "car_1",
        "query": "SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;",
        "query_toks": [
            "SELECT",
            "T1.ContId",
            ",",
            "T1.Continent",
            ",",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "CONTINENTS",
            "AS",
            "T1",
            "JOIN",
            "COUNTRIES",
            "AS",
            "T2",
            "ON",
            "T1.ContId",
            "=",
            "T2.Continent",
            "GROUP",
            "BY",
            "T1.ContId",
            ";"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "contid",
            ",",
            "t1",
            ".",
            "continent",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "continents",
            "as",
            "t1",
            "join",
            "countries",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "contid",
            "=",
            "t2",
            ".",
            "continent",
            "group",
            "by",
            "t1",
            ".",
            "contid"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    1,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list continent the total number of country country name of country for each continent of country",
        "gold_question": "list cont id of continent continent of country the total number of country for each cont id of continent",
        "question_toks": [
            "list",
            "continent",
            "the",
            "total",
            "number",
            "of",
            "country",
            "country",
            "name",
            "of",
            "country",
            "for",
            "each",
            "continent",
            "of",
            "country"
        ]
    },
    {
        "db_id": "car_1",
        "query": "SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;",
        "query_toks": [
            "SELECT",
            "T1.ContId",
            ",",
            "T1.Continent",
            ",",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "CONTINENTS",
            "AS",
            "T1",
            "JOIN",
            "COUNTRIES",
            "AS",
            "T2",
            "ON",
            "T1.ContId",
            "=",
            "T2.Continent",
            "GROUP",
            "BY",
            "T1.ContId",
            ";"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "contid",
            ",",
            "t1",
            ".",
            "continent",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "continents",
            "as",
            "t1",
            "join",
            "countries",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "contid",
            "=",
            "t2",
            ".",
            "continent",
            "group",
            "by",
            "t1",
            ".",
            "contid"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    1,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list cont id of continent country name of country the total number of country for each cont id of continent",
        "gold_question": "list cont id of continent continent of country the total number of country for each cont id of continent",
        "question_toks": [
            "list",
            "cont",
            "id",
            "of",
            "continent",
            "country",
            "name",
            "of",
            "country",
            "the",
            "total",
            "number",
            "of",
            "country",
            "for",
            "each",
            "cont",
            "id",
            "of",
            "continent"
        ]
    },
    {
        "db_id": "car_1",
        "query": "SELECT count(*) FROM COUNTRIES;",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "COUNTRIES",
            ";"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "countries"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list the total number of country",
        "gold_question": "list the total number of country",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "country"
        ]
    },
    {
        "db_id": "car_1",
        "query": "SELECT count(*) FROM COUNTRIES;",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "COUNTRIES",
            ";"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "countries"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list the total number of country",
        "gold_question": "list the total number of country",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "country"
        ]
    },
    {
        "db_id": "car_1",
        "query": "SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;",
        "query_toks": [
            "SELECT",
            "T1.FullName",
            ",",
            "T1.Id",
            ",",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "CAR_MAKERS",
            "AS",
            "T1",
            "JOIN",
            "MODEL_LIST",
            "AS",
            "T2",
            "ON",
            "T1.Id",
            "=",
            "T2.Maker",
            "GROUP",
            "BY",
            "T1.Id",
            ";"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "fullname",
            ",",
            "t1",
            ".",
            "id",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "car_makers",
            "as",
            "t1",
            "join",
            "model_list",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "id",
            "=",
            "t2",
            ".",
            "maker",
            "group",
            "by",
            "t1",
            ".",
            "id"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    6,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list the total number of model list full name of car maker id of car maker for each id of car maker",
        "gold_question": "list full name of car maker id of model list the total number of model list for each id of car maker",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "model",
            "list",
            "full",
            "name",
            "of",
            "car",
            "maker",
            "id",
            "of",
            "car",
            "maker",
            "for",
            "each",
            "id",
            "of",
            "car",
            "maker"
        ]
    },
    {
        "db_id": "car_1",
        "query": "SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;",
        "query_toks": [
            "SELECT",
            "T1.FullName",
            ",",
            "T1.Id",
            ",",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "CAR_MAKERS",
            "AS",
            "T1",
            "JOIN",
            "MODEL_LIST",
            "AS",
            "T2",
            "ON",
            "T1.Id",
            "=",
            "T2.Maker",
            "GROUP",
            "BY",
            "T1.Id",
            ";"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "fullname",
            ",",
            "t1",
            ".",
            "id",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "car_makers",
            "as",
            "t1",
            "join",
            "model_list",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "id",
            "=",
            "t2",
            ".",
            "maker",
            "group",
            "by",
            "t1",
            ".",
            "id"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    6,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list full name of car maker id of model list the total number of model list for each id of car maker",
        "gold_question": "list full name of car maker id of model list the total number of model list for each id of car maker",
        "question_toks": [
            "list",
            "full",
            "name",
            "of",
            "car",
            "maker",
            "id",
            "of",
            "model",
            "list",
            "the",
            "total",
            "number",
            "of",
            "model",
            "list",
            "for",
            "each",
            "id",
            "of",
            "car",
            "maker"
        ]
    },
    {
        "db_id": "car_1",
        "query": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;",
        "query_toks": [
            "SELECT",
            "T1.Model",
            "FROM",
            "CAR_NAMES",
            "AS",
            "T1",
            "JOIN",
            "CARS_DATA",
            "AS",
            "T2",
            "ON",
            "T1.MakeId",
            "=",
            "T2.Id",
            "ORDER",
            "BY",
            "T2.horsepower",
            "ASC",
            "LIMIT",
            "1",
            ";"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "model",
            "from",
            "car_names",
            "as",
            "t1",
            "join",
            "cars_data",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "makeid",
            "=",
            "t2",
            ".",
            "id",
            "order",
            "by",
            "t2",
            ".",
            "horsepower",
            "asc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            16,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ],
                    [
                        "table_unit",
                        5
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            20,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of model of model list ordered by horsepower of car data ascendingly",
        "gold_question": "list top value items of model of car name ordered by horsepower of cars data ascendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "model",
            "of",
            "model",
            "list",
            "ordered",
            "by",
            "horsepower",
            "of",
            "car",
            "data",
            "ascendingly"
        ]
    },
    {
        "db_id": "car_1",
        "query": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;",
        "query_toks": [
            "SELECT",
            "T1.Model",
            "FROM",
            "CAR_NAMES",
            "AS",
            "T1",
            "JOIN",
            "CARS_DATA",
            "AS",
            "T2",
            "ON",
            "T1.MakeId",
            "=",
            "T2.Id",
            "ORDER",
            "BY",
            "T2.horsepower",
            "ASC",
            "LIMIT",
            "1",
            ";"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "model",
            "from",
            "car_names",
            "as",
            "t1",
            "join",
            "cars_data",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "makeid",
            "=",
            "t2",
            ".",
            "id",
            "order",
            "by",
            "t2",
            ".",
            "horsepower",
            "asc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            16,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ],
                    [
                        "table_unit",
                        5
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            20,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of model of car name ordered by horsepower of car data ascendingly",
        "gold_question": "list top value items of model of car name ordered by horsepower of cars data ascendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "model",
            "of",
            "car",
            "name",
            "ordered",
            "by",
            "horsepower",
            "of",
            "car",
            "data",
            "ascendingly"
        ]
    },
    {
        "db_id": "car_1",
        "query": "SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA)",
        "query_toks": [
            "SELECT",
            "T1.model",
            "FROM",
            "CAR_NAMES",
            "AS",
            "T1",
            "JOIN",
            "CARS_DATA",
            "AS",
            "T2",
            "ON",
            "T1.MakeId",
            "=",
            "T2.Id",
            "WHERE",
            "T2.Weight",
            "<",
            "(",
            "SELECT",
            "avg",
            "(",
            "Weight",
            ")",
            "FROM",
            "CARS_DATA",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "model",
            "from",
            "car_names",
            "as",
            "t1",
            "join",
            "cars_data",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "makeid",
            "=",
            "t2",
            ".",
            "id",
            "where",
            "t2",
            ".",
            "weight",
            "<",
            "(",
            "select",
            "avg",
            "(",
            "weight",
            ")",
            "from",
            "cars_data",
            ")"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            16,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ],
                    [
                        "table_unit",
                        5
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    4,
                    [
                        0,
                        [
                            0,
                            21,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    5
                                ]
                            ]
                        },
                        "groupby": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderby": [],
                        "select": [
                            false,
                            [
                                [
                                    5,
                                    [
                                        0,
                                        [
                                            0,
                                            21,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": []
                    },
                    null
                ]
            ]
        },
        "question": "list model of model list with weight of car data less than ( the average of weight of car data )",
        "gold_question": "list model of car name with weight of cars data less than ( the average of weight of cars data )",
        "question_toks": [
            "list",
            "model",
            "of",
            "model",
            "list",
            "with",
            "weight",
            "of",
            "car",
            "data",
            "less",
            "than",
            "(",
            "the",
            "average",
            "of",
            "weight",
            "of",
            "car",
            "data",
            ")"
        ]
    },
    {
        "db_id": "car_1",
        "query": "SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA)",
        "query_toks": [
            "SELECT",
            "T1.model",
            "FROM",
            "CAR_NAMES",
            "AS",
            "T1",
            "JOIN",
            "CARS_DATA",
            "AS",
            "T2",
            "ON",
            "T1.MakeId",
            "=",
            "T2.Id",
            "WHERE",
            "T2.Weight",
            "<",
            "(",
            "SELECT",
            "avg",
            "(",
            "Weight",
            ")",
            "FROM",
            "CARS_DATA",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "model",
            "from",
            "car_names",
            "as",
            "t1",
            "join",
            "cars_data",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "makeid",
            "=",
            "t2",
            ".",
            "id",
            "where",
            "t2",
            ".",
            "weight",
            "<",
            "(",
            "select",
            "avg",
            "(",
            "weight",
            ")",
            "from",
            "cars_data",
            ")"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            16,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ],
                    [
                        "table_unit",
                        5
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    4,
                    [
                        0,
                        [
                            0,
                            21,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    5
                                ]
                            ]
                        },
                        "groupby": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderby": [],
                        "select": [
                            false,
                            [
                                [
                                    5,
                                    [
                                        0,
                                        [
                                            0,
                                            21,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": []
                    },
                    null
                ]
            ]
        },
        "question": "list model of model list with weight of car data less than ( the average of weight of car data )",
        "gold_question": "list model of car name with weight of cars data less than ( the average of weight of cars data )",
        "question_toks": [
            "list",
            "model",
            "of",
            "model",
            "list",
            "with",
            "weight",
            "of",
            "car",
            "data",
            "less",
            "than",
            "(",
            "the",
            "average",
            "of",
            "weight",
            "of",
            "car",
            "data",
            ")"
        ]
    },
    {
        "db_id": "car_1",
        "query": "SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';",
        "query_toks": [
            "SELECT",
            "DISTINCT",
            "T1.Maker",
            "FROM",
            "CAR_MAKERS",
            "AS",
            "T1",
            "JOIN",
            "MODEL_LIST",
            "AS",
            "T2",
            "ON",
            "T1.Id",
            "=",
            "T2.Maker",
            "JOIN",
            "CAR_NAMES",
            "AS",
            "T3",
            "ON",
            "T2.model",
            "=",
            "T3.model",
            "JOIN",
            "CARS_DATA",
            "AS",
            "T4",
            "ON",
            "T3.MakeId",
            "=",
            "T4.id",
            "WHERE",
            "T4.year",
            "=",
            "'1970",
            "'",
            ";"
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "t1",
            ".",
            "maker",
            "from",
            "car_makers",
            "as",
            "t1",
            "join",
            "model_list",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "id",
            "=",
            "t2",
            ".",
            "maker",
            "join",
            "car_names",
            "as",
            "t3",
            "on",
            "t2",
            ".",
            "model",
            "=",
            "t3",
            ".",
            "model",
            "join",
            "cars_data",
            "as",
            "t4",
            "on",
            "t3",
            ".",
            "makeid",
            "=",
            "t4",
            ".",
            "id",
            "where",
            "t4",
            ".",
            "year",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            14,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            16,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        3
                    ],
                    [
                        "table_unit",
                        4
                    ],
                    [
                        "table_unit",
                        5
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            23,
                            false
                        ],
                        null
                    ],
                    "\"1970\"",
                    null
                ]
            ]
        },
        "question": "list maker of car maker with year of car data equal to value",
        "gold_question": "list maker of car maker with year of cars data equal to value",
        "question_toks": [
            "list",
            "maker",
            "of",
            "car",
            "maker",
            "with",
            "year",
            "of",
            "car",
            "data",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "car_1",
        "query": "SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';",
        "query_toks": [
            "SELECT",
            "DISTINCT",
            "T1.Maker",
            "FROM",
            "CAR_MAKERS",
            "AS",
            "T1",
            "JOIN",
            "MODEL_LIST",
            "AS",
            "T2",
            "ON",
            "T1.Id",
            "=",
            "T2.Maker",
            "JOIN",
            "CAR_NAMES",
            "AS",
            "T3",
            "ON",
            "T2.model",
            "=",
            "T3.model",
            "JOIN",
            "CARS_DATA",
            "AS",
            "T4",
            "ON",
            "T3.MakeId",
            "=",
            "T4.id",
            "WHERE",
            "T4.year",
            "=",
            "'1970",
            "'",
            ";"
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "t1",
            ".",
            "maker",
            "from",
            "car_makers",
            "as",
            "t1",
            "join",
            "model_list",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "id",
            "=",
            "t2",
            ".",
            "maker",
            "join",
            "car_names",
            "as",
            "t3",
            "on",
            "t2",
            ".",
            "model",
            "=",
            "t3",
            ".",
            "model",
            "join",
            "cars_data",
            "as",
            "t4",
            "on",
            "t3",
            ".",
            "makeid",
            "=",
            "t4",
            ".",
            "id",
            "where",
            "t4",
            ".",
            "year",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            14,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            16,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        3
                    ],
                    [
                        "table_unit",
                        4
                    ],
                    [
                        "table_unit",
                        5
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            23,
                            false
                        ],
                        null
                    ],
                    "\"1970\"",
                    null
                ]
            ]
        },
        "question": "list maker of car maker with year of car data equal to value",
        "gold_question": "list maker of car maker with year of cars data equal to value",
        "question_toks": [
            "list",
            "maker",
            "of",
            "car",
            "maker",
            "with",
            "year",
            "of",
            "car",
            "data",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "car_1",
        "query": "SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);",
        "query_toks": [
            "SELECT",
            "T2.Make",
            ",",
            "T1.Year",
            "FROM",
            "CARS_DATA",
            "AS",
            "T1",
            "JOIN",
            "CAR_NAMES",
            "AS",
            "T2",
            "ON",
            "T1.Id",
            "=",
            "T2.MakeId",
            "WHERE",
            "T1.Year",
            "=",
            "(",
            "SELECT",
            "min",
            "(",
            "YEAR",
            ")",
            "FROM",
            "CARS_DATA",
            ")",
            ";"
        ],
        "query_toks_no_value": [
            "select",
            "t2",
            ".",
            "make",
            ",",
            "t1",
            ".",
            "year",
            "from",
            "cars_data",
            "as",
            "t1",
            "join",
            "car_names",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "id",
            "=",
            "t2",
            ".",
            "makeid",
            "where",
            "t1",
            ".",
            "year",
            "=",
            "(",
            "select",
            "min",
            "(",
            "year",
            ")",
            "from",
            "cars_data",
            ")"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                16,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        5
                    ],
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                23,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            23,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    5
                                ]
                            ]
                        },
                        "groupby": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderby": [],
                        "select": [
                            false,
                            [
                                [
                                    2,
                                    [
                                        0,
                                        [
                                            0,
                                            23,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": []
                    },
                    null
                ]
            ]
        },
        "question": "list top value items of make of car name make of car name ordered by year of car data ascendingly",
        "gold_question": "list make of car name year of cars data with year of cars data equal to ( the minimum of year of cars data )",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "make",
            "of",
            "car",
            "name",
            "make",
            "of",
            "car",
            "name",
            "ordered",
            "by",
            "year",
            "of",
            "car",
            "data",
            "ascendingly"
        ]
    },
    {
        "db_id": "car_1",
        "query": "SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);",
        "query_toks": [
            "SELECT",
            "T2.Make",
            ",",
            "T1.Year",
            "FROM",
            "CARS_DATA",
            "AS",
            "T1",
            "JOIN",
            "CAR_NAMES",
            "AS",
            "T2",
            "ON",
            "T1.Id",
            "=",
            "T2.MakeId",
            "WHERE",
            "T1.Year",
            "=",
            "(",
            "SELECT",
            "min",
            "(",
            "YEAR",
            ")",
            "FROM",
            "CARS_DATA",
            ")",
            ";"
        ],
        "query_toks_no_value": [
            "select",
            "t2",
            ".",
            "make",
            ",",
            "t1",
            ".",
            "year",
            "from",
            "cars_data",
            "as",
            "t1",
            "join",
            "car_names",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "id",
            "=",
            "t2",
            ".",
            "makeid",
            "where",
            "t1",
            ".",
            "year",
            "=",
            "(",
            "select",
            "min",
            "(",
            "year",
            ")",
            "from",
            "cars_data",
            ")"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                16,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        5
                    ],
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                23,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            23,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    5
                                ]
                            ]
                        },
                        "groupby": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderby": [],
                        "select": [
                            false,
                            [
                                [
                                    2,
                                    [
                                        0,
                                        [
                                            0,
                                            23,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": []
                    },
                    null
                ]
            ]
        },
        "question": "list top value items of maker of car maker year of car data ordered by year of car data ascendingly",
        "gold_question": "list make of car name year of cars data with year of cars data equal to ( the minimum of year of cars data )",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "maker",
            "of",
            "car",
            "maker",
            "year",
            "of",
            "car",
            "data",
            "ordered",
            "by",
            "year",
            "of",
            "car",
            "data",
            "ascendingly"
        ]
    },
    {
        "db_id": "car_1",
        "query": "SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;",
        "query_toks": [
            "SELECT",
            "DISTINCT",
            "T1.model",
            "FROM",
            "MODEL_LIST",
            "AS",
            "T1",
            "JOIN",
            "CAR_NAMES",
            "AS",
            "T2",
            "ON",
            "T1.model",
            "=",
            "T2.model",
            "JOIN",
            "CARS_DATA",
            "AS",
            "T3",
            "ON",
            "T2.MakeId",
            "=",
            "T3.id",
            "WHERE",
            "T3.year",
            ">",
            "1980",
            ";"
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "t1",
            ".",
            "model",
            "from",
            "model_list",
            "as",
            "t1",
            "join",
            "car_names",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "model",
            "=",
            "t2",
            ".",
            "model",
            "join",
            "cars_data",
            "as",
            "t3",
            "on",
            "t2",
            ".",
            "makeid",
            "=",
            "t3",
            ".",
            "id",
            "where",
            "t3",
            ".",
            "year",
            ">",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            14,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            16,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ],
                    [
                        "table_unit",
                        4
                    ],
                    [
                        "table_unit",
                        5
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            23,
                            false
                        ],
                        null
                    ],
                    1980.0,
                    null
                ]
            ]
        },
        "question": "list model of model list with year of car data greater than value",
        "gold_question": "list model of model list with year of cars data greater than value",
        "question_toks": [
            "list",
            "model",
            "of",
            "model",
            "list",
            "with",
            "year",
            "of",
            "car",
            "data",
            "greater",
            "than",
            "value"
        ]
    },
    {
        "db_id": "car_1",
        "query": "SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;",
        "query_toks": [
            "SELECT",
            "DISTINCT",
            "T1.model",
            "FROM",
            "MODEL_LIST",
            "AS",
            "T1",
            "JOIN",
            "CAR_NAMES",
            "AS",
            "T2",
            "ON",
            "T1.model",
            "=",
            "T2.model",
            "JOIN",
            "CARS_DATA",
            "AS",
            "T3",
            "ON",
            "T2.MakeId",
            "=",
            "T3.id",
            "WHERE",
            "T3.year",
            ">",
            "1980",
            ";"
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "t1",
            ".",
            "model",
            "from",
            "model_list",
            "as",
            "t1",
            "join",
            "car_names",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "model",
            "=",
            "t2",
            ".",
            "model",
            "join",
            "cars_data",
            "as",
            "t3",
            "on",
            "t2",
            ".",
            "makeid",
            "=",
            "t3",
            ".",
            "id",
            "where",
            "t3",
            ".",
            "year",
            ">",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            14,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            16,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ],
                    [
                        "table_unit",
                        4
                    ],
                    [
                        "table_unit",
                        5
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            23,
                            false
                        ],
                        null
                    ],
                    1980.0,
                    null
                ]
            ]
        },
        "question": "list model of model list with year of car data greater than value",
        "gold_question": "list model of model list with year of cars data greater than value",
        "question_toks": [
            "list",
            "model",
            "of",
            "model",
            "list",
            "with",
            "year",
            "of",
            "car",
            "data",
            "greater",
            "than",
            "value"
        ]
    },
    {
        "db_id": "car_1",
        "query": "SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;",
        "query_toks": [
            "SELECT",
            "T2.CountryName",
            "FROM",
            "CAR_MAKERS",
            "AS",
            "T1",
            "JOIN",
            "COUNTRIES",
            "AS",
            "T2",
            "ON",
            "T1.Country",
            "=",
            "T2.CountryId",
            "GROUP",
            "BY",
            "T1.Country",
            "ORDER",
            "BY",
            "Count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1",
            ";"
        ],
        "query_toks_no_value": [
            "select",
            "t2",
            ".",
            "countryname",
            "from",
            "car_makers",
            "as",
            "t1",
            "join",
            "countries",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "country",
            "=",
            "t2",
            ".",
            "countryid",
            "group",
            "by",
            "t1",
            ".",
            "country",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    9,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of country name of country for each country of car maker ordered by the total number of car maker descendingly",
        "gold_question": "list top value items of country name of country for each country of car maker ordered by the total number of car maker descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "country",
            "name",
            "of",
            "country",
            "for",
            "each",
            "country",
            "of",
            "car",
            "maker",
            "ordered",
            "by",
            "the",
            "total",
            "number",
            "of",
            "car",
            "maker",
            "descendingly"
        ]
    },
    {
        "db_id": "car_1",
        "query": "SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;",
        "query_toks": [
            "SELECT",
            "T2.CountryName",
            "FROM",
            "CAR_MAKERS",
            "AS",
            "T1",
            "JOIN",
            "COUNTRIES",
            "AS",
            "T2",
            "ON",
            "T1.Country",
            "=",
            "T2.CountryId",
            "GROUP",
            "BY",
            "T1.Country",
            "ORDER",
            "BY",
            "Count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1",
            ";"
        ],
        "query_toks_no_value": [
            "select",
            "t2",
            ".",
            "countryname",
            "from",
            "car_makers",
            "as",
            "t1",
            "join",
            "countries",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "country",
            "=",
            "t2",
            ".",
            "countryid",
            "group",
            "by",
            "t1",
            ".",
            "country",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    9,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of country name of country for each country id ordered by the total number of country descendingly",
        "gold_question": "list top value items of country name of country for each country of car maker ordered by the total number of car maker descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "country",
            "name",
            "of",
            "country",
            "for",
            "each",
            "country",
            "id",
            "ordered",
            "by",
            "the",
            "total",
            "number",
            "of",
            "country",
            "descendingly"
        ]
    },
    {
        "db_id": "car_1",
        "query": "select count(*) ,  t2.fullname from model_list as t1 join car_makers as t2 on t1.maker  =  t2.id group by t2.id;",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            ",",
            "t2.fullname",
            "from",
            "model_list",
            "as",
            "t1",
            "join",
            "car_makers",
            "as",
            "t2",
            "on",
            "t1.maker",
            "=",
            "t2.id",
            "group",
            "by",
            "t2.id",
            ";"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            ",",
            "t2",
            ".",
            "fullname",
            "from",
            "model_list",
            "as",
            "t1",
            "join",
            "car_makers",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "maker",
            "=",
            "t2",
            ".",
            "id",
            "group",
            "by",
            "t2",
            ".",
            "id"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    6,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list the total number of model list full name of car maker for each id",
        "gold_question": "list the total number of model list full name of car maker for each id of car maker",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "model",
            "list",
            "full",
            "name",
            "of",
            "car",
            "maker",
            "for",
            "each",
            "id"
        ]
    },
    {
        "db_id": "car_1",
        "query": "SELECT Count(*) ,  T2.FullName ,  T2.id FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id GROUP BY T2.id;",
        "query_toks": [
            "SELECT",
            "Count",
            "(",
            "*",
            ")",
            ",",
            "T2.FullName",
            ",",
            "T2.id",
            "FROM",
            "MODEL_LIST",
            "AS",
            "T1",
            "JOIN",
            "CAR_MAKERS",
            "AS",
            "T2",
            "ON",
            "T1.Maker",
            "=",
            "T2.Id",
            "GROUP",
            "BY",
            "T2.id",
            ";"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            ",",
            "t2",
            ".",
            "fullname",
            ",",
            "t2",
            ".",
            "id",
            "from",
            "model_list",
            "as",
            "t1",
            "join",
            "car_makers",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "maker",
            "=",
            "t2",
            ".",
            "id",
            "group",
            "by",
            "t2",
            ".",
            "id"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    6,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list the total number of model list full name of car maker for each id of car maker",
        "gold_question": "list the total number of model list full name of car maker id of car maker for each id of car maker",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "model",
            "list",
            "full",
            "name",
            "of",
            "car",
            "maker",
            "for",
            "each",
            "id",
            "of",
            "car",
            "maker"
        ]
    },
    {
        "db_id": "car_1",
        "query": "SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';",
        "query_toks": [
            "SELECT",
            "T1.Accelerate",
            "FROM",
            "CARS_DATA",
            "AS",
            "T1",
            "JOIN",
            "CAR_NAMES",
            "AS",
            "T2",
            "ON",
            "T1.Id",
            "=",
            "T2.MakeId",
            "WHERE",
            "T2.Make",
            "=",
            "'amc",
            "hornet",
            "sportabout",
            "(",
            "sw",
            ")",
            "'",
            ";"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "accelerate",
            "from",
            "cars_data",
            "as",
            "t1",
            "join",
            "car_names",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "id",
            "=",
            "t2",
            ".",
            "makeid",
            "where",
            "t2",
            ".",
            "make",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                16,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        5
                    ],
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                22,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            15,
                            false
                        ],
                        null
                    ],
                    "\"amc hornet sportabout (sw)\"",
                    null
                ]
            ]
        },
        "question": "list accelerate of car data with maker of car maker equal to value",
        "gold_question": "list accelerate of cars data with make of car name equal to value",
        "question_toks": [
            "list",
            "accelerate",
            "of",
            "car",
            "data",
            "with",
            "maker",
            "of",
            "car",
            "maker",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "car_1",
        "query": "SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';",
        "query_toks": [
            "SELECT",
            "T1.Accelerate",
            "FROM",
            "CARS_DATA",
            "AS",
            "T1",
            "JOIN",
            "CAR_NAMES",
            "AS",
            "T2",
            "ON",
            "T1.Id",
            "=",
            "T2.MakeId",
            "WHERE",
            "T2.Make",
            "=",
            "'amc",
            "hornet",
            "sportabout",
            "(",
            "sw",
            ")",
            "'",
            ";"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "accelerate",
            "from",
            "cars_data",
            "as",
            "t1",
            "join",
            "car_names",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "id",
            "=",
            "t2",
            ".",
            "makeid",
            "where",
            "t2",
            ".",
            "make",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                16,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        5
                    ],
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                22,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            15,
                            false
                        ],
                        null
                    ],
                    "\"amc hornet sportabout (sw)\"",
                    null
                ]
            ]
        },
        "question": "list accelerate of car data with maker of car maker equal to value",
        "gold_question": "list accelerate of cars data with make of car name equal to value",
        "question_toks": [
            "list",
            "accelerate",
            "of",
            "car",
            "data",
            "with",
            "maker",
            "of",
            "car",
            "maker",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "car_1",
        "query": "SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france';",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "CAR_MAKERS",
            "AS",
            "T1",
            "JOIN",
            "COUNTRIES",
            "AS",
            "T2",
            "ON",
            "T1.Country",
            "=",
            "T2.CountryId",
            "WHERE",
            "T2.CountryName",
            "=",
            "'france",
            "'",
            ";"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "car_makers",
            "as",
            "t1",
            "join",
            "countries",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "country",
            "=",
            "t2",
            ".",
            "countryid",
            "where",
            "t2",
            ".",
            "countryname",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ],
                    "\"france\"",
                    null
                ]
            ]
        },
        "question": "list the total number of country with country name equal to value",
        "gold_question": "list the total number of country with country name of country equal to value",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "country",
            "with",
            "country",
            "name",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "car_1",
        "query": "SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france';",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "CAR_MAKERS",
            "AS",
            "T1",
            "JOIN",
            "COUNTRIES",
            "AS",
            "T2",
            "ON",
            "T1.Country",
            "=",
            "T2.CountryId",
            "WHERE",
            "T2.CountryName",
            "=",
            "'france",
            "'",
            ";"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "car_makers",
            "as",
            "t1",
            "join",
            "countries",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "country",
            "=",
            "t2",
            ".",
            "countryid",
            "where",
            "t2",
            ".",
            "countryname",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ],
                    "\"france\"",
                    null
                ]
            ]
        },
        "question": "list the total number of country with country name of country equal to value",
        "gold_question": "list the total number of country with country name of country equal to value",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "country",
            "with",
            "country",
            "name",
            "of",
            "country",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "car_1",
        "query": "SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa';",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "MODEL_LIST",
            "AS",
            "T1",
            "JOIN",
            "CAR_MAKERS",
            "AS",
            "T2",
            "ON",
            "T1.Maker",
            "=",
            "T2.Id",
            "JOIN",
            "COUNTRIES",
            "AS",
            "T3",
            "ON",
            "T2.Country",
            "=",
            "T3.CountryId",
            "WHERE",
            "T3.CountryName",
            "=",
            "'usa",
            "'",
            ";"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "model_list",
            "as",
            "t1",
            "join",
            "car_makers",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "maker",
            "=",
            "t2",
            ".",
            "id",
            "join",
            "countries",
            "as",
            "t3",
            "on",
            "t2",
            ".",
            "country",
            "=",
            "t3",
            ".",
            "countryid",
            "where",
            "t3",
            ".",
            "countryname",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ],
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ],
                    "\"usa\"",
                    null
                ]
            ]
        },
        "question": "list the total number of car maker with country of car maker equal to value",
        "gold_question": "list the total number of country with country name of country equal to value",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "car",
            "maker",
            "with",
            "country",
            "of",
            "car",
            "maker",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "car_1",
        "query": "SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa';",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "MODEL_LIST",
            "AS",
            "T1",
            "JOIN",
            "CAR_MAKERS",
            "AS",
            "T2",
            "ON",
            "T1.Maker",
            "=",
            "T2.Id",
            "JOIN",
            "COUNTRIES",
            "AS",
            "T3",
            "ON",
            "T2.Country",
            "=",
            "T3.CountryId",
            "WHERE",
            "T3.CountryName",
            "=",
            "'usa",
            "'",
            ";"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "model_list",
            "as",
            "t1",
            "join",
            "car_makers",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "maker",
            "=",
            "t2",
            ".",
            "id",
            "join",
            "countries",
            "as",
            "t3",
            "on",
            "t2",
            ".",
            "country",
            "=",
            "t3",
            ".",
            "countryid",
            "where",
            "t3",
            ".",
            "countryname",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ],
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ],
                    "\"usa\"",
                    null
                ]
            ]
        },
        "question": "list the total number of car maker with country of car maker equal to value",
        "gold_question": "list the total number of country with country name of country equal to value",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "car",
            "maker",
            "with",
            "country",
            "of",
            "car",
            "maker",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "car_1",
        "query": "SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders  =  4;",
        "query_toks": [
            "SELECT",
            "avg",
            "(",
            "mpg",
            ")",
            "FROM",
            "CARS_DATA",
            "WHERE",
            "Cylinders",
            "=",
            "4",
            ";"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "mpg",
            ")",
            "from",
            "cars_data",
            "where",
            "cylinders",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                17,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            18,
                            false
                        ],
                        null
                    ],
                    4.0,
                    null
                ]
            ]
        },
        "question": "list the average of mpg of car data with cylinder equal to value",
        "gold_question": "list the average of mpg of cars data with cylinder equal to value",
        "question_toks": [
            "list",
            "the",
            "average",
            "of",
            "mpg",
            "of",
            "car",
            "data",
            "with",
            "cylinder",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "car_1",
        "query": "SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders  =  4;",
        "query_toks": [
            "SELECT",
            "avg",
            "(",
            "mpg",
            ")",
            "FROM",
            "CARS_DATA",
            "WHERE",
            "Cylinders",
            "=",
            "4",
            ";"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "mpg",
            ")",
            "from",
            "cars_data",
            "where",
            "cylinders",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                17,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            18,
                            false
                        ],
                        null
                    ],
                    4.0,
                    null
                ]
            ]
        },
        "question": "list the average of mpg of car data with cylinder equal to value",
        "gold_question": "list the average of mpg of cars data with cylinder equal to value",
        "question_toks": [
            "list",
            "the",
            "average",
            "of",
            "mpg",
            "of",
            "car",
            "data",
            "with",
            "cylinder",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "car_1",
        "query": "select min(weight) from cars_data where cylinders  =  8 and year  =  1974",
        "query_toks": [
            "select",
            "min",
            "(",
            "weight",
            ")",
            "from",
            "cars_data",
            "where",
            "cylinders",
            "=",
            "8",
            "and",
            "year",
            "=",
            "1974"
        ],
        "query_toks_no_value": [
            "select",
            "min",
            "(",
            "weight",
            ")",
            "from",
            "cars_data",
            "where",
            "cylinders",
            "=",
            "value",
            "and",
            "year",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                21,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            18,
                            false
                        ],
                        null
                    ],
                    8.0,
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            23,
                            false
                        ],
                        null
                    ],
                    1974.0,
                    null
                ]
            ]
        },
        "question": "list the minimum of weight of car data with cylinder equal to value and year equal to value",
        "gold_question": "list the minimum of weight of cars data with cylinder equal to value and year equal to value",
        "question_toks": [
            "list",
            "the",
            "minimum",
            "of",
            "weight",
            "of",
            "car",
            "data",
            "with",
            "cylinder",
            "equal",
            "to",
            "value",
            "and",
            "year",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "car_1",
        "query": "select min(weight) from cars_data where cylinders  =  8 and year  =  1974",
        "query_toks": [
            "select",
            "min",
            "(",
            "weight",
            ")",
            "from",
            "cars_data",
            "where",
            "cylinders",
            "=",
            "8",
            "and",
            "year",
            "=",
            "1974"
        ],
        "query_toks_no_value": [
            "select",
            "min",
            "(",
            "weight",
            ")",
            "from",
            "cars_data",
            "where",
            "cylinders",
            "=",
            "value",
            "and",
            "year",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                21,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            18,
                            false
                        ],
                        null
                    ],
                    8.0,
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            23,
                            false
                        ],
                        null
                    ],
                    1974.0,
                    null
                ]
            ]
        },
        "question": "list the minimum of weight of car data with cylinder equal to value and year equal to value",
        "gold_question": "list the minimum of weight of cars data with cylinder equal to value and year equal to value",
        "question_toks": [
            "list",
            "the",
            "minimum",
            "of",
            "weight",
            "of",
            "car",
            "data",
            "with",
            "cylinder",
            "equal",
            "to",
            "value",
            "and",
            "year",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "car_1",
        "query": "SELECT Maker ,  Model FROM MODEL_LIST;",
        "query_toks": [
            "SELECT",
            "Maker",
            ",",
            "Model",
            "FROM",
            "MODEL_LIST",
            ";"
        ],
        "query_toks_no_value": [
            "select",
            "maker",
            ",",
            "model",
            "from",
            "model_list"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list maker model of model list",
        "gold_question": "list maker model of model list",
        "question_toks": [
            "list",
            "maker",
            "model",
            "of",
            "model",
            "list"
        ]
    },
    {
        "db_id": "car_1",
        "query": "SELECT Maker ,  Model FROM MODEL_LIST;",
        "query_toks": [
            "SELECT",
            "Maker",
            ",",
            "Model",
            "FROM",
            "MODEL_LIST",
            ";"
        ],
        "query_toks_no_value": [
            "select",
            "maker",
            ",",
            "model",
            "from",
            "model_list"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list maker model of model list",
        "gold_question": "list maker model of model list",
        "question_toks": [
            "list",
            "maker",
            "model",
            "of",
            "model",
            "list"
        ]
    },
    {
        "db_id": "car_1",
        "query": "SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;",
        "query_toks": [
            "SELECT",
            "T1.CountryName",
            ",",
            "T1.CountryId",
            "FROM",
            "COUNTRIES",
            "AS",
            "T1",
            "JOIN",
            "CAR_MAKERS",
            "AS",
            "T2",
            "ON",
            "T1.CountryId",
            "=",
            "T2.Country",
            "GROUP",
            "BY",
            "T1.CountryId",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "1",
            ";"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "countryname",
            ",",
            "t1",
            ".",
            "countryid",
            "from",
            "countries",
            "as",
            "t1",
            "join",
            "car_makers",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "countryid",
            "=",
            "t2",
            ".",
            "country",
            "group",
            "by",
            "t1",
            ".",
            "countryid",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    3,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    5,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list country name of country country id",
        "gold_question": "list country name of country country id of country for each country id of country that have the total number of country greater than or equal to value",
        "question_toks": [
            "list",
            "country",
            "name",
            "of",
            "country",
            "country",
            "id"
        ]
    },
    {
        "db_id": "car_1",
        "query": "SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;",
        "query_toks": [
            "SELECT",
            "T1.CountryName",
            ",",
            "T1.CountryId",
            "FROM",
            "COUNTRIES",
            "AS",
            "T1",
            "JOIN",
            "CAR_MAKERS",
            "AS",
            "T2",
            "ON",
            "T1.CountryId",
            "=",
            "T2.Country",
            "GROUP",
            "BY",
            "T1.CountryId",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "1",
            ";"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "countryname",
            ",",
            "t1",
            ".",
            "countryid",
            "from",
            "countries",
            "as",
            "t1",
            "join",
            "car_makers",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "countryid",
            "=",
            "t2",
            ".",
            "country",
            "group",
            "by",
            "t1",
            ".",
            "countryid",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    3,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    5,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list country name of country country id for each country id that have the total number of country greater than or equal to value",
        "gold_question": "list country name of country country id of country for each country id of country that have the total number of country greater than or equal to value",
        "question_toks": [
            "list",
            "country",
            "name",
            "of",
            "country",
            "country",
            "id",
            "for",
            "each",
            "country",
            "id",
            "that",
            "have",
            "the",
            "total",
            "number",
            "of",
            "country",
            "greater",
            "than",
            "or",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "car_1",
        "query": "SELECT count(*) FROM CARS_DATA WHERE horsepower  >  150;",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "CARS_DATA",
            "WHERE",
            "horsepower",
            ">",
            "150",
            ";"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "cars_data",
            "where",
            "horsepower",
            ">",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            20,
                            false
                        ],
                        null
                    ],
                    150.0,
                    null
                ]
            ]
        },
        "question": "list the total number of car data with horsepower greater than value",
        "gold_question": "list the total number of cars data with horsepower greater than value",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "car",
            "data",
            "with",
            "horsepower",
            "greater",
            "than",
            "value"
        ]
    },
    {
        "db_id": "car_1",
        "query": "SELECT count(*) FROM CARS_DATA WHERE horsepower  >  150;",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "CARS_DATA",
            "WHERE",
            "horsepower",
            ">",
            "150",
            ";"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "cars_data",
            "where",
            "horsepower",
            ">",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            20,
                            false
                        ],
                        null
                    ],
                    150.0,
                    null
                ]
            ]
        },
        "question": "list the total number of car data with horsepower greater than value",
        "gold_question": "list the total number of cars data with horsepower greater than value",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "car",
            "data",
            "with",
            "horsepower",
            "greater",
            "than",
            "value"
        ]
    },
    {
        "db_id": "car_1",
        "query": "SELECT avg(Weight) ,  YEAR FROM CARS_DATA GROUP BY YEAR;",
        "query_toks": [
            "SELECT",
            "avg",
            "(",
            "Weight",
            ")",
            ",",
            "YEAR",
            "FROM",
            "CARS_DATA",
            "GROUP",
            "BY",
            "YEAR",
            ";"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "weight",
            ")",
            ",",
            "year",
            "from",
            "cars_data",
            "group",
            "by",
            "year"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    23,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                21,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                23,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list the average of weight year of car data for each year",
        "gold_question": "list the average of weight year of cars data for each year",
        "question_toks": [
            "list",
            "the",
            "average",
            "of",
            "weight",
            "year",
            "of",
            "car",
            "data",
            "for",
            "each",
            "year"
        ]
    },
    {
        "db_id": "car_1",
        "query": "SELECT avg(Weight) ,  YEAR FROM CARS_DATA GROUP BY YEAR;",
        "query_toks": [
            "SELECT",
            "avg",
            "(",
            "Weight",
            ")",
            ",",
            "YEAR",
            "FROM",
            "CARS_DATA",
            "GROUP",
            "BY",
            "YEAR",
            ";"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "weight",
            ")",
            ",",
            "year",
            "from",
            "cars_data",
            "group",
            "by",
            "year"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    23,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                21,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                23,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list the average of weight year of car data for each year",
        "gold_question": "list the average of weight year of cars data for each year",
        "question_toks": [
            "list",
            "the",
            "average",
            "of",
            "weight",
            "year",
            "of",
            "car",
            "data",
            "for",
            "each",
            "year"
        ]
    },
    {
        "db_id": "car_1",
        "query": "SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;",
        "query_toks": [
            "SELECT",
            "T1.CountryName",
            "FROM",
            "COUNTRIES",
            "AS",
            "T1",
            "JOIN",
            "CONTINENTS",
            "AS",
            "T2",
            "ON",
            "T1.Continent",
            "=",
            "T2.ContId",
            "JOIN",
            "CAR_MAKERS",
            "AS",
            "T3",
            "ON",
            "T1.CountryId",
            "=",
            "T3.Country",
            "WHERE",
            "T2.Continent",
            "=",
            "'europe",
            "'",
            "GROUP",
            "BY",
            "T1.CountryName",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "3",
            ";"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "countryname",
            "from",
            "countries",
            "as",
            "t1",
            "join",
            "continents",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "continent",
            "=",
            "t2",
            ".",
            "contid",
            "join",
            "car_makers",
            "as",
            "t3",
            "on",
            "t1",
            ".",
            "countryid",
            "=",
            "t3",
            ".",
            "country",
            "where",
            "t2",
            ".",
            "continent",
            "=",
            "value",
            "group",
            "by",
            "t1",
            ".",
            "countryname",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    4,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    5,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"europe\"",
                    null
                ]
            ]
        },
        "question": "list country name with continent of country equal to value for each country id that have the total number of country greater than or equal to value",
        "gold_question": "list country name of country with continent of continent equal to value for each country name of country that have the total number of country greater than or equal to value",
        "question_toks": [
            "list",
            "country",
            "name",
            "with",
            "continent",
            "of",
            "country",
            "equal",
            "to",
            "value",
            "for",
            "each",
            "country",
            "id",
            "that",
            "have",
            "the",
            "total",
            "number",
            "of",
            "country",
            "greater",
            "than",
            "or",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "car_1",
        "query": "SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;",
        "query_toks": [
            "SELECT",
            "T1.CountryName",
            "FROM",
            "COUNTRIES",
            "AS",
            "T1",
            "JOIN",
            "CONTINENTS",
            "AS",
            "T2",
            "ON",
            "T1.Continent",
            "=",
            "T2.ContId",
            "JOIN",
            "CAR_MAKERS",
            "AS",
            "T3",
            "ON",
            "T1.CountryId",
            "=",
            "T3.Country",
            "WHERE",
            "T2.Continent",
            "=",
            "'europe",
            "'",
            "GROUP",
            "BY",
            "T1.CountryName",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "3",
            ";"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "countryname",
            "from",
            "countries",
            "as",
            "t1",
            "join",
            "continents",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "continent",
            "=",
            "t2",
            ".",
            "contid",
            "join",
            "car_makers",
            "as",
            "t3",
            "on",
            "t1",
            ".",
            "countryid",
            "=",
            "t3",
            ".",
            "country",
            "where",
            "t2",
            ".",
            "continent",
            "=",
            "value",
            "group",
            "by",
            "t1",
            ".",
            "countryname",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    4,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    5,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"europe\"",
                    null
                ]
            ]
        },
        "question": "list country name of country with continent equal to value for each country id that have the total number of country greater than or equal to value",
        "gold_question": "list country name of country with continent of continent equal to value for each country name of country that have the total number of country greater than or equal to value",
        "question_toks": [
            "list",
            "country",
            "name",
            "of",
            "country",
            "with",
            "continent",
            "equal",
            "to",
            "value",
            "for",
            "each",
            "country",
            "id",
            "that",
            "have",
            "the",
            "total",
            "number",
            "of",
            "country",
            "greater",
            "than",
            "or",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "car_1",
        "query": "SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;",
        "query_toks": [
            "SELECT",
            "T2.horsepower",
            ",",
            "T1.Make",
            "FROM",
            "CAR_NAMES",
            "AS",
            "T1",
            "JOIN",
            "CARS_DATA",
            "AS",
            "T2",
            "ON",
            "T1.MakeId",
            "=",
            "T2.Id",
            "WHERE",
            "T2.cylinders",
            "=",
            "3",
            "ORDER",
            "BY",
            "T2.horsepower",
            "DESC",
            "LIMIT",
            "1",
            ";"
        ],
        "query_toks_no_value": [
            "select",
            "t2",
            ".",
            "horsepower",
            ",",
            "t1",
            ".",
            "make",
            "from",
            "car_names",
            "as",
            "t1",
            "join",
            "cars_data",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "makeid",
            "=",
            "t2",
            ".",
            "id",
            "where",
            "t2",
            ".",
            "cylinders",
            "=",
            "value",
            "order",
            "by",
            "t2",
            ".",
            "horsepower",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            16,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ],
                    [
                        "table_unit",
                        5
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            20,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                20,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            18,
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ]
        },
        "question": "list the maximum of horsepower of car data make of car name with cylinder of car data equal to value",
        "gold_question": "list top value items of horsepower of cars data make of car name with cylinder of cars data equal to value ordered by horsepower of cars data descendingly",
        "question_toks": [
            "list",
            "the",
            "maximum",
            "of",
            "horsepower",
            "of",
            "car",
            "data",
            "make",
            "of",
            "car",
            "name",
            "with",
            "cylinder",
            "of",
            "car",
            "data",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "car_1",
        "query": "SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;",
        "query_toks": [
            "SELECT",
            "T2.horsepower",
            ",",
            "T1.Make",
            "FROM",
            "CAR_NAMES",
            "AS",
            "T1",
            "JOIN",
            "CARS_DATA",
            "AS",
            "T2",
            "ON",
            "T1.MakeId",
            "=",
            "T2.Id",
            "WHERE",
            "T2.cylinders",
            "=",
            "3",
            "ORDER",
            "BY",
            "T2.horsepower",
            "DESC",
            "LIMIT",
            "1",
            ";"
        ],
        "query_toks_no_value": [
            "select",
            "t2",
            ".",
            "horsepower",
            ",",
            "t1",
            ".",
            "make",
            "from",
            "car_names",
            "as",
            "t1",
            "join",
            "cars_data",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "makeid",
            "=",
            "t2",
            ".",
            "id",
            "where",
            "t2",
            ".",
            "cylinders",
            "=",
            "value",
            "order",
            "by",
            "t2",
            ".",
            "horsepower",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            16,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ],
                    [
                        "table_unit",
                        5
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            20,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                20,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            18,
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ]
        },
        "question": "list the maximum of horsepower of car data make of car name with cylinder of car data equal to value",
        "gold_question": "list top value items of horsepower of cars data make of car name with cylinder of cars data equal to value ordered by horsepower of cars data descendingly",
        "question_toks": [
            "list",
            "the",
            "maximum",
            "of",
            "horsepower",
            "of",
            "car",
            "data",
            "make",
            "of",
            "car",
            "name",
            "with",
            "cylinder",
            "of",
            "car",
            "data",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "car_1",
        "query": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.mpg DESC LIMIT 1;",
        "query_toks": [
            "SELECT",
            "T1.Model",
            "FROM",
            "CAR_NAMES",
            "AS",
            "T1",
            "JOIN",
            "CARS_DATA",
            "AS",
            "T2",
            "ON",
            "T1.MakeId",
            "=",
            "T2.Id",
            "ORDER",
            "BY",
            "T2.mpg",
            "DESC",
            "LIMIT",
            "1",
            ";"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "model",
            "from",
            "car_names",
            "as",
            "t1",
            "join",
            "cars_data",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "makeid",
            "=",
            "t2",
            ".",
            "id",
            "order",
            "by",
            "t2",
            ".",
            "mpg",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            16,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ],
                    [
                        "table_unit",
                        5
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            17,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of model of car name for each model of car name ordered by the maximum of mpg of car data descendingly",
        "gold_question": "list top value items of model of car name ordered by mpg of cars data descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "model",
            "of",
            "car",
            "name",
            "for",
            "each",
            "model",
            "of",
            "car",
            "name",
            "ordered",
            "by",
            "the",
            "maximum",
            "of",
            "mpg",
            "of",
            "car",
            "data",
            "descendingly"
        ]
    },
    {
        "db_id": "car_1",
        "query": "select t1.model from car_names as t1 join cars_data as t2 on t1.makeid  =  t2.id order by t2.mpg desc limit 1;",
        "query_toks": [
            "select",
            "t1.model",
            "from",
            "car_names",
            "as",
            "t1",
            "join",
            "cars_data",
            "as",
            "t2",
            "on",
            "t1.makeid",
            "=",
            "t2.id",
            "order",
            "by",
            "t2.mpg",
            "desc",
            "limit",
            "1",
            ";"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "model",
            "from",
            "car_names",
            "as",
            "t1",
            "join",
            "cars_data",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "makeid",
            "=",
            "t2",
            ".",
            "id",
            "order",
            "by",
            "t2",
            ".",
            "mpg",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            16,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ],
                    [
                        "table_unit",
                        5
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            17,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of model of model list ordered by mpg of car data descendingly",
        "gold_question": "list top value items of model of car name ordered by mpg of cars data descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "model",
            "of",
            "model",
            "list",
            "ordered",
            "by",
            "mpg",
            "of",
            "car",
            "data",
            "descendingly"
        ]
    },
    {
        "db_id": "car_1",
        "query": "SELECT avg(horsepower) FROM CARS_DATA WHERE YEAR  <  1980;",
        "query_toks": [
            "SELECT",
            "avg",
            "(",
            "horsepower",
            ")",
            "FROM",
            "CARS_DATA",
            "WHERE",
            "YEAR",
            "<",
            "1980",
            ";"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "horsepower",
            ")",
            "from",
            "cars_data",
            "where",
            "year",
            "<",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                20,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    4,
                    [
                        0,
                        [
                            0,
                            23,
                            false
                        ],
                        null
                    ],
                    1980.0,
                    null
                ]
            ]
        },
        "question": "list the average of horsepower of car data with year less than value",
        "gold_question": "list the average of horsepower of cars data with year less than value",
        "question_toks": [
            "list",
            "the",
            "average",
            "of",
            "horsepower",
            "of",
            "car",
            "data",
            "with",
            "year",
            "less",
            "than",
            "value"
        ]
    },
    {
        "db_id": "car_1",
        "query": "select avg(horsepower) from cars_data where year  <  1980;",
        "query_toks": [
            "select",
            "avg",
            "(",
            "horsepower",
            ")",
            "from",
            "cars_data",
            "where",
            "year",
            "<",
            "1980",
            ";"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "horsepower",
            ")",
            "from",
            "cars_data",
            "where",
            "year",
            "<",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                20,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    4,
                    [
                        0,
                        [
                            0,
                            23,
                            false
                        ],
                        null
                    ],
                    1980.0,
                    null
                ]
            ]
        },
        "question": "list the average of horsepower of car data with year less than value",
        "gold_question": "list the average of horsepower of cars data with year less than value",
        "question_toks": [
            "list",
            "the",
            "average",
            "of",
            "horsepower",
            "of",
            "car",
            "data",
            "with",
            "year",
            "less",
            "than",
            "value"
        ]
    },
    {
        "db_id": "car_1",
        "query": "SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo';",
        "query_toks": [
            "SELECT",
            "avg",
            "(",
            "T2.edispl",
            ")",
            "FROM",
            "CAR_NAMES",
            "AS",
            "T1",
            "JOIN",
            "CARS_DATA",
            "AS",
            "T2",
            "ON",
            "T1.MakeId",
            "=",
            "T2.Id",
            "WHERE",
            "T1.Model",
            "=",
            "'volvo",
            "'",
            ";"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "t2",
            ".",
            "edispl",
            ")",
            "from",
            "car_names",
            "as",
            "t1",
            "join",
            "cars_data",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "makeid",
            "=",
            "t2",
            ".",
            "id",
            "where",
            "t1",
            ".",
            "model",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            16,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ],
                    [
                        "table_unit",
                        5
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                19,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            14,
                            false
                        ],
                        null
                    ],
                    "\"volvo\"",
                    null
                ]
            ]
        },
        "question": "list the average of edispl of car data with make of car name equal to value",
        "gold_question": "list the average of edispl of cars data with model of car name equal to value",
        "question_toks": [
            "list",
            "the",
            "average",
            "of",
            "edispl",
            "of",
            "car",
            "data",
            "with",
            "make",
            "of",
            "car",
            "name",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "car_1",
        "query": "SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo';",
        "query_toks": [
            "SELECT",
            "avg",
            "(",
            "T2.edispl",
            ")",
            "FROM",
            "CAR_NAMES",
            "AS",
            "T1",
            "JOIN",
            "CARS_DATA",
            "AS",
            "T2",
            "ON",
            "T1.MakeId",
            "=",
            "T2.Id",
            "WHERE",
            "T1.Model",
            "=",
            "'volvo",
            "'",
            ";"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "t2",
            ".",
            "edispl",
            ")",
            "from",
            "car_names",
            "as",
            "t1",
            "join",
            "cars_data",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "makeid",
            "=",
            "t2",
            ".",
            "id",
            "where",
            "t1",
            ".",
            "model",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            16,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ],
                    [
                        "table_unit",
                        5
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                19,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            14,
                            false
                        ],
                        null
                    ],
                    "\"volvo\"",
                    null
                ]
            ]
        },
        "question": "list the average of edispl of car data with make of car name equal to value",
        "gold_question": "list the average of edispl of cars data with model of car name equal to value",
        "question_toks": [
            "list",
            "the",
            "average",
            "of",
            "edispl",
            "of",
            "car",
            "data",
            "with",
            "make",
            "of",
            "car",
            "name",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "car_1",
        "query": "SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;",
        "query_toks": [
            "SELECT",
            "max",
            "(",
            "Accelerate",
            ")",
            ",",
            "Cylinders",
            "FROM",
            "CARS_DATA",
            "GROUP",
            "BY",
            "Cylinders",
            ";"
        ],
        "query_toks_no_value": [
            "select",
            "max",
            "(",
            "accelerate",
            ")",
            ",",
            "cylinders",
            "from",
            "cars_data",
            "group",
            "by",
            "cylinders"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    18,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                22,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                18,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list the maximum of accelerate cylinder of car data for each cylinder",
        "gold_question": "list the maximum of accelerate cylinder of cars data for each cylinder",
        "question_toks": [
            "list",
            "the",
            "maximum",
            "of",
            "accelerate",
            "cylinder",
            "of",
            "car",
            "data",
            "for",
            "each",
            "cylinder"
        ]
    },
    {
        "db_id": "car_1",
        "query": "SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;",
        "query_toks": [
            "SELECT",
            "max",
            "(",
            "Accelerate",
            ")",
            ",",
            "Cylinders",
            "FROM",
            "CARS_DATA",
            "GROUP",
            "BY",
            "Cylinders",
            ";"
        ],
        "query_toks_no_value": [
            "select",
            "max",
            "(",
            "accelerate",
            ")",
            ",",
            "cylinders",
            "from",
            "cars_data",
            "group",
            "by",
            "cylinders"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    18,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                22,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                18,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list the maximum of accelerate cylinder of car data for each cylinder",
        "gold_question": "list the maximum of accelerate cylinder of cars data for each cylinder",
        "question_toks": [
            "list",
            "the",
            "maximum",
            "of",
            "accelerate",
            "cylinder",
            "of",
            "car",
            "data",
            "for",
            "each",
            "cylinder"
        ]
    },
    {
        "db_id": "car_1",
        "query": "SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;",
        "query_toks": [
            "SELECT",
            "Model",
            "FROM",
            "CAR_NAMES",
            "GROUP",
            "BY",
            "Model",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1",
            ";"
        ],
        "query_toks_no_value": [
            "select",
            "model",
            "from",
            "car_names",
            "group",
            "by",
            "model",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    14,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of model of car name for each model ordered by the total number of car name descendingly",
        "gold_question": "list top value items of model of car name for each model ordered by the total number of car name descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "model",
            "of",
            "car",
            "name",
            "for",
            "each",
            "model",
            "ordered",
            "by",
            "the",
            "total",
            "number",
            "of",
            "car",
            "name",
            "descendingly"
        ]
    },
    {
        "db_id": "car_1",
        "query": "SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;",
        "query_toks": [
            "SELECT",
            "Model",
            "FROM",
            "CAR_NAMES",
            "GROUP",
            "BY",
            "Model",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1",
            ";"
        ],
        "query_toks_no_value": [
            "select",
            "model",
            "from",
            "car_names",
            "group",
            "by",
            "model",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    14,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of model of model list for each model ordered by the total number of model list descendingly",
        "gold_question": "list top value items of model of car name for each model ordered by the total number of car name descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "model",
            "of",
            "model",
            "list",
            "for",
            "each",
            "model",
            "ordered",
            "by",
            "the",
            "total",
            "number",
            "of",
            "model",
            "list",
            "descendingly"
        ]
    },
    {
        "db_id": "car_1",
        "query": "SELECT count(*) FROM CARS_DATA WHERE Cylinders  >  4;",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "CARS_DATA",
            "WHERE",
            "Cylinders",
            ">",
            "4",
            ";"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "cars_data",
            "where",
            "cylinders",
            ">",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            18,
                            false
                        ],
                        null
                    ],
                    4.0,
                    null
                ]
            ]
        },
        "question": "list the total number of car data with cylinder greater than value",
        "gold_question": "list the total number of cars data with cylinder greater than value",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "car",
            "data",
            "with",
            "cylinder",
            "greater",
            "than",
            "value"
        ]
    },
    {
        "db_id": "car_1",
        "query": "SELECT count(*) FROM CARS_DATA WHERE Cylinders  >  4;",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "CARS_DATA",
            "WHERE",
            "Cylinders",
            ">",
            "4",
            ";"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "cars_data",
            "where",
            "cylinders",
            ">",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            18,
                            false
                        ],
                        null
                    ],
                    4.0,
                    null
                ]
            ]
        },
        "question": "list the total number of car data with cylinder greater than value",
        "gold_question": "list the total number of cars data with cylinder greater than value",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "car",
            "data",
            "with",
            "cylinder",
            "greater",
            "than",
            "value"
        ]
    },
    {
        "db_id": "car_1",
        "query": "SELECT count(*) FROM CARS_DATA WHERE YEAR  =  1980;",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "CARS_DATA",
            "WHERE",
            "YEAR",
            "=",
            "1980",
            ";"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "cars_data",
            "where",
            "year",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            23,
                            false
                        ],
                        null
                    ],
                    1980.0,
                    null
                ]
            ]
        },
        "question": "list the total number of car data with year equal to value",
        "gold_question": "list the total number of cars data with year equal to value",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "car",
            "data",
            "with",
            "year",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "car_1",
        "query": "SELECT count(*) FROM CARS_DATA WHERE YEAR  =  1980;",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "CARS_DATA",
            "WHERE",
            "YEAR",
            "=",
            "1980",
            ";"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "cars_data",
            "where",
            "year",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            23,
                            false
                        ],
                        null
                    ],
                    1980.0,
                    null
                ]
            ]
        },
        "question": "list the total number of car data with year equal to value",
        "gold_question": "list the total number of cars data with year equal to value",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "car",
            "data",
            "with",
            "year",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "car_1",
        "query": "SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company';",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "CAR_MAKERS",
            "AS",
            "T1",
            "JOIN",
            "MODEL_LIST",
            "AS",
            "T2",
            "ON",
            "T1.Id",
            "=",
            "T2.Maker",
            "WHERE",
            "T1.FullName",
            "=",
            "'American",
            "Motor",
            "Company",
            "'",
            ";"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "car_makers",
            "as",
            "t1",
            "join",
            "model_list",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "id",
            "=",
            "t2",
            ".",
            "maker",
            "where",
            "t1",
            ".",
            "fullname",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ],
                    "\"American Motor Company\"",
                    null
                ]
            ]
        },
        "question": "list the total number of car maker with full name of car maker equal to value",
        "gold_question": "list the total number of car maker with full name of car maker equal to value",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "car",
            "maker",
            "with",
            "full",
            "name",
            "of",
            "car",
            "maker",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "car_1",
        "query": "SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company';",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "CAR_MAKERS",
            "AS",
            "T1",
            "JOIN",
            "MODEL_LIST",
            "AS",
            "T2",
            "ON",
            "T1.Id",
            "=",
            "T2.Maker",
            "WHERE",
            "T1.FullName",
            "=",
            "'American",
            "Motor",
            "Company",
            "'",
            ";"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "car_makers",
            "as",
            "t1",
            "join",
            "model_list",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "id",
            "=",
            "t2",
            ".",
            "maker",
            "where",
            "t1",
            ".",
            "fullname",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ],
                    "\"American Motor Company\"",
                    null
                ]
            ]
        },
        "question": "list the total number of car maker with full name of car maker equal to value",
        "gold_question": "list the total number of car maker with full name of car maker equal to value",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "car",
            "maker",
            "with",
            "full",
            "name",
            "of",
            "car",
            "maker",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "car_1",
        "query": "SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;",
        "query_toks": [
            "SELECT",
            "T1.FullName",
            ",",
            "T1.Id",
            "FROM",
            "CAR_MAKERS",
            "AS",
            "T1",
            "JOIN",
            "MODEL_LIST",
            "AS",
            "T2",
            "ON",
            "T1.Id",
            "=",
            "T2.Maker",
            "GROUP",
            "BY",
            "T1.Id",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "3",
            ";"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "fullname",
            ",",
            "t1",
            ".",
            "id",
            "from",
            "car_makers",
            "as",
            "t1",
            "join",
            "model_list",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "id",
            "=",
            "t2",
            ".",
            "maker",
            "group",
            "by",
            "t1",
            ".",
            "id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    6,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list full name of car maker id of car maker for each id of car maker that have the total number of car maker greater than value",
        "gold_question": "list full name of car maker id of car maker for each id of car maker that have the total number of car maker greater than value",
        "question_toks": [
            "list",
            "full",
            "name",
            "of",
            "car",
            "maker",
            "id",
            "of",
            "car",
            "maker",
            "for",
            "each",
            "id",
            "of",
            "car",
            "maker",
            "that",
            "have",
            "the",
            "total",
            "number",
            "of",
            "car",
            "maker",
            "greater",
            "than",
            "value"
        ]
    },
    {
        "db_id": "car_1",
        "query": "SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;",
        "query_toks": [
            "SELECT",
            "T1.FullName",
            ",",
            "T1.Id",
            "FROM",
            "CAR_MAKERS",
            "AS",
            "T1",
            "JOIN",
            "MODEL_LIST",
            "AS",
            "T2",
            "ON",
            "T1.Id",
            "=",
            "T2.Maker",
            "GROUP",
            "BY",
            "T1.Id",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "3",
            ";"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "fullname",
            ",",
            "t1",
            ".",
            "id",
            "from",
            "car_makers",
            "as",
            "t1",
            "join",
            "model_list",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "id",
            "=",
            "t2",
            ".",
            "maker",
            "group",
            "by",
            "t1",
            ".",
            "id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    6,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list maker of car maker id of car maker for each maker of model list that have the total number of model list greater than value",
        "gold_question": "list full name of car maker id of car maker for each id of car maker that have the total number of car maker greater than value",
        "question_toks": [
            "list",
            "maker",
            "of",
            "car",
            "maker",
            "id",
            "of",
            "car",
            "maker",
            "for",
            "each",
            "maker",
            "of",
            "model",
            "list",
            "that",
            "have",
            "the",
            "total",
            "number",
            "of",
            "model",
            "list",
            "greater",
            "than",
            "value"
        ]
    },
    {
        "db_id": "car_1",
        "query": "SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;",
        "query_toks": [
            "SELECT",
            "DISTINCT",
            "T2.Model",
            "FROM",
            "CAR_NAMES",
            "AS",
            "T1",
            "JOIN",
            "MODEL_LIST",
            "AS",
            "T2",
            "ON",
            "T1.Model",
            "=",
            "T2.Model",
            "JOIN",
            "CAR_MAKERS",
            "AS",
            "T3",
            "ON",
            "T2.Maker",
            "=",
            "T3.Id",
            "JOIN",
            "CARS_DATA",
            "AS",
            "T4",
            "ON",
            "T1.MakeId",
            "=",
            "T4.Id",
            "WHERE",
            "T3.FullName",
            "=",
            "'General",
            "Motors",
            "'",
            "OR",
            "T4.weight",
            ">",
            "3500",
            ";"
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "t2",
            ".",
            "model",
            "from",
            "car_names",
            "as",
            "t1",
            "join",
            "model_list",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "model",
            "=",
            "t2",
            ".",
            "model",
            "join",
            "car_makers",
            "as",
            "t3",
            "on",
            "t2",
            ".",
            "maker",
            "=",
            "t3",
            ".",
            "id",
            "join",
            "cars_data",
            "as",
            "t4",
            "on",
            "t1",
            ".",
            "makeid",
            "=",
            "t4",
            ".",
            "id",
            "where",
            "t3",
            ".",
            "fullname",
            "=",
            "value",
            "or",
            "t4",
            ".",
            "weight",
            ">",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            12,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            16,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ],
                    [
                        "table_unit",
                        3
                    ],
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        5
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ],
                    "\"General Motors\"",
                    null
                ],
                "or",
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            21,
                            false
                        ],
                        null
                    ],
                    3500.0,
                    null
                ]
            ]
        },
        "question": "list model of car name with full name of car maker equal to value or weight of car data greater than value",
        "gold_question": "list model of model list with full name of car maker equal to value or weight of cars data greater than value",
        "question_toks": [
            "list",
            "model",
            "of",
            "car",
            "name",
            "with",
            "full",
            "name",
            "of",
            "car",
            "maker",
            "equal",
            "to",
            "value",
            "or",
            "weight",
            "of",
            "car",
            "data",
            "greater",
            "than",
            "value"
        ]
    },
    {
        "db_id": "car_1",
        "query": "SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;",
        "query_toks": [
            "SELECT",
            "DISTINCT",
            "T2.Model",
            "FROM",
            "CAR_NAMES",
            "AS",
            "T1",
            "JOIN",
            "MODEL_LIST",
            "AS",
            "T2",
            "ON",
            "T1.Model",
            "=",
            "T2.Model",
            "JOIN",
            "CAR_MAKERS",
            "AS",
            "T3",
            "ON",
            "T2.Maker",
            "=",
            "T3.Id",
            "JOIN",
            "CARS_DATA",
            "AS",
            "T4",
            "ON",
            "T1.MakeId",
            "=",
            "T4.Id",
            "WHERE",
            "T3.FullName",
            "=",
            "'General",
            "Motors",
            "'",
            "OR",
            "T4.weight",
            ">",
            "3500",
            ";"
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "t2",
            ".",
            "model",
            "from",
            "car_names",
            "as",
            "t1",
            "join",
            "model_list",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "model",
            "=",
            "t2",
            ".",
            "model",
            "join",
            "car_makers",
            "as",
            "t3",
            "on",
            "t2",
            ".",
            "maker",
            "=",
            "t3",
            ".",
            "id",
            "join",
            "cars_data",
            "as",
            "t4",
            "on",
            "t1",
            ".",
            "makeid",
            "=",
            "t4",
            ".",
            "id",
            "where",
            "t3",
            ".",
            "fullname",
            "=",
            "value",
            "or",
            "t4",
            ".",
            "weight",
            ">",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            12,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            16,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ],
                    [
                        "table_unit",
                        3
                    ],
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        5
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ],
                    "\"General Motors\"",
                    null
                ],
                "or",
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            21,
                            false
                        ],
                        null
                    ],
                    3500.0,
                    null
                ]
            ]
        },
        "question": "list model of car name with full name of car maker equal to value or weight of car data greater than value",
        "gold_question": "list model of model list with full name of car maker equal to value or weight of cars data greater than value",
        "question_toks": [
            "list",
            "model",
            "of",
            "car",
            "name",
            "with",
            "full",
            "name",
            "of",
            "car",
            "maker",
            "equal",
            "to",
            "value",
            "or",
            "weight",
            "of",
            "car",
            "data",
            "greater",
            "than",
            "value"
        ]
    },
    {
        "db_id": "car_1",
        "query": "select distinct year from cars_data where weight between 3000 and 4000;",
        "query_toks": [
            "select",
            "distinct",
            "year",
            "from",
            "cars_data",
            "where",
            "weight",
            "between",
            "3000",
            "and",
            "4000",
            ";"
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "year",
            "from",
            "cars_data",
            "where",
            "weight",
            "between",
            "value",
            "and",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                23,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    1,
                    [
                        0,
                        [
                            0,
                            21,
                            false
                        ],
                        null
                    ],
                    3000.0,
                    4000.0
                ]
            ]
        },
        "question": "list year of car data with weight less than or equal to value and weight greater than or equal to value",
        "gold_question": "list year of cars data with weight is between value and value",
        "question_toks": [
            "list",
            "year",
            "of",
            "car",
            "data",
            "with",
            "weight",
            "less",
            "than",
            "or",
            "equal",
            "to",
            "value",
            "and",
            "weight",
            "greater",
            "than",
            "or",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "car_1",
        "query": "select distinct year from cars_data where weight between 3000 and 4000;",
        "query_toks": [
            "select",
            "distinct",
            "year",
            "from",
            "cars_data",
            "where",
            "weight",
            "between",
            "3000",
            "and",
            "4000",
            ";"
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "year",
            "from",
            "cars_data",
            "where",
            "weight",
            "between",
            "value",
            "and",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                23,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    1,
                    [
                        0,
                        [
                            0,
                            21,
                            false
                        ],
                        null
                    ],
                    3000.0,
                    4000.0
                ]
            ]
        },
        "question": "list year of car data with weight less than value and list year of car data with weight greater than value",
        "gold_question": "list year of cars data with weight is between value and value",
        "question_toks": [
            "list",
            "year",
            "of",
            "car",
            "data",
            "with",
            "weight",
            "less",
            "than",
            "value",
            "and",
            "list",
            "year",
            "of",
            "car",
            "data",
            "with",
            "weight",
            "greater",
            "than",
            "value"
        ]
    },
    {
        "db_id": "car_1",
        "query": "SELECT T1.horsepower FROM CARS_DATA AS T1 ORDER BY T1.accelerate DESC LIMIT 1;",
        "query_toks": [
            "SELECT",
            "T1.horsepower",
            "FROM",
            "CARS_DATA",
            "AS",
            "T1",
            "ORDER",
            "BY",
            "T1.accelerate",
            "DESC",
            "LIMIT",
            "1",
            ";"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "horsepower",
            "from",
            "cars_data",
            "as",
            "t1",
            "order",
            "by",
            "t1",
            ".",
            "accelerate",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            22,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                20,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of horsepower of car data ordered by accelerate descendingly",
        "gold_question": "list top value items of horsepower of cars data ordered by accelerate descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "horsepower",
            "of",
            "car",
            "data",
            "ordered",
            "by",
            "accelerate",
            "descendingly"
        ]
    },
    {
        "db_id": "car_1",
        "query": "SELECT T1.horsepower FROM CARS_DATA AS T1 ORDER BY T1.accelerate DESC LIMIT 1;",
        "query_toks": [
            "SELECT",
            "T1.horsepower",
            "FROM",
            "CARS_DATA",
            "AS",
            "T1",
            "ORDER",
            "BY",
            "T1.accelerate",
            "DESC",
            "LIMIT",
            "1",
            ";"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "horsepower",
            "from",
            "cars_data",
            "as",
            "t1",
            "order",
            "by",
            "t1",
            ".",
            "accelerate",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            22,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                20,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of horsepower of car data ordered by accelerate descendingly",
        "gold_question": "list top value items of horsepower of cars data ordered by accelerate descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "horsepower",
            "of",
            "car",
            "data",
            "ordered",
            "by",
            "accelerate",
            "descendingly"
        ]
    },
    {
        "db_id": "car_1",
        "query": "SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;",
        "query_toks": [
            "SELECT",
            "T1.cylinders",
            "FROM",
            "CARS_DATA",
            "AS",
            "T1",
            "JOIN",
            "CAR_NAMES",
            "AS",
            "T2",
            "ON",
            "T1.Id",
            "=",
            "T2.MakeId",
            "WHERE",
            "T2.Model",
            "=",
            "'volvo",
            "'",
            "ORDER",
            "BY",
            "T1.accelerate",
            "ASC",
            "LIMIT",
            "1",
            ";"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "cylinders",
            "from",
            "cars_data",
            "as",
            "t1",
            "join",
            "car_names",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "id",
            "=",
            "t2",
            ".",
            "makeid",
            "where",
            "t2",
            ".",
            "model",
            "=",
            "value",
            "order",
            "by",
            "t1",
            ".",
            "accelerate",
            "asc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                16,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        5
                    ],
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            22,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                18,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            14,
                            false
                        ],
                        null
                    ],
                    "\"volvo\"",
                    null
                ]
            ]
        },
        "question": "list top value items of cylinder of car data with make of car name equal to value ordered by accelerate of car data ascendingly",
        "gold_question": "list top value items of cylinder of cars data with model of car name equal to value ordered by accelerate of cars data ascendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "cylinder",
            "of",
            "car",
            "data",
            "with",
            "make",
            "of",
            "car",
            "name",
            "equal",
            "to",
            "value",
            "ordered",
            "by",
            "accelerate",
            "of",
            "car",
            "data",
            "ascendingly"
        ]
    },
    {
        "db_id": "car_1",
        "query": "SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;",
        "query_toks": [
            "SELECT",
            "T1.cylinders",
            "FROM",
            "CARS_DATA",
            "AS",
            "T1",
            "JOIN",
            "CAR_NAMES",
            "AS",
            "T2",
            "ON",
            "T1.Id",
            "=",
            "T2.MakeId",
            "WHERE",
            "T2.Model",
            "=",
            "'volvo",
            "'",
            "ORDER",
            "BY",
            "T1.accelerate",
            "ASC",
            "LIMIT",
            "1",
            ";"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "cylinders",
            "from",
            "cars_data",
            "as",
            "t1",
            "join",
            "car_names",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "id",
            "=",
            "t2",
            ".",
            "makeid",
            "where",
            "t2",
            ".",
            "model",
            "=",
            "value",
            "order",
            "by",
            "t1",
            ".",
            "accelerate",
            "asc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                16,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        5
                    ],
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            22,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                18,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            14,
                            false
                        ],
                        null
                    ],
                    "\"volvo\"",
                    null
                ]
            ]
        },
        "question": "list top value items of cylinder of car data with make of car name equal to value ordered by accelerate of car data ascendingly",
        "gold_question": "list top value items of cylinder of cars data with model of car name equal to value ordered by accelerate of cars data ascendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "cylinder",
            "of",
            "car",
            "data",
            "with",
            "make",
            "of",
            "car",
            "name",
            "equal",
            "to",
            "value",
            "ordered",
            "by",
            "accelerate",
            "of",
            "car",
            "data",
            "ascendingly"
        ]
    },
    {
        "db_id": "car_1",
        "query": "SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );",
        "query_toks": [
            "SELECT",
            "COUNT",
            "(",
            "*",
            ")",
            "FROM",
            "CARS_DATA",
            "WHERE",
            "Accelerate",
            ">",
            "(",
            "SELECT",
            "Accelerate",
            "FROM",
            "CARS_DATA",
            "ORDER",
            "BY",
            "Horsepower",
            "DESC",
            "LIMIT",
            "1",
            ")",
            ";"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "cars_data",
            "where",
            "accelerate",
            ">",
            "(",
            "select",
            "accelerate",
            "from",
            "cars_data",
            "order",
            "by",
            "horsepower",
            "desc",
            "limit",
            "value",
            ")"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            22,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    5
                                ]
                            ]
                        },
                        "groupby": [],
                        "having": [],
                        "intersect": null,
                        "limit": 1,
                        "orderby": [
                            "desc",
                            [
                                [
                                    0,
                                    [
                                        0,
                                        20,
                                        false
                                    ],
                                    null
                                ]
                            ]
                        ],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            22,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": []
                    },
                    null
                ]
            ]
        },
        "question": "list the total number of car data with accelerate greater than ( the maximum of accelerate of car data )",
        "gold_question": "list the total number of cars data with accelerate greater than ( accelerate top value items of of cars data ordered by horsepower descendingly )",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "car",
            "data",
            "with",
            "accelerate",
            "greater",
            "than",
            "(",
            "the",
            "maximum",
            "of",
            "accelerate",
            "of",
            "car",
            "data",
            ")"
        ]
    },
    {
        "db_id": "car_1",
        "query": "SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );",
        "query_toks": [
            "SELECT",
            "COUNT",
            "(",
            "*",
            ")",
            "FROM",
            "CARS_DATA",
            "WHERE",
            "Accelerate",
            ">",
            "(",
            "SELECT",
            "Accelerate",
            "FROM",
            "CARS_DATA",
            "ORDER",
            "BY",
            "Horsepower",
            "DESC",
            "LIMIT",
            "1",
            ")",
            ";"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "cars_data",
            "where",
            "accelerate",
            ">",
            "(",
            "select",
            "accelerate",
            "from",
            "cars_data",
            "order",
            "by",
            "horsepower",
            "desc",
            "limit",
            "value",
            ")"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            22,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    5
                                ]
                            ]
                        },
                        "groupby": [],
                        "having": [],
                        "intersect": null,
                        "limit": 1,
                        "orderby": [
                            "desc",
                            [
                                [
                                    0,
                                    [
                                        0,
                                        20,
                                        false
                                    ],
                                    null
                                ]
                            ]
                        ],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            22,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": []
                    },
                    null
                ]
            ]
        },
        "question": "list the total number of car data with accelerate greater than ( the maximum of accelerate of car data )",
        "gold_question": "list the total number of cars data with accelerate greater than ( accelerate top value items of of cars data ordered by horsepower descendingly )",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "car",
            "data",
            "with",
            "accelerate",
            "greater",
            "than",
            "(",
            "the",
            "maximum",
            "of",
            "accelerate",
            "of",
            "car",
            "data",
            ")"
        ]
    },
    {
        "db_id": "car_1",
        "query": "select count(*) from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  2",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "countries",
            "as",
            "t1",
            "join",
            "car_makers",
            "as",
            "t2",
            "on",
            "t1.countryid",
            "=",
            "t2.country",
            "group",
            "by",
            "t1.countryid",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "countries",
            "as",
            "t1",
            "join",
            "car_makers",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "countryid",
            "=",
            "t2",
            ".",
            "country",
            "group",
            "by",
            "t1",
            ".",
            "countryid",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    3,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list country of car maker for each country that have the total number of car maker greater than value",
        "gold_question": "list the total number of country for each country id of country that have the total number of country greater than value",
        "question_toks": [
            "list",
            "country",
            "of",
            "car",
            "maker",
            "for",
            "each",
            "country",
            "that",
            "have",
            "the",
            "total",
            "number",
            "of",
            "car",
            "maker",
            "greater",
            "than",
            "value"
        ]
    },
    {
        "db_id": "car_1",
        "query": "select count(*) from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  2",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "countries",
            "as",
            "t1",
            "join",
            "car_makers",
            "as",
            "t2",
            "on",
            "t1.countryid",
            "=",
            "t2.country",
            "group",
            "by",
            "t1.countryid",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "countries",
            "as",
            "t1",
            "join",
            "car_makers",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "countryid",
            "=",
            "t2",
            ".",
            "country",
            "group",
            "by",
            "t1",
            ".",
            "countryid",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    3,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list country the total number of car maker for each country that have the total number of car maker greater than value",
        "gold_question": "list the total number of country for each country id of country that have the total number of country greater than value",
        "question_toks": [
            "list",
            "country",
            "the",
            "total",
            "number",
            "of",
            "car",
            "maker",
            "for",
            "each",
            "country",
            "that",
            "have",
            "the",
            "total",
            "number",
            "of",
            "car",
            "maker",
            "greater",
            "than",
            "value"
        ]
    },
    {
        "db_id": "car_1",
        "query": "SELECT COUNT(*) FROM CARS_DATA WHERE Cylinders  >  6;",
        "query_toks": [
            "SELECT",
            "COUNT",
            "(",
            "*",
            ")",
            "FROM",
            "CARS_DATA",
            "WHERE",
            "Cylinders",
            ">",
            "6",
            ";"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "cars_data",
            "where",
            "cylinders",
            ">",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            18,
                            false
                        ],
                        null
                    ],
                    6.0,
                    null
                ]
            ]
        },
        "question": "list the total number of car data with cylinder greater than value",
        "gold_question": "list the total number of cars data with cylinder greater than value",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "car",
            "data",
            "with",
            "cylinder",
            "greater",
            "than",
            "value"
        ]
    },
    {
        "db_id": "car_1",
        "query": "SELECT COUNT(*) FROM CARS_DATA WHERE Cylinders  >  6;",
        "query_toks": [
            "SELECT",
            "COUNT",
            "(",
            "*",
            ")",
            "FROM",
            "CARS_DATA",
            "WHERE",
            "Cylinders",
            ">",
            "6",
            ";"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "cars_data",
            "where",
            "cylinders",
            ">",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            18,
                            false
                        ],
                        null
                    ],
                    6.0,
                    null
                ]
            ]
        },
        "question": "list the total number of car data with cylinder greater than value",
        "gold_question": "list the total number of cars data with cylinder greater than value",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "car",
            "data",
            "with",
            "cylinder",
            "greater",
            "than",
            "value"
        ]
    },
    {
        "db_id": "car_1",
        "query": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;",
        "query_toks": [
            "SELECT",
            "T1.Model",
            "FROM",
            "CAR_NAMES",
            "AS",
            "T1",
            "JOIN",
            "CARS_DATA",
            "AS",
            "T2",
            "ON",
            "T1.MakeId",
            "=",
            "T2.Id",
            "WHERE",
            "T2.Cylinders",
            "=",
            "4",
            "ORDER",
            "BY",
            "T2.horsepower",
            "DESC",
            "LIMIT",
            "1",
            ";"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "model",
            "from",
            "car_names",
            "as",
            "t1",
            "join",
            "cars_data",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "makeid",
            "=",
            "t2",
            ".",
            "id",
            "where",
            "t2",
            ".",
            "cylinders",
            "=",
            "value",
            "order",
            "by",
            "t2",
            ".",
            "horsepower",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            16,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ],
                    [
                        "table_unit",
                        5
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            20,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            18,
                            false
                        ],
                        null
                    ],
                    4.0,
                    null
                ]
            ]
        },
        "question": "list top value items of model of model list with cylinder of car data equal to value ordered by horsepower of car data descendingly",
        "gold_question": "list top value items of model of car name with cylinder of cars data equal to value ordered by horsepower of cars data descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "model",
            "of",
            "model",
            "list",
            "with",
            "cylinder",
            "of",
            "car",
            "data",
            "equal",
            "to",
            "value",
            "ordered",
            "by",
            "horsepower",
            "of",
            "car",
            "data",
            "descendingly"
        ]
    },
    {
        "db_id": "car_1",
        "query": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;",
        "query_toks": [
            "SELECT",
            "T1.Model",
            "FROM",
            "CAR_NAMES",
            "AS",
            "T1",
            "JOIN",
            "CARS_DATA",
            "AS",
            "T2",
            "ON",
            "T1.MakeId",
            "=",
            "T2.Id",
            "WHERE",
            "T2.Cylinders",
            "=",
            "4",
            "ORDER",
            "BY",
            "T2.horsepower",
            "DESC",
            "LIMIT",
            "1",
            ";"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "model",
            "from",
            "car_names",
            "as",
            "t1",
            "join",
            "cars_data",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "makeid",
            "=",
            "t2",
            ".",
            "id",
            "where",
            "t2",
            ".",
            "cylinders",
            "=",
            "value",
            "order",
            "by",
            "t2",
            ".",
            "horsepower",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            16,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ],
                    [
                        "table_unit",
                        5
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            20,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            18,
                            false
                        ],
                        null
                    ],
                    4.0,
                    null
                ]
            ]
        },
        "question": "list top value items of model of model list with cylinder of car data equal to value ordered by horsepower of car data descendingly",
        "gold_question": "list top value items of model of car name with cylinder of cars data equal to value ordered by horsepower of cars data descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "model",
            "of",
            "model",
            "list",
            "with",
            "cylinder",
            "of",
            "car",
            "data",
            "equal",
            "to",
            "value",
            "ordered",
            "by",
            "horsepower",
            "of",
            "car",
            "data",
            "descendingly"
        ]
    },
    {
        "db_id": "car_1",
        "query": "SELECT T2.MakeId ,  T2.Make FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Horsepower  >  (SELECT min(Horsepower) FROM CARS_DATA) AND T1.Cylinders  <=  3;",
        "query_toks": [
            "SELECT",
            "T2.MakeId",
            ",",
            "T2.Make",
            "FROM",
            "CARS_DATA",
            "AS",
            "T1",
            "JOIN",
            "CAR_NAMES",
            "AS",
            "T2",
            "ON",
            "T1.Id",
            "=",
            "T2.MakeId",
            "WHERE",
            "T1.Horsepower",
            ">",
            "(",
            "SELECT",
            "min",
            "(",
            "Horsepower",
            ")",
            "FROM",
            "CARS_DATA",
            ")",
            "AND",
            "T1.Cylinders",
            "<",
            "=",
            "3",
            ";"
        ],
        "query_toks_no_value": [
            "select",
            "t2",
            ".",
            "makeid",
            ",",
            "t2",
            ".",
            "make",
            "from",
            "cars_data",
            "as",
            "t1",
            "join",
            "car_names",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "id",
            "=",
            "t2",
            ".",
            "makeid",
            "where",
            "t1",
            ".",
            "horsepower",
            ">",
            "(",
            "select",
            "min",
            "(",
            "horsepower",
            ")",
            "from",
            "cars_data",
            ")",
            "and",
            "t1",
            ".",
            "cylinders",
            "<",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                16,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        5
                    ],
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            20,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    5
                                ]
                            ]
                        },
                        "groupby": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderby": [],
                        "select": [
                            false,
                            [
                                [
                                    2,
                                    [
                                        0,
                                        [
                                            0,
                                            20,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": []
                    },
                    null
                ],
                "and",
                [
                    false,
                    6,
                    [
                        0,
                        [
                            0,
                            18,
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ]
        },
        "question": "list make id of car name full name of car maker with horsepower of car data less than ( the minimum of horsepower of car data with cylinder of car data greater than value )",
        "gold_question": "list make id of car name make of car name with horsepower of cars data greater than ( the minimum of horsepower of cars data ) and cylinder of cars data less than or equal to value",
        "question_toks": [
            "list",
            "make",
            "id",
            "of",
            "car",
            "name",
            "full",
            "name",
            "of",
            "car",
            "maker",
            "with",
            "horsepower",
            "of",
            "car",
            "data",
            "less",
            "than",
            "(",
            "the",
            "minimum",
            "of",
            "horsepower",
            "of",
            "car",
            "data",
            "with",
            "cylinder",
            "of",
            "car",
            "data",
            "greater",
            "than",
            "value",
            ")"
        ]
    },
    {
        "db_id": "car_1",
        "query": "select t2.makeid ,  t2.make from cars_data as t1 join car_names as t2 on t1.id  =  t2.makeid where t1.horsepower  >  (select min(horsepower) from cars_data) and t1.cylinders  <  4;",
        "query_toks": [
            "select",
            "t2.makeid",
            ",",
            "t2.make",
            "from",
            "cars_data",
            "as",
            "t1",
            "join",
            "car_names",
            "as",
            "t2",
            "on",
            "t1.id",
            "=",
            "t2.makeid",
            "where",
            "t1.horsepower",
            ">",
            "(",
            "select",
            "min",
            "(",
            "horsepower",
            ")",
            "from",
            "cars_data",
            ")",
            "and",
            "t1.cylinders",
            "<",
            "4",
            ";"
        ],
        "query_toks_no_value": [
            "select",
            "t2",
            ".",
            "makeid",
            ",",
            "t2",
            ".",
            "make",
            "from",
            "cars_data",
            "as",
            "t1",
            "join",
            "car_names",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "id",
            "=",
            "t2",
            ".",
            "makeid",
            "where",
            "t1",
            ".",
            "horsepower",
            ">",
            "(",
            "select",
            "min",
            "(",
            "horsepower",
            ")",
            "from",
            "cars_data",
            ")",
            "and",
            "t1",
            ".",
            "cylinders",
            "<",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                16,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        5
                    ],
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            20,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    5
                                ]
                            ]
                        },
                        "groupby": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderby": [],
                        "select": [
                            false,
                            [
                                [
                                    2,
                                    [
                                        0,
                                        [
                                            0,
                                            20,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": []
                    },
                    null
                ],
                "and",
                [
                    false,
                    4,
                    [
                        0,
                        [
                            0,
                            18,
                            false
                        ],
                        null
                    ],
                    4.0,
                    null
                ]
            ]
        },
        "question": "list make id of car name full name of car maker with cylinder of car data less than value",
        "gold_question": "list make id of car name make of car name with horsepower of cars data greater than ( the minimum of horsepower of cars data ) and cylinder of cars data less than value",
        "question_toks": [
            "list",
            "make",
            "id",
            "of",
            "car",
            "name",
            "full",
            "name",
            "of",
            "car",
            "maker",
            "with",
            "cylinder",
            "of",
            "car",
            "data",
            "less",
            "than",
            "value"
        ]
    },
    {
        "db_id": "car_1",
        "query": "select max(mpg) from cars_data where cylinders  =  8 or year  <  1980",
        "query_toks": [
            "select",
            "max",
            "(",
            "mpg",
            ")",
            "from",
            "cars_data",
            "where",
            "cylinders",
            "=",
            "8",
            "or",
            "year",
            "<",
            "1980"
        ],
        "query_toks_no_value": [
            "select",
            "max",
            "(",
            "mpg",
            ")",
            "from",
            "cars_data",
            "where",
            "cylinders",
            "=",
            "value",
            "or",
            "year",
            "<",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                17,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            18,
                            false
                        ],
                        null
                    ],
                    8.0,
                    null
                ],
                "or",
                [
                    false,
                    4,
                    [
                        0,
                        [
                            0,
                            23,
                            false
                        ],
                        null
                    ],
                    1980.0,
                    null
                ]
            ]
        },
        "question": "list the maximum of mpg the maximum of edispl of car data with cylinder equal to value or year less than value",
        "gold_question": "list the maximum of mpg of cars data with cylinder equal to value or year less than value",
        "question_toks": [
            "list",
            "the",
            "maximum",
            "of",
            "mpg",
            "the",
            "maximum",
            "of",
            "edispl",
            "of",
            "car",
            "data",
            "with",
            "cylinder",
            "equal",
            "to",
            "value",
            "or",
            "year",
            "less",
            "than",
            "value"
        ]
    },
    {
        "db_id": "car_1",
        "query": "select max(mpg) from cars_data where cylinders  =  8 or year  <  1980",
        "query_toks": [
            "select",
            "max",
            "(",
            "mpg",
            ")",
            "from",
            "cars_data",
            "where",
            "cylinders",
            "=",
            "8",
            "or",
            "year",
            "<",
            "1980"
        ],
        "query_toks_no_value": [
            "select",
            "max",
            "(",
            "mpg",
            ")",
            "from",
            "cars_data",
            "where",
            "cylinders",
            "=",
            "value",
            "or",
            "year",
            "<",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                17,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            18,
                            false
                        ],
                        null
                    ],
                    8.0,
                    null
                ],
                "or",
                [
                    false,
                    4,
                    [
                        0,
                        [
                            0,
                            23,
                            false
                        ],
                        null
                    ],
                    1980.0,
                    null
                ]
            ]
        },
        "question": "list the maximum of mpg of car data with cylinder equal to value or year less than value",
        "gold_question": "list the maximum of mpg of cars data with cylinder equal to value or year less than value",
        "question_toks": [
            "list",
            "the",
            "maximum",
            "of",
            "mpg",
            "of",
            "car",
            "data",
            "with",
            "cylinder",
            "equal",
            "to",
            "value",
            "or",
            "year",
            "less",
            "than",
            "value"
        ]
    },
    {
        "db_id": "car_1",
        "query": "SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';",
        "query_toks": [
            "SELECT",
            "DISTINCT",
            "T1.model",
            "FROM",
            "MODEL_LIST",
            "AS",
            "T1",
            "JOIN",
            "CAR_NAMES",
            "AS",
            "T2",
            "ON",
            "T1.Model",
            "=",
            "T2.Model",
            "JOIN",
            "CARS_DATA",
            "AS",
            "T3",
            "ON",
            "T2.MakeId",
            "=",
            "T3.Id",
            "JOIN",
            "CAR_MAKERS",
            "AS",
            "T4",
            "ON",
            "T1.Maker",
            "=",
            "T4.Id",
            "WHERE",
            "T3.weight",
            "<",
            "3500",
            "AND",
            "T4.FullName",
            "!",
            "=",
            "'Ford",
            "Motor",
            "Company",
            "'",
            ";"
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "t1",
            ".",
            "model",
            "from",
            "model_list",
            "as",
            "t1",
            "join",
            "car_names",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "model",
            "=",
            "t2",
            ".",
            "model",
            "join",
            "cars_data",
            "as",
            "t3",
            "on",
            "t2",
            ".",
            "makeid",
            "=",
            "t3",
            ".",
            "id",
            "join",
            "car_makers",
            "as",
            "t4",
            "on",
            "t1",
            ".",
            "maker",
            "=",
            "t4",
            ".",
            "id",
            "where",
            "t3",
            ".",
            "weight",
            "<",
            "value",
            "and",
            "t4",
            ".",
            "fullname",
            "!",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            14,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            16,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ],
                    [
                        "table_unit",
                        4
                    ],
                    [
                        "table_unit",
                        5
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    4,
                    [
                        0,
                        [
                            0,
                            21,
                            false
                        ],
                        null
                    ],
                    3500.0,
                    null
                ],
                "and",
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ],
                    "\"Ford Motor Company\"",
                    null
                ]
            ]
        },
        "question": "list model of model list with weight of car data less than value except that list model of model list with full name of car maker equal to value",
        "gold_question": "list model of model list with weight of cars data less than value and full name of car maker not equal to value",
        "question_toks": [
            "list",
            "model",
            "of",
            "model",
            "list",
            "with",
            "weight",
            "of",
            "car",
            "data",
            "less",
            "than",
            "value",
            "except",
            "that",
            "list",
            "model",
            "of",
            "model",
            "list",
            "with",
            "full",
            "name",
            "of",
            "car",
            "maker",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "car_1",
        "query": "SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';",
        "query_toks": [
            "SELECT",
            "DISTINCT",
            "T1.model",
            "FROM",
            "MODEL_LIST",
            "AS",
            "T1",
            "JOIN",
            "CAR_NAMES",
            "AS",
            "T2",
            "ON",
            "T1.Model",
            "=",
            "T2.Model",
            "JOIN",
            "CARS_DATA",
            "AS",
            "T3",
            "ON",
            "T2.MakeId",
            "=",
            "T3.Id",
            "JOIN",
            "CAR_MAKERS",
            "AS",
            "T4",
            "ON",
            "T1.Maker",
            "=",
            "T4.Id",
            "WHERE",
            "T3.weight",
            "<",
            "3500",
            "AND",
            "T4.FullName",
            "!",
            "=",
            "'Ford",
            "Motor",
            "Company",
            "'",
            ";"
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "t1",
            ".",
            "model",
            "from",
            "model_list",
            "as",
            "t1",
            "join",
            "car_names",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "model",
            "=",
            "t2",
            ".",
            "model",
            "join",
            "cars_data",
            "as",
            "t3",
            "on",
            "t2",
            ".",
            "makeid",
            "=",
            "t3",
            ".",
            "id",
            "join",
            "car_makers",
            "as",
            "t4",
            "on",
            "t1",
            ".",
            "maker",
            "=",
            "t4",
            ".",
            "id",
            "where",
            "t3",
            ".",
            "weight",
            "<",
            "value",
            "and",
            "t4",
            ".",
            "fullname",
            "!",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            14,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            16,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ],
                    [
                        "table_unit",
                        4
                    ],
                    [
                        "table_unit",
                        5
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    4,
                    [
                        0,
                        [
                            0,
                            21,
                            false
                        ],
                        null
                    ],
                    3500.0,
                    null
                ],
                "and",
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ],
                    "\"Ford Motor Company\"",
                    null
                ]
            ]
        },
        "question": "list model of model list with weight of car data less than value except that list model of car name with maker of car maker equal to value",
        "gold_question": "list model of model list with weight of cars data less than value and full name of car maker not equal to value",
        "question_toks": [
            "list",
            "model",
            "of",
            "model",
            "list",
            "with",
            "weight",
            "of",
            "car",
            "data",
            "less",
            "than",
            "value",
            "except",
            "that",
            "list",
            "model",
            "of",
            "car",
            "name",
            "with",
            "maker",
            "of",
            "car",
            "maker",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "car_1",
        "query": "SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;",
        "query_toks": [
            "SELECT",
            "CountryName",
            "FROM",
            "countries",
            "EXCEPT",
            "SELECT",
            "T1.CountryName",
            "FROM",
            "countries",
            "AS",
            "T1",
            "JOIN",
            "CAR_MAKERS",
            "AS",
            "T2",
            "ON",
            "T1.countryId",
            "=",
            "T2.Country",
            ";"
        ],
        "query_toks_no_value": [
            "select",
            "countryname",
            "from",
            "countries",
            "except",
            "select",
            "t1",
            ".",
            "countryname",
            "from",
            "countries",
            "as",
            "t1",
            "join",
            "car_makers",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "countryid",
            "=",
            "t2",
            ".",
            "country"
        ],
        "sql": {
            "except": {
                "except": null,
                "from": {
                    "conds": [
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    3,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ],
                    "table_units": [
                        [
                            "table_unit",
                            1
                        ],
                        [
                            "table_unit",
                            2
                        ]
                    ]
                },
                "groupby": [],
                "having": [],
                "intersect": null,
                "limit": null,
                "orderby": [],
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    4,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "union": null,
                "where": []
            },
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list country name of country with country id that is not in ( country of car maker )",
        "gold_question": "list country name of country except that list country name of country",
        "question_toks": [
            "list",
            "country",
            "name",
            "of",
            "country",
            "with",
            "country",
            "id",
            "that",
            "is",
            "not",
            "in",
            "(",
            "country",
            "of",
            "car",
            "maker",
            ")"
        ]
    },
    {
        "db_id": "car_1",
        "query": "SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;",
        "query_toks": [
            "SELECT",
            "CountryName",
            "FROM",
            "countries",
            "EXCEPT",
            "SELECT",
            "T1.CountryName",
            "FROM",
            "countries",
            "AS",
            "T1",
            "JOIN",
            "CAR_MAKERS",
            "AS",
            "T2",
            "ON",
            "T1.countryId",
            "=",
            "T2.Country",
            ";"
        ],
        "query_toks_no_value": [
            "select",
            "countryname",
            "from",
            "countries",
            "except",
            "select",
            "t1",
            ".",
            "countryname",
            "from",
            "countries",
            "as",
            "t1",
            "join",
            "car_makers",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "countryid",
            "=",
            "t2",
            ".",
            "country"
        ],
        "sql": {
            "except": {
                "except": null,
                "from": {
                    "conds": [
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    3,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ],
                    "table_units": [
                        [
                            "table_unit",
                            1
                        ],
                        [
                            "table_unit",
                            2
                        ]
                    ]
                },
                "groupby": [],
                "having": [],
                "intersect": null,
                "limit": null,
                "orderby": [],
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    4,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "union": null,
                "where": []
            },
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list country name of country with country id that is not in ( country of car maker )",
        "gold_question": "list country name of country except that list country name of country",
        "question_toks": [
            "list",
            "country",
            "name",
            "of",
            "country",
            "with",
            "country",
            "id",
            "that",
            "is",
            "not",
            "in",
            "(",
            "country",
            "of",
            "car",
            "maker",
            ")"
        ]
    },
    {
        "db_id": "flight_2",
        "query": "SELECT Country FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"",
        "query_toks": [
            "SELECT",
            "Country",
            "FROM",
            "AIRLINES",
            "WHERE",
            "Airline",
            "=",
            "``",
            "JetBlue",
            "Airways",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "country",
            "from",
            "airlines",
            "where",
            "airline",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"JetBlue Airways\"",
                    null
                ]
            ]
        },
        "question": "list country of airline with airline name equal to value",
        "gold_question": "list country of airline with airline name equal to value",
        "question_toks": [
            "list",
            "country",
            "of",
            "airline",
            "with",
            "airline",
            "name",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "flight_2",
        "query": "SELECT Country FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"",
        "query_toks": [
            "SELECT",
            "Country",
            "FROM",
            "AIRLINES",
            "WHERE",
            "Airline",
            "=",
            "``",
            "JetBlue",
            "Airways",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "country",
            "from",
            "airlines",
            "where",
            "airline",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"JetBlue Airways\"",
                    null
                ]
            ]
        },
        "question": "list country of airline with airline name equal to value",
        "gold_question": "list country of airline with airline name equal to value",
        "question_toks": [
            "list",
            "country",
            "of",
            "airline",
            "with",
            "airline",
            "name",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "flight_2",
        "query": "SELECT Abbreviation FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"",
        "query_toks": [
            "SELECT",
            "Abbreviation",
            "FROM",
            "AIRLINES",
            "WHERE",
            "Airline",
            "=",
            "``",
            "JetBlue",
            "Airways",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "abbreviation",
            "from",
            "airlines",
            "where",
            "airline",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"JetBlue Airways\"",
                    null
                ]
            ]
        },
        "question": "list abbreviation of airline with airline name equal to value",
        "gold_question": "list abbreviation of airline with airline name equal to value",
        "question_toks": [
            "list",
            "abbreviation",
            "of",
            "airline",
            "with",
            "airline",
            "name",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "flight_2",
        "query": "SELECT Abbreviation FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"",
        "query_toks": [
            "SELECT",
            "Abbreviation",
            "FROM",
            "AIRLINES",
            "WHERE",
            "Airline",
            "=",
            "``",
            "JetBlue",
            "Airways",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "abbreviation",
            "from",
            "airlines",
            "where",
            "airline",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"JetBlue Airways\"",
                    null
                ]
            ]
        },
        "question": "list abbreviation of airline with airline name equal to value",
        "gold_question": "list abbreviation of airline with airline name equal to value",
        "question_toks": [
            "list",
            "abbreviation",
            "of",
            "airline",
            "with",
            "airline",
            "name",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "flight_2",
        "query": "SELECT Airline ,  Abbreviation FROM AIRLINES WHERE Country  =  \"USA\"",
        "query_toks": [
            "SELECT",
            "Airline",
            ",",
            "Abbreviation",
            "FROM",
            "AIRLINES",
            "WHERE",
            "Country",
            "=",
            "``",
            "USA",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "airline",
            ",",
            "abbreviation",
            "from",
            "airlines",
            "where",
            "country",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ],
                    "\"USA\"",
                    null
                ]
            ]
        },
        "question": "list airline name abbreviation of airline with country equal to value",
        "gold_question": "list airline name abbreviation of airline with country equal to value",
        "question_toks": [
            "list",
            "airline",
            "name",
            "abbreviation",
            "of",
            "airline",
            "with",
            "country",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "flight_2",
        "query": "SELECT Airline ,  Abbreviation FROM AIRLINES WHERE Country  =  \"USA\"",
        "query_toks": [
            "SELECT",
            "Airline",
            ",",
            "Abbreviation",
            "FROM",
            "AIRLINES",
            "WHERE",
            "Country",
            "=",
            "``",
            "USA",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "airline",
            ",",
            "abbreviation",
            "from",
            "airlines",
            "where",
            "country",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ],
                    "\"USA\"",
                    null
                ]
            ]
        },
        "question": "list airline name abbreviation of airline with country equal to value",
        "gold_question": "list airline name abbreviation of airline with country equal to value",
        "question_toks": [
            "list",
            "airline",
            "name",
            "abbreviation",
            "of",
            "airline",
            "with",
            "country",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "flight_2",
        "query": "SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  \"Anthony\"",
        "query_toks": [
            "SELECT",
            "AirportCode",
            ",",
            "AirportName",
            "FROM",
            "AIRPORTS",
            "WHERE",
            "city",
            "=",
            "``",
            "Anthony",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "airportcode",
            ",",
            "airportname",
            "from",
            "airports",
            "where",
            "city",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "\"Anthony\"",
                    null
                ]
            ]
        },
        "question": "list airport code airport name of airport with city equal to value",
        "gold_question": "list airport code airport name of airport with city equal to value",
        "question_toks": [
            "list",
            "airport",
            "code",
            "airport",
            "name",
            "of",
            "airport",
            "with",
            "city",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "flight_2",
        "query": "SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  \"Anthony\"",
        "query_toks": [
            "SELECT",
            "AirportCode",
            ",",
            "AirportName",
            "FROM",
            "AIRPORTS",
            "WHERE",
            "city",
            "=",
            "``",
            "Anthony",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "airportcode",
            ",",
            "airportname",
            "from",
            "airports",
            "where",
            "city",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "\"Anthony\"",
                    null
                ]
            ]
        },
        "question": "list airport code airport name of airport with city equal to value",
        "gold_question": "list airport code airport name of airport with city equal to value",
        "question_toks": [
            "list",
            "airport",
            "code",
            "airport",
            "name",
            "of",
            "airport",
            "with",
            "city",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "flight_2",
        "query": "SELECT count(*) FROM AIRLINES",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "AIRLINES"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "airlines"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list the total number of airline",
        "gold_question": "list the total number of airline",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "airline"
        ]
    },
    {
        "db_id": "flight_2",
        "query": "SELECT count(*) FROM AIRLINES",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "AIRLINES"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "airlines"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list the total number of airline",
        "gold_question": "list the total number of airline",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "airline"
        ]
    },
    {
        "db_id": "flight_2",
        "query": "SELECT count(*) FROM AIRPORTS",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "AIRPORTS"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "airports"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list the total number of airport",
        "gold_question": "list the total number of airport",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "airport"
        ]
    },
    {
        "db_id": "flight_2",
        "query": "SELECT count(*) FROM AIRPORTS",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "AIRPORTS"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "airports"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list the total number of airport",
        "gold_question": "list the total number of airport",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "airport"
        ]
    },
    {
        "db_id": "flight_2",
        "query": "SELECT count(*) FROM FLIGHTS",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "FLIGHTS"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "flights"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list the total number of flight",
        "gold_question": "list the total number of flight",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "flight"
        ]
    },
    {
        "db_id": "flight_2",
        "query": "SELECT count(*) FROM FLIGHTS",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "FLIGHTS"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "flights"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list the total number of flight",
        "gold_question": "list the total number of flight",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "flight"
        ]
    },
    {
        "db_id": "flight_2",
        "query": "SELECT Airline FROM AIRLINES WHERE Abbreviation  =  \"UAL\"",
        "query_toks": [
            "SELECT",
            "Airline",
            "FROM",
            "AIRLINES",
            "WHERE",
            "Abbreviation",
            "=",
            "``",
            "UAL",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "airline",
            "from",
            "airlines",
            "where",
            "abbreviation",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ],
                    "\"UAL\"",
                    null
                ]
            ]
        },
        "question": "list airline name of airline with abbreviation equal to value",
        "gold_question": "list airline name of airline with abbreviation equal to value",
        "question_toks": [
            "list",
            "airline",
            "name",
            "of",
            "airline",
            "with",
            "abbreviation",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "flight_2",
        "query": "SELECT Airline FROM AIRLINES WHERE Abbreviation  =  \"UAL\"",
        "query_toks": [
            "SELECT",
            "Airline",
            "FROM",
            "AIRLINES",
            "WHERE",
            "Abbreviation",
            "=",
            "``",
            "UAL",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "airline",
            "from",
            "airlines",
            "where",
            "abbreviation",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ],
                    "\"UAL\"",
                    null
                ]
            ]
        },
        "question": "list airline name of airline with abbreviation equal to value",
        "gold_question": "list airline name of airline with abbreviation equal to value",
        "question_toks": [
            "list",
            "airline",
            "name",
            "of",
            "airline",
            "with",
            "abbreviation",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "flight_2",
        "query": "SELECT count(*) FROM AIRLINES WHERE Country  =  \"USA\"",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "AIRLINES",
            "WHERE",
            "Country",
            "=",
            "``",
            "USA",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "airlines",
            "where",
            "country",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ],
                    "\"USA\"",
                    null
                ]
            ]
        },
        "question": "list the total number of airline with country equal to value",
        "gold_question": "list the total number of airline with country equal to value",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "airline",
            "with",
            "country",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "flight_2",
        "query": "SELECT count(*) FROM AIRLINES WHERE Country  =  \"USA\"",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "AIRLINES",
            "WHERE",
            "Country",
            "=",
            "``",
            "USA",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "airlines",
            "where",
            "country",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ],
                    "\"USA\"",
                    null
                ]
            ]
        },
        "question": "list the total number of airline with country equal to value",
        "gold_question": "list the total number of airline with country equal to value",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "airline",
            "with",
            "country",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "flight_2",
        "query": "SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  \"Alton\"",
        "query_toks": [
            "SELECT",
            "City",
            ",",
            "Country",
            "FROM",
            "AIRPORTS",
            "WHERE",
            "AirportName",
            "=",
            "``",
            "Alton",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "city",
            ",",
            "country",
            "from",
            "airports",
            "where",
            "airportname",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ],
                    "\"Alton\"",
                    null
                ]
            ]
        },
        "question": "list city country of airport with airport name equal to value",
        "gold_question": "list city country of airport with airport name equal to value",
        "question_toks": [
            "list",
            "city",
            "country",
            "of",
            "airport",
            "with",
            "airport",
            "name",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "flight_2",
        "query": "SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  \"Alton\"",
        "query_toks": [
            "SELECT",
            "City",
            ",",
            "Country",
            "FROM",
            "AIRPORTS",
            "WHERE",
            "AirportName",
            "=",
            "``",
            "Alton",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "city",
            ",",
            "country",
            "from",
            "airports",
            "where",
            "airportname",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ],
                    "\"Alton\"",
                    null
                ]
            ]
        },
        "question": "list city country of airport with airport name equal to value",
        "gold_question": "list city country of airport with airport name equal to value",
        "question_toks": [
            "list",
            "city",
            "country",
            "of",
            "airport",
            "with",
            "airport",
            "name",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "flight_2",
        "query": "SELECT AirportName FROM AIRPORTS WHERE AirportCode  =  \"AKO\"",
        "query_toks": [
            "SELECT",
            "AirportName",
            "FROM",
            "AIRPORTS",
            "WHERE",
            "AirportCode",
            "=",
            "``",
            "AKO",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "airportname",
            "from",
            "airports",
            "where",
            "airportcode",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ],
                    "\"AKO\"",
                    null
                ]
            ]
        },
        "question": "list airport name of airport with airport code equal to value",
        "gold_question": "list airport name of airport with airport code equal to value",
        "question_toks": [
            "list",
            "airport",
            "name",
            "of",
            "airport",
            "with",
            "airport",
            "code",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "flight_2",
        "query": "SELECT AirportName FROM AIRPORTS WHERE AirportCode  =  \"AKO\"",
        "query_toks": [
            "SELECT",
            "AirportName",
            "FROM",
            "AIRPORTS",
            "WHERE",
            "AirportCode",
            "=",
            "``",
            "AKO",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "airportname",
            "from",
            "airports",
            "where",
            "airportcode",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ],
                    "\"AKO\"",
                    null
                ]
            ]
        },
        "question": "list airport name of airport with airport code equal to value",
        "gold_question": "list airport name of airport with airport code equal to value",
        "question_toks": [
            "list",
            "airport",
            "name",
            "of",
            "airport",
            "with",
            "airport",
            "code",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "flight_2",
        "query": "SELECT AirportName FROM AIRPORTS WHERE City = \"Aberdeen\"",
        "query_toks": [
            "SELECT",
            "AirportName",
            "FROM",
            "AIRPORTS",
            "WHERE",
            "City",
            "=",
            "``",
            "Aberdeen",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "airportname",
            "from",
            "airports",
            "where",
            "city",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "\"Aberdeen\"",
                    null
                ]
            ]
        },
        "question": "list airport name of airport with city equal to value",
        "gold_question": "list airport name of airport with city equal to value",
        "question_toks": [
            "list",
            "airport",
            "name",
            "of",
            "airport",
            "with",
            "city",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "flight_2",
        "query": "SELECT AirportName FROM AIRPORTS WHERE City = \"Aberdeen\"",
        "query_toks": [
            "SELECT",
            "AirportName",
            "FROM",
            "AIRPORTS",
            "WHERE",
            "City",
            "=",
            "``",
            "Aberdeen",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "airportname",
            "from",
            "airports",
            "where",
            "city",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "\"Aberdeen\"",
                    null
                ]
            ]
        },
        "question": "list airport name of airport with city equal to value",
        "gold_question": "list airport name of airport with city equal to value",
        "question_toks": [
            "list",
            "airport",
            "name",
            "of",
            "airport",
            "with",
            "city",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "flight_2",
        "query": "SELECT count(*) FROM FLIGHTS WHERE SourceAirport  =  \"APG\"",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "FLIGHTS",
            "WHERE",
            "SourceAirport",
            "=",
            "``",
            "APG",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "flights",
            "where",
            "sourceairport",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            12,
                            false
                        ],
                        null
                    ],
                    "\"APG\"",
                    null
                ]
            ]
        },
        "question": "list the total number of flight with source airport equal to value",
        "gold_question": "list the total number of flight with source airport equal to value",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "flight",
            "with",
            "source",
            "airport",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "flight_2",
        "query": "SELECT count(*) FROM FLIGHTS WHERE SourceAirport  =  \"APG\"",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "FLIGHTS",
            "WHERE",
            "SourceAirport",
            "=",
            "``",
            "APG",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "flights",
            "where",
            "sourceairport",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            12,
                            false
                        ],
                        null
                    ],
                    "\"APG\"",
                    null
                ]
            ]
        },
        "question": "list the total number of flight with source airport equal to value",
        "gold_question": "list the total number of flight with source airport equal to value",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "flight",
            "with",
            "source",
            "airport",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "flight_2",
        "query": "SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  \"ATO\"",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "FLIGHTS",
            "WHERE",
            "DestAirport",
            "=",
            "``",
            "ATO",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "flights",
            "where",
            "destairport",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ],
                    "\"ATO\"",
                    null
                ]
            ]
        },
        "question": "list the total number of flight with destination airport equal to value",
        "gold_question": "list the total number of flight with destination airport equal to value",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "flight",
            "with",
            "destination",
            "airport",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "flight_2",
        "query": "SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  \"ATO\"",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "FLIGHTS",
            "WHERE",
            "DestAirport",
            "=",
            "``",
            "ATO",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "flights",
            "where",
            "destairport",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ],
                    "\"ATO\"",
                    null
                ]
            ]
        },
        "question": "list the total number of airport with country of airport equal to value",
        "gold_question": "list the total number of flight with destination airport equal to value",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "airport",
            "with",
            "country",
            "of",
            "airport",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "flight_2",
        "query": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "FLIGHTS",
            "AS",
            "T1",
            "JOIN",
            "AIRPORTS",
            "AS",
            "T2",
            "ON",
            "T1.SourceAirport",
            "=",
            "T2.AirportCode",
            "WHERE",
            "T2.City",
            "=",
            "``",
            "Aberdeen",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "flights",
            "as",
            "t1",
            "join",
            "airports",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "sourceairport",
            "=",
            "t2",
            ".",
            "airportcode",
            "where",
            "t2",
            ".",
            "city",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "\"Aberdeen\"",
                    null
                ]
            ]
        },
        "question": "list the total number of airport with city of airport equal to value",
        "gold_question": "list the total number of airport with city of airport equal to value",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "airport",
            "with",
            "city",
            "of",
            "airport",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "flight_2",
        "query": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "FLIGHTS",
            "AS",
            "T1",
            "JOIN",
            "AIRPORTS",
            "AS",
            "T2",
            "ON",
            "T1.SourceAirport",
            "=",
            "T2.AirportCode",
            "WHERE",
            "T2.City",
            "=",
            "``",
            "Aberdeen",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "flights",
            "as",
            "t1",
            "join",
            "airports",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "sourceairport",
            "=",
            "t2",
            ".",
            "airportcode",
            "where",
            "t2",
            ".",
            "city",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "\"Aberdeen\"",
                    null
                ]
            ]
        },
        "question": "list the total number of airport with airport name of airport equal to value",
        "gold_question": "list the total number of airport with city of airport equal to value",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "airport",
            "with",
            "airport",
            "name",
            "of",
            "airport",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "flight_2",
        "query": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "FLIGHTS",
            "AS",
            "T1",
            "JOIN",
            "AIRPORTS",
            "AS",
            "T2",
            "ON",
            "T1.DestAirport",
            "=",
            "T2.AirportCode",
            "WHERE",
            "T2.City",
            "=",
            "``",
            "Aberdeen",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "flights",
            "as",
            "t1",
            "join",
            "airports",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "destairport",
            "=",
            "t2",
            ".",
            "airportcode",
            "where",
            "t2",
            ".",
            "city",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "\"Aberdeen\"",
                    null
                ]
            ]
        },
        "question": "list the total number of airport with city of airport equal to value",
        "gold_question": "list the total number of airport with city of airport equal to value",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "airport",
            "with",
            "city",
            "of",
            "airport",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "flight_2",
        "query": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "FLIGHTS",
            "AS",
            "T1",
            "JOIN",
            "AIRPORTS",
            "AS",
            "T2",
            "ON",
            "T1.DestAirport",
            "=",
            "T2.AirportCode",
            "WHERE",
            "T2.City",
            "=",
            "``",
            "Aberdeen",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "flights",
            "as",
            "t1",
            "join",
            "airports",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "destairport",
            "=",
            "t2",
            ".",
            "airportcode",
            "where",
            "t2",
            ".",
            "city",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "\"Aberdeen\"",
                    null
                ]
            ]
        },
        "question": "list the total number of airport with city of airport equal to value",
        "gold_question": "list the total number of airport with city of airport equal to value",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "airport",
            "with",
            "city",
            "of",
            "airport",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "flight_2",
        "query": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  \"Ashley\" AND T3.City  =  \"Aberdeen\"",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "FLIGHTS",
            "AS",
            "T1",
            "JOIN",
            "AIRPORTS",
            "AS",
            "T2",
            "ON",
            "T1.DestAirport",
            "=",
            "T2.AirportCode",
            "JOIN",
            "AIRPORTS",
            "AS",
            "T3",
            "ON",
            "T1.SourceAirport",
            "=",
            "T3.AirportCode",
            "WHERE",
            "T2.City",
            "=",
            "``",
            "Ashley",
            "''",
            "AND",
            "T3.City",
            "=",
            "``",
            "Aberdeen",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "flights",
            "as",
            "t1",
            "join",
            "airports",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "destairport",
            "=",
            "t2",
            ".",
            "airportcode",
            "join",
            "airports",
            "as",
            "t3",
            "on",
            "t1",
            ".",
            "sourceairport",
            "=",
            "t3",
            ".",
            "airportcode",
            "where",
            "t2",
            ".",
            "city",
            "=",
            "value",
            "and",
            "t3",
            ".",
            "city",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "\"Ashley\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "\"Aberdeen\"",
                    null
                ]
            ]
        },
        "question": "list the total number of airport with city of airport equal to value and destination airport of flight equal to value",
        "gold_question": "list the total number of airport with city of airport equal to value and city of airport equal to value",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "airport",
            "with",
            "city",
            "of",
            "airport",
            "equal",
            "to",
            "value",
            "and",
            "destination",
            "airport",
            "of",
            "flight",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "flight_2",
        "query": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  \"Ashley\" AND T3.City  =  \"Aberdeen\"",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "FLIGHTS",
            "AS",
            "T1",
            "JOIN",
            "AIRPORTS",
            "AS",
            "T2",
            "ON",
            "T1.DestAirport",
            "=",
            "T2.AirportCode",
            "JOIN",
            "AIRPORTS",
            "AS",
            "T3",
            "ON",
            "T1.SourceAirport",
            "=",
            "T3.AirportCode",
            "WHERE",
            "T2.City",
            "=",
            "``",
            "Ashley",
            "''",
            "AND",
            "T3.City",
            "=",
            "``",
            "Aberdeen",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "flights",
            "as",
            "t1",
            "join",
            "airports",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "destairport",
            "=",
            "t2",
            ".",
            "airportcode",
            "join",
            "airports",
            "as",
            "t3",
            "on",
            "t1",
            ".",
            "sourceairport",
            "=",
            "t3",
            ".",
            "airportcode",
            "where",
            "t2",
            ".",
            "city",
            "=",
            "value",
            "and",
            "t3",
            ".",
            "city",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "\"Ashley\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "\"Aberdeen\"",
                    null
                ]
            ]
        },
        "question": "list the total number of airport with airport name of airport equal to value and destination airport of flight that is subset of ( airport code of airport with airport name equal to value )",
        "gold_question": "list the total number of airport with city of airport equal to value and city of airport equal to value",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "airport",
            "with",
            "airport",
            "name",
            "of",
            "airport",
            "equal",
            "to",
            "value",
            "and",
            "destination",
            "airport",
            "of",
            "flight",
            "that",
            "is",
            "subset",
            "of",
            "(",
            "airport",
            "code",
            "of",
            "airport",
            "with",
            "airport",
            "name",
            "equal",
            "to",
            "value",
            ")"
        ]
    },
    {
        "db_id": "flight_2",
        "query": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = \"JetBlue Airways\"",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "FLIGHTS",
            "AS",
            "T1",
            "JOIN",
            "AIRLINES",
            "AS",
            "T2",
            "ON",
            "T1.Airline",
            "=",
            "T2.uid",
            "WHERE",
            "T2.Airline",
            "=",
            "``",
            "JetBlue",
            "Airways",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "flights",
            "as",
            "t1",
            "join",
            "airlines",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "airline",
            "=",
            "t2",
            ".",
            "uid",
            "where",
            "t2",
            ".",
            "airline",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"JetBlue Airways\"",
                    null
                ]
            ]
        },
        "question": "list the total number of airline with airline name of airline equal to value",
        "gold_question": "list the total number of airline with airline name of airline equal to value",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "airline",
            "with",
            "airline",
            "name",
            "of",
            "airline",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "flight_2",
        "query": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = \"JetBlue Airways\"",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "FLIGHTS",
            "AS",
            "T1",
            "JOIN",
            "AIRLINES",
            "AS",
            "T2",
            "ON",
            "T1.Airline",
            "=",
            "T2.uid",
            "WHERE",
            "T2.Airline",
            "=",
            "``",
            "JetBlue",
            "Airways",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "flights",
            "as",
            "t1",
            "join",
            "airlines",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "airline",
            "=",
            "t2",
            ".",
            "uid",
            "where",
            "t2",
            ".",
            "airline",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"JetBlue Airways\"",
                    null
                ]
            ]
        },
        "question": "list the total number of airline with airline name of airline equal to value",
        "gold_question": "list the total number of airline with airline name of airline equal to value",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "airline",
            "with",
            "airline",
            "name",
            "of",
            "airline",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "flight_2",
        "query": "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.DestAirport  =  \"ASY\"",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "AIRLINES",
            "AS",
            "T1",
            "JOIN",
            "FLIGHTS",
            "AS",
            "T2",
            "ON",
            "T2.Airline",
            "=",
            "T1.uid",
            "WHERE",
            "T1.Airline",
            "=",
            "``",
            "United",
            "Airlines",
            "''",
            "AND",
            "T2.DestAirport",
            "=",
            "``",
            "ASY",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "airlines",
            "as",
            "t1",
            "join",
            "flights",
            "as",
            "t2",
            "on",
            "t2",
            ".",
            "airline",
            "=",
            "t1",
            ".",
            "uid",
            "where",
            "t1",
            ".",
            "airline",
            "=",
            "value",
            "and",
            "t2",
            ".",
            "destairport",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"United Airlines\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ],
                    "\"ASY\"",
                    null
                ]
            ]
        },
        "question": "list the total number of airport with airport name of airport equal to value",
        "gold_question": "list the total number of airline with airline name of airline equal to value and destination airport of flight equal to value",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "airport",
            "with",
            "airport",
            "name",
            "of",
            "airport",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "flight_2",
        "query": "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.DestAirport  =  \"ASY\"",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "AIRLINES",
            "AS",
            "T1",
            "JOIN",
            "FLIGHTS",
            "AS",
            "T2",
            "ON",
            "T2.Airline",
            "=",
            "T1.uid",
            "WHERE",
            "T1.Airline",
            "=",
            "``",
            "United",
            "Airlines",
            "''",
            "AND",
            "T2.DestAirport",
            "=",
            "``",
            "ASY",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "airlines",
            "as",
            "t1",
            "join",
            "flights",
            "as",
            "t2",
            "on",
            "t2",
            ".",
            "airline",
            "=",
            "t1",
            ".",
            "uid",
            "where",
            "t1",
            ".",
            "airline",
            "=",
            "value",
            "and",
            "t2",
            ".",
            "destairport",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"United Airlines\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ],
                    "\"ASY\"",
                    null
                ]
            ]
        },
        "question": "list the total number of airport with airport name of airport equal to value",
        "gold_question": "list the total number of airline with airline name of airline equal to value and destination airport of flight equal to value",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "airport",
            "with",
            "airport",
            "name",
            "of",
            "airport",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "flight_2",
        "query": "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.SourceAirport  =  \"AHD\"",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "AIRLINES",
            "AS",
            "T1",
            "JOIN",
            "FLIGHTS",
            "AS",
            "T2",
            "ON",
            "T2.Airline",
            "=",
            "T1.uid",
            "WHERE",
            "T1.Airline",
            "=",
            "``",
            "United",
            "Airlines",
            "''",
            "AND",
            "T2.SourceAirport",
            "=",
            "``",
            "AHD",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "airlines",
            "as",
            "t1",
            "join",
            "flights",
            "as",
            "t2",
            "on",
            "t2",
            ".",
            "airline",
            "=",
            "t1",
            ".",
            "uid",
            "where",
            "t1",
            ".",
            "airline",
            "=",
            "value",
            "and",
            "t2",
            ".",
            "sourceairport",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"United Airlines\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            12,
                            false
                        ],
                        null
                    ],
                    "\"AHD\"",
                    null
                ]
            ]
        },
        "question": "list the total number of airport with airport name of airport equal to value",
        "gold_question": "list the total number of airline with airline name of airline equal to value and source airport of flight equal to value",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "airport",
            "with",
            "airport",
            "name",
            "of",
            "airport",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "flight_2",
        "query": "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.SourceAirport  =  \"AHD\"",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "AIRLINES",
            "AS",
            "T1",
            "JOIN",
            "FLIGHTS",
            "AS",
            "T2",
            "ON",
            "T2.Airline",
            "=",
            "T1.uid",
            "WHERE",
            "T1.Airline",
            "=",
            "``",
            "United",
            "Airlines",
            "''",
            "AND",
            "T2.SourceAirport",
            "=",
            "``",
            "AHD",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "airlines",
            "as",
            "t1",
            "join",
            "flights",
            "as",
            "t2",
            "on",
            "t2",
            ".",
            "airline",
            "=",
            "t1",
            ".",
            "uid",
            "where",
            "t1",
            ".",
            "airline",
            "=",
            "value",
            "and",
            "t2",
            ".",
            "sourceairport",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"United Airlines\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            12,
                            false
                        ],
                        null
                    ],
                    "\"AHD\"",
                    null
                ]
            ]
        },
        "question": "list the total number of airport with airport name of airport equal to value",
        "gold_question": "list the total number of airline with airline name of airline equal to value and source airport of flight equal to value",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "airport",
            "with",
            "airport",
            "name",
            "of",
            "airport",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "flight_2",
        "query": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  \"Aberdeen\" AND T3.Airline  =  \"United Airlines\"",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "FLIGHTS",
            "AS",
            "T1",
            "JOIN",
            "AIRPORTS",
            "AS",
            "T2",
            "ON",
            "T1.DestAirport",
            "=",
            "T2.AirportCode",
            "JOIN",
            "AIRLINES",
            "AS",
            "T3",
            "ON",
            "T3.uid",
            "=",
            "T1.Airline",
            "WHERE",
            "T2.City",
            "=",
            "``",
            "Aberdeen",
            "''",
            "AND",
            "T3.Airline",
            "=",
            "``",
            "United",
            "Airlines",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "flights",
            "as",
            "t1",
            "join",
            "airports",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "destairport",
            "=",
            "t2",
            ".",
            "airportcode",
            "join",
            "airlines",
            "as",
            "t3",
            "on",
            "t3",
            ".",
            "uid",
            "=",
            "t1",
            ".",
            "airline",
            "where",
            "t2",
            ".",
            "city",
            "=",
            "value",
            "and",
            "t3",
            ".",
            "airline",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "\"Aberdeen\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"United Airlines\"",
                    null
                ]
            ]
        },
        "question": "list the total number of airport with city of airport equal to value and airline name of airline equal to value",
        "gold_question": "list the total number of airport with city of airport equal to value and airline name of airline equal to value",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "airport",
            "with",
            "city",
            "of",
            "airport",
            "equal",
            "to",
            "value",
            "and",
            "airline",
            "name",
            "of",
            "airline",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "flight_2",
        "query": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  \"Aberdeen\" AND T3.Airline  =  \"United Airlines\"",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "FLIGHTS",
            "AS",
            "T1",
            "JOIN",
            "AIRPORTS",
            "AS",
            "T2",
            "ON",
            "T1.DestAirport",
            "=",
            "T2.AirportCode",
            "JOIN",
            "AIRLINES",
            "AS",
            "T3",
            "ON",
            "T3.uid",
            "=",
            "T1.Airline",
            "WHERE",
            "T2.City",
            "=",
            "``",
            "Aberdeen",
            "''",
            "AND",
            "T3.Airline",
            "=",
            "``",
            "United",
            "Airlines",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "flights",
            "as",
            "t1",
            "join",
            "airports",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "destairport",
            "=",
            "t2",
            ".",
            "airportcode",
            "join",
            "airlines",
            "as",
            "t3",
            "on",
            "t3",
            ".",
            "uid",
            "=",
            "t1",
            ".",
            "airline",
            "where",
            "t2",
            ".",
            "city",
            "=",
            "value",
            "and",
            "t3",
            ".",
            "airline",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "\"Aberdeen\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"United Airlines\"",
                    null
                ]
            ]
        },
        "question": "list the total number of airport with city of airport equal to value and airline name of airline equal to value",
        "gold_question": "list the total number of airport with city of airport equal to value and airline name of airline equal to value",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "airport",
            "with",
            "city",
            "of",
            "airport",
            "equal",
            "to",
            "value",
            "and",
            "airline",
            "name",
            "of",
            "airline",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "flight_2",
        "query": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T1.City",
            "FROM",
            "AIRPORTS",
            "AS",
            "T1",
            "JOIN",
            "FLIGHTS",
            "AS",
            "T2",
            "ON",
            "T1.AirportCode",
            "=",
            "T2.DestAirport",
            "GROUP",
            "BY",
            "T1.City",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "city",
            "from",
            "airports",
            "as",
            "t1",
            "join",
            "flights",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "airportcode",
            "=",
            "t2",
            ".",
            "destairport",
            "group",
            "by",
            "t1",
            ".",
            "city",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    5,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of city of airport for each city of airport ordered by the total number of airport descendingly",
        "gold_question": "list top value items of city of airport for each city of airport ordered by the total number of airport descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "city",
            "of",
            "airport",
            "for",
            "each",
            "city",
            "of",
            "airport",
            "ordered",
            "by",
            "the",
            "total",
            "number",
            "of",
            "airport",
            "descendingly"
        ]
    },
    {
        "db_id": "flight_2",
        "query": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T1.City",
            "FROM",
            "AIRPORTS",
            "AS",
            "T1",
            "JOIN",
            "FLIGHTS",
            "AS",
            "T2",
            "ON",
            "T1.AirportCode",
            "=",
            "T2.DestAirport",
            "GROUP",
            "BY",
            "T1.City",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "city",
            "from",
            "airports",
            "as",
            "t1",
            "join",
            "flights",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "airportcode",
            "=",
            "t2",
            ".",
            "destairport",
            "group",
            "by",
            "t1",
            ".",
            "city",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    5,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of city of airport for each destination airport of flight ordered by the total number of flight descendingly",
        "gold_question": "list top value items of city of airport for each city of airport ordered by the total number of airport descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "city",
            "of",
            "airport",
            "for",
            "each",
            "destination",
            "airport",
            "of",
            "flight",
            "ordered",
            "by",
            "the",
            "total",
            "number",
            "of",
            "flight",
            "descendingly"
        ]
    },
    {
        "db_id": "flight_2",
        "query": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T1.City",
            "FROM",
            "AIRPORTS",
            "AS",
            "T1",
            "JOIN",
            "FLIGHTS",
            "AS",
            "T2",
            "ON",
            "T1.AirportCode",
            "=",
            "T2.SourceAirport",
            "GROUP",
            "BY",
            "T1.City",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "city",
            "from",
            "airports",
            "as",
            "t1",
            "join",
            "flights",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "airportcode",
            "=",
            "t2",
            ".",
            "sourceairport",
            "group",
            "by",
            "t1",
            ".",
            "city",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            12,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    5,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of city of airport for each city of airport ordered by the total number of airport descendingly",
        "gold_question": "list top value items of city of airport for each city of airport ordered by the total number of airport descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "city",
            "of",
            "airport",
            "for",
            "each",
            "city",
            "of",
            "airport",
            "ordered",
            "by",
            "the",
            "total",
            "number",
            "of",
            "airport",
            "descendingly"
        ]
    },
    {
        "db_id": "flight_2",
        "query": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T1.City",
            "FROM",
            "AIRPORTS",
            "AS",
            "T1",
            "JOIN",
            "FLIGHTS",
            "AS",
            "T2",
            "ON",
            "T1.AirportCode",
            "=",
            "T2.SourceAirport",
            "GROUP",
            "BY",
            "T1.City",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "city",
            "from",
            "airports",
            "as",
            "t1",
            "join",
            "flights",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "airportcode",
            "=",
            "t2",
            ".",
            "sourceairport",
            "group",
            "by",
            "t1",
            ".",
            "city",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            12,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    5,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of city of airport for each city of airport ordered by the total number of airport descendingly",
        "gold_question": "list top value items of city of airport for each city of airport ordered by the total number of airport descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "city",
            "of",
            "airport",
            "for",
            "each",
            "city",
            "of",
            "airport",
            "ordered",
            "by",
            "the",
            "total",
            "number",
            "of",
            "airport",
            "descendingly"
        ]
    },
    {
        "db_id": "flight_2",
        "query": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T1.AirportCode",
            "FROM",
            "AIRPORTS",
            "AS",
            "T1",
            "JOIN",
            "FLIGHTS",
            "AS",
            "T2",
            "ON",
            "T1.AirportCode",
            "=",
            "T2.DestAirport",
            "OR",
            "T1.AirportCode",
            "=",
            "T2.SourceAirport",
            "GROUP",
            "BY",
            "T1.AirportCode",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "airportcode",
            "from",
            "airports",
            "as",
            "t1",
            "join",
            "flights",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "airportcode",
            "=",
            "t2",
            ".",
            "destairport",
            "or",
            "t1",
            ".",
            "airportcode",
            "=",
            "t2",
            ".",
            "sourceairport",
            "group",
            "by",
            "t1",
            ".",
            "airportcode",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    6,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of airport code of airport for each source airport of flight ordered by the total number of flight descendingly",
        "gold_question": "list top value items of airport code of airport for each airport code of airport ordered by the total number of airport descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "airport",
            "code",
            "of",
            "airport",
            "for",
            "each",
            "source",
            "airport",
            "of",
            "flight",
            "ordered",
            "by",
            "the",
            "total",
            "number",
            "of",
            "flight",
            "descendingly"
        ]
    },
    {
        "db_id": "flight_2",
        "query": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T1.AirportCode",
            "FROM",
            "AIRPORTS",
            "AS",
            "T1",
            "JOIN",
            "FLIGHTS",
            "AS",
            "T2",
            "ON",
            "T1.AirportCode",
            "=",
            "T2.DestAirport",
            "OR",
            "T1.AirportCode",
            "=",
            "T2.SourceAirport",
            "GROUP",
            "BY",
            "T1.AirportCode",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "airportcode",
            "from",
            "airports",
            "as",
            "t1",
            "join",
            "flights",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "airportcode",
            "=",
            "t2",
            ".",
            "destairport",
            "or",
            "t1",
            ".",
            "airportcode",
            "=",
            "t2",
            ".",
            "sourceairport",
            "group",
            "by",
            "t1",
            ".",
            "airportcode",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    6,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of airport code of airport for each source airport of flight ordered by the total number of flight descendingly",
        "gold_question": "list top value items of airport code of airport for each airport code of airport ordered by the total number of airport descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "airport",
            "code",
            "of",
            "airport",
            "for",
            "each",
            "source",
            "airport",
            "of",
            "flight",
            "ordered",
            "by",
            "the",
            "total",
            "number",
            "of",
            "flight",
            "descendingly"
        ]
    },
    {
        "db_id": "flight_2",
        "query": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1",
        "query_toks": [
            "SELECT",
            "T1.AirportCode",
            "FROM",
            "AIRPORTS",
            "AS",
            "T1",
            "JOIN",
            "FLIGHTS",
            "AS",
            "T2",
            "ON",
            "T1.AirportCode",
            "=",
            "T2.DestAirport",
            "OR",
            "T1.AirportCode",
            "=",
            "T2.SourceAirport",
            "GROUP",
            "BY",
            "T1.AirportCode",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "airportcode",
            "from",
            "airports",
            "as",
            "t1",
            "join",
            "flights",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "airportcode",
            "=",
            "t2",
            ".",
            "destairport",
            "or",
            "t1",
            ".",
            "airportcode",
            "=",
            "t2",
            ".",
            "sourceairport",
            "group",
            "by",
            "t1",
            ".",
            "airportcode",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    6,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "asc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of airport code of airport for each source airport of flight ordered by the total number of flight ascendingly",
        "gold_question": "list top value items of airport code of airport for each airport code of airport ordered by the total number of airport ascendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "airport",
            "code",
            "of",
            "airport",
            "for",
            "each",
            "source",
            "airport",
            "of",
            "flight",
            "ordered",
            "by",
            "the",
            "total",
            "number",
            "of",
            "flight",
            "ascendingly"
        ]
    },
    {
        "db_id": "flight_2",
        "query": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1",
        "query_toks": [
            "SELECT",
            "T1.AirportCode",
            "FROM",
            "AIRPORTS",
            "AS",
            "T1",
            "JOIN",
            "FLIGHTS",
            "AS",
            "T2",
            "ON",
            "T1.AirportCode",
            "=",
            "T2.DestAirport",
            "OR",
            "T1.AirportCode",
            "=",
            "T2.SourceAirport",
            "GROUP",
            "BY",
            "T1.AirportCode",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "airportcode",
            "from",
            "airports",
            "as",
            "t1",
            "join",
            "flights",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "airportcode",
            "=",
            "t2",
            ".",
            "destairport",
            "or",
            "t1",
            ".",
            "airportcode",
            "=",
            "t2",
            ".",
            "sourceairport",
            "group",
            "by",
            "t1",
            ".",
            "airportcode",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    6,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "asc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of airport code of airport for each airport code of airport ordered by the total number of airport ascendingly",
        "gold_question": "list top value items of airport code of airport for each airport code of airport ordered by the total number of airport ascendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "airport",
            "code",
            "of",
            "airport",
            "for",
            "each",
            "airport",
            "code",
            "of",
            "airport",
            "ordered",
            "by",
            "the",
            "total",
            "number",
            "of",
            "airport",
            "ascendingly"
        ]
    },
    {
        "db_id": "flight_2",
        "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T1.Airline",
            "FROM",
            "AIRLINES",
            "AS",
            "T1",
            "JOIN",
            "FLIGHTS",
            "AS",
            "T2",
            "ON",
            "T1.uid",
            "=",
            "T2.Airline",
            "GROUP",
            "BY",
            "T1.Airline",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "airline",
            "from",
            "airlines",
            "as",
            "t1",
            "join",
            "flights",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "uid",
            "=",
            "t2",
            ".",
            "airline",
            "group",
            "by",
            "t1",
            ".",
            "airline",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    2,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of airline name of airline for each airline of flight ordered by the total number of flight descendingly",
        "gold_question": "list top value items of airline name of airline for each airline name of airline ordered by the total number of airline descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "airline",
            "name",
            "of",
            "airline",
            "for",
            "each",
            "airline",
            "of",
            "flight",
            "ordered",
            "by",
            "the",
            "total",
            "number",
            "of",
            "flight",
            "descendingly"
        ]
    },
    {
        "db_id": "flight_2",
        "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T1.Airline",
            "FROM",
            "AIRLINES",
            "AS",
            "T1",
            "JOIN",
            "FLIGHTS",
            "AS",
            "T2",
            "ON",
            "T1.uid",
            "=",
            "T2.Airline",
            "GROUP",
            "BY",
            "T1.Airline",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "airline",
            "from",
            "airlines",
            "as",
            "t1",
            "join",
            "flights",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "uid",
            "=",
            "t2",
            ".",
            "airline",
            "group",
            "by",
            "t1",
            ".",
            "airline",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    2,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of airline name of airline for each airline of flight ordered by the total number of flight descendingly",
        "gold_question": "list top value items of airline name of airline for each airline name of airline ordered by the total number of airline descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "airline",
            "name",
            "of",
            "airline",
            "for",
            "each",
            "airline",
            "of",
            "flight",
            "ordered",
            "by",
            "the",
            "total",
            "number",
            "of",
            "flight",
            "descendingly"
        ]
    },
    {
        "db_id": "flight_2",
        "query": "SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1",
        "query_toks": [
            "SELECT",
            "T1.Abbreviation",
            ",",
            "T1.Country",
            "FROM",
            "AIRLINES",
            "AS",
            "T1",
            "JOIN",
            "FLIGHTS",
            "AS",
            "T2",
            "ON",
            "T1.uid",
            "=",
            "T2.Airline",
            "GROUP",
            "BY",
            "T1.Airline",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "abbreviation",
            ",",
            "t1",
            ".",
            "country",
            "from",
            "airlines",
            "as",
            "t1",
            "join",
            "flights",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "uid",
            "=",
            "t2",
            ".",
            "airline",
            "group",
            "by",
            "t1",
            ".",
            "airline",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    2,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "asc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of abbreviation of airline country of airline for each airline of flight ordered by the total number of flight ascendingly",
        "gold_question": "list top value items of abbreviation of airline country of airline for each airline name of airline ordered by the total number of airline ascendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "abbreviation",
            "of",
            "airline",
            "country",
            "of",
            "airline",
            "for",
            "each",
            "airline",
            "of",
            "flight",
            "ordered",
            "by",
            "the",
            "total",
            "number",
            "of",
            "flight",
            "ascendingly"
        ]
    },
    {
        "db_id": "flight_2",
        "query": "SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1",
        "query_toks": [
            "SELECT",
            "T1.Abbreviation",
            ",",
            "T1.Country",
            "FROM",
            "AIRLINES",
            "AS",
            "T1",
            "JOIN",
            "FLIGHTS",
            "AS",
            "T2",
            "ON",
            "T1.uid",
            "=",
            "T2.Airline",
            "GROUP",
            "BY",
            "T1.Airline",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "abbreviation",
            ",",
            "t1",
            ".",
            "country",
            "from",
            "airlines",
            "as",
            "t1",
            "join",
            "flights",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "uid",
            "=",
            "t2",
            ".",
            "airline",
            "group",
            "by",
            "t1",
            ".",
            "airline",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    2,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "asc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of abbreviation of airline country of airline for each airline of flight ordered by the total number of flight ascendingly",
        "gold_question": "list top value items of abbreviation of airline country of airline for each airline name of airline ordered by the total number of airline ascendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "abbreviation",
            "of",
            "airline",
            "country",
            "of",
            "airline",
            "for",
            "each",
            "airline",
            "of",
            "flight",
            "ordered",
            "by",
            "the",
            "total",
            "number",
            "of",
            "flight",
            "ascendingly"
        ]
    },
    {
        "db_id": "flight_2",
        "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"AHD\"",
        "query_toks": [
            "SELECT",
            "T1.Airline",
            "FROM",
            "AIRLINES",
            "AS",
            "T1",
            "JOIN",
            "FLIGHTS",
            "AS",
            "T2",
            "ON",
            "T1.uid",
            "=",
            "T2.Airline",
            "WHERE",
            "T2.SourceAirport",
            "=",
            "``",
            "AHD",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "airline",
            "from",
            "airlines",
            "as",
            "t1",
            "join",
            "flights",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "uid",
            "=",
            "t2",
            ".",
            "airline",
            "where",
            "t2",
            ".",
            "sourceairport",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            12,
                            false
                        ],
                        null
                    ],
                    "\"AHD\"",
                    null
                ]
            ]
        },
        "question": "list airline name of airline with source airport of flight equal to value",
        "gold_question": "list airline name of airline with source airport of flight equal to value",
        "question_toks": [
            "list",
            "airline",
            "name",
            "of",
            "airline",
            "with",
            "source",
            "airport",
            "of",
            "flight",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "flight_2",
        "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"AHD\"",
        "query_toks": [
            "SELECT",
            "T1.Airline",
            "FROM",
            "AIRLINES",
            "AS",
            "T1",
            "JOIN",
            "FLIGHTS",
            "AS",
            "T2",
            "ON",
            "T1.uid",
            "=",
            "T2.Airline",
            "WHERE",
            "T2.SourceAirport",
            "=",
            "``",
            "AHD",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "airline",
            "from",
            "airlines",
            "as",
            "t1",
            "join",
            "flights",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "uid",
            "=",
            "t2",
            ".",
            "airline",
            "where",
            "t2",
            ".",
            "sourceairport",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            12,
                            false
                        ],
                        null
                    ],
                    "\"AHD\"",
                    null
                ]
            ]
        },
        "question": "list airline name of airline with source airport of flight equal to value",
        "gold_question": "list airline name of airline with source airport of flight equal to value",
        "question_toks": [
            "list",
            "airline",
            "name",
            "of",
            "airline",
            "with",
            "source",
            "airport",
            "of",
            "flight",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "flight_2",
        "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  \"AHD\"",
        "query_toks": [
            "SELECT",
            "T1.Airline",
            "FROM",
            "AIRLINES",
            "AS",
            "T1",
            "JOIN",
            "FLIGHTS",
            "AS",
            "T2",
            "ON",
            "T1.uid",
            "=",
            "T2.Airline",
            "WHERE",
            "T2.DestAirport",
            "=",
            "``",
            "AHD",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "airline",
            "from",
            "airlines",
            "as",
            "t1",
            "join",
            "flights",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "uid",
            "=",
            "t2",
            ".",
            "airline",
            "where",
            "t2",
            ".",
            "destairport",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ],
                    "\"AHD\"",
                    null
                ]
            ]
        },
        "question": "list airline name of airline with airport name of airport equal to value",
        "gold_question": "list airline name of airline with destination airport of flight equal to value",
        "question_toks": [
            "list",
            "airline",
            "name",
            "of",
            "airline",
            "with",
            "airport",
            "name",
            "of",
            "airport",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "flight_2",
        "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  \"AHD\"",
        "query_toks": [
            "SELECT",
            "T1.Airline",
            "FROM",
            "AIRLINES",
            "AS",
            "T1",
            "JOIN",
            "FLIGHTS",
            "AS",
            "T2",
            "ON",
            "T1.uid",
            "=",
            "T2.Airline",
            "WHERE",
            "T2.DestAirport",
            "=",
            "``",
            "AHD",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "airline",
            "from",
            "airlines",
            "as",
            "t1",
            "join",
            "flights",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "uid",
            "=",
            "t2",
            ".",
            "airline",
            "where",
            "t2",
            ".",
            "destairport",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ],
                    "\"AHD\"",
                    null
                ]
            ]
        },
        "question": "list airline name of airline with destination airport of flight equal to value",
        "gold_question": "list airline name of airline with destination airport of flight equal to value",
        "question_toks": [
            "list",
            "airline",
            "name",
            "of",
            "airline",
            "with",
            "destination",
            "airport",
            "of",
            "flight",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "flight_2",
        "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\"",
        "query_toks": [
            "SELECT",
            "T1.Airline",
            "FROM",
            "AIRLINES",
            "AS",
            "T1",
            "JOIN",
            "FLIGHTS",
            "AS",
            "T2",
            "ON",
            "T1.uid",
            "=",
            "T2.Airline",
            "WHERE",
            "T2.SourceAirport",
            "=",
            "``",
            "APG",
            "''",
            "INTERSECT",
            "SELECT",
            "T1.Airline",
            "FROM",
            "AIRLINES",
            "AS",
            "T1",
            "JOIN",
            "FLIGHTS",
            "AS",
            "T2",
            "ON",
            "T1.uid",
            "=",
            "T2.Airline",
            "WHERE",
            "T2.SourceAirport",
            "=",
            "``",
            "CVO",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "airline",
            "from",
            "airlines",
            "as",
            "t1",
            "join",
            "flights",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "uid",
            "=",
            "t2",
            ".",
            "airline",
            "where",
            "t2",
            ".",
            "sourceairport",
            "=",
            "value",
            "intersect",
            "select",
            "t1",
            ".",
            "airline",
            "from",
            "airlines",
            "as",
            "t1",
            "join",
            "flights",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "uid",
            "=",
            "t2",
            ".",
            "airline",
            "where",
            "t2",
            ".",
            "sourceairport",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": {
                "except": null,
                "from": {
                    "conds": [
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    1,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ],
                    "table_units": [
                        [
                            "table_unit",
                            0
                        ],
                        [
                            "table_unit",
                            2
                        ]
                    ]
                },
                "groupby": [],
                "having": [],
                "intersect": null,
                "limit": null,
                "orderby": [],
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    2,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "union": null,
                "where": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ],
                        "\"CVO\"",
                        null
                    ]
                ]
            },
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            12,
                            false
                        ],
                        null
                    ],
                    "\"APG\"",
                    null
                ]
            ]
        },
        "question": "list airline name of airline with airport name of airport equal to value and list airline name of airline with airport name of airport equal to value",
        "gold_question": "list airline name of airline with source airport of flight equal to value and list airline name of airline with source airport of flight equal to value",
        "question_toks": [
            "list",
            "airline",
            "name",
            "of",
            "airline",
            "with",
            "airport",
            "name",
            "of",
            "airport",
            "equal",
            "to",
            "value",
            "and",
            "list",
            "airline",
            "name",
            "of",
            "airline",
            "with",
            "airport",
            "name",
            "of",
            "airport",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "flight_2",
        "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\"",
        "query_toks": [
            "SELECT",
            "T1.Airline",
            "FROM",
            "AIRLINES",
            "AS",
            "T1",
            "JOIN",
            "FLIGHTS",
            "AS",
            "T2",
            "ON",
            "T1.uid",
            "=",
            "T2.Airline",
            "WHERE",
            "T2.SourceAirport",
            "=",
            "``",
            "APG",
            "''",
            "INTERSECT",
            "SELECT",
            "T1.Airline",
            "FROM",
            "AIRLINES",
            "AS",
            "T1",
            "JOIN",
            "FLIGHTS",
            "AS",
            "T2",
            "ON",
            "T1.uid",
            "=",
            "T2.Airline",
            "WHERE",
            "T2.SourceAirport",
            "=",
            "``",
            "CVO",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "airline",
            "from",
            "airlines",
            "as",
            "t1",
            "join",
            "flights",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "uid",
            "=",
            "t2",
            ".",
            "airline",
            "where",
            "t2",
            ".",
            "sourceairport",
            "=",
            "value",
            "intersect",
            "select",
            "t1",
            ".",
            "airline",
            "from",
            "airlines",
            "as",
            "t1",
            "join",
            "flights",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "uid",
            "=",
            "t2",
            ".",
            "airline",
            "where",
            "t2",
            ".",
            "sourceairport",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": {
                "except": null,
                "from": {
                    "conds": [
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    1,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ],
                    "table_units": [
                        [
                            "table_unit",
                            0
                        ],
                        [
                            "table_unit",
                            2
                        ]
                    ]
                },
                "groupby": [],
                "having": [],
                "intersect": null,
                "limit": null,
                "orderby": [],
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    2,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "union": null,
                "where": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ],
                        "\"CVO\"",
                        null
                    ]
                ]
            },
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            12,
                            false
                        ],
                        null
                    ],
                    "\"APG\"",
                    null
                ]
            ]
        },
        "question": "list airline name of airline with airport name of airport equal to value and list airline name of airline with source airport of flight equal to value",
        "gold_question": "list airline name of airline with source airport of flight equal to value and list airline name of airline with source airport of flight equal to value",
        "question_toks": [
            "list",
            "airline",
            "name",
            "of",
            "airline",
            "with",
            "airport",
            "name",
            "of",
            "airport",
            "equal",
            "to",
            "value",
            "and",
            "list",
            "airline",
            "name",
            "of",
            "airline",
            "with",
            "source",
            "airport",
            "of",
            "flight",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "flight_2",
        "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\"",
        "query_toks": [
            "SELECT",
            "T1.Airline",
            "FROM",
            "AIRLINES",
            "AS",
            "T1",
            "JOIN",
            "FLIGHTS",
            "AS",
            "T2",
            "ON",
            "T1.uid",
            "=",
            "T2.Airline",
            "WHERE",
            "T2.SourceAirport",
            "=",
            "``",
            "CVO",
            "''",
            "EXCEPT",
            "SELECT",
            "T1.Airline",
            "FROM",
            "AIRLINES",
            "AS",
            "T1",
            "JOIN",
            "FLIGHTS",
            "AS",
            "T2",
            "ON",
            "T1.uid",
            "=",
            "T2.Airline",
            "WHERE",
            "T2.SourceAirport",
            "=",
            "``",
            "APG",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "airline",
            "from",
            "airlines",
            "as",
            "t1",
            "join",
            "flights",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "uid",
            "=",
            "t2",
            ".",
            "airline",
            "where",
            "t2",
            ".",
            "sourceairport",
            "=",
            "value",
            "except",
            "select",
            "t1",
            ".",
            "airline",
            "from",
            "airlines",
            "as",
            "t1",
            "join",
            "flights",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "uid",
            "=",
            "t2",
            ".",
            "airline",
            "where",
            "t2",
            ".",
            "sourceairport",
            "=",
            "value"
        ],
        "sql": {
            "except": {
                "except": null,
                "from": {
                    "conds": [
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    1,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ],
                    "table_units": [
                        [
                            "table_unit",
                            0
                        ],
                        [
                            "table_unit",
                            2
                        ]
                    ]
                },
                "groupby": [],
                "having": [],
                "intersect": null,
                "limit": null,
                "orderby": [],
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    2,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "union": null,
                "where": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ],
                        "\"APG\"",
                        null
                    ]
                ]
            },
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            12,
                            false
                        ],
                        null
                    ],
                    "\"CVO\"",
                    null
                ]
            ]
        },
        "question": "list airline name of airline with airport name of airport equal to value except that list airline name of airline with source airport of flight equal to value",
        "gold_question": "list airline name of airline with source airport of flight equal to value except that list airline name of airline with source airport of flight equal to value",
        "question_toks": [
            "list",
            "airline",
            "name",
            "of",
            "airline",
            "with",
            "airport",
            "name",
            "of",
            "airport",
            "equal",
            "to",
            "value",
            "except",
            "that",
            "list",
            "airline",
            "name",
            "of",
            "airline",
            "with",
            "source",
            "airport",
            "of",
            "flight",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "flight_2",
        "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\"",
        "query_toks": [
            "SELECT",
            "T1.Airline",
            "FROM",
            "AIRLINES",
            "AS",
            "T1",
            "JOIN",
            "FLIGHTS",
            "AS",
            "T2",
            "ON",
            "T1.uid",
            "=",
            "T2.Airline",
            "WHERE",
            "T2.SourceAirport",
            "=",
            "``",
            "CVO",
            "''",
            "EXCEPT",
            "SELECT",
            "T1.Airline",
            "FROM",
            "AIRLINES",
            "AS",
            "T1",
            "JOIN",
            "FLIGHTS",
            "AS",
            "T2",
            "ON",
            "T1.uid",
            "=",
            "T2.Airline",
            "WHERE",
            "T2.SourceAirport",
            "=",
            "``",
            "APG",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "airline",
            "from",
            "airlines",
            "as",
            "t1",
            "join",
            "flights",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "uid",
            "=",
            "t2",
            ".",
            "airline",
            "where",
            "t2",
            ".",
            "sourceairport",
            "=",
            "value",
            "except",
            "select",
            "t1",
            ".",
            "airline",
            "from",
            "airlines",
            "as",
            "t1",
            "join",
            "flights",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "uid",
            "=",
            "t2",
            ".",
            "airline",
            "where",
            "t2",
            ".",
            "sourceairport",
            "=",
            "value"
        ],
        "sql": {
            "except": {
                "except": null,
                "from": {
                    "conds": [
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    1,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ],
                    "table_units": [
                        [
                            "table_unit",
                            0
                        ],
                        [
                            "table_unit",
                            2
                        ]
                    ]
                },
                "groupby": [],
                "having": [],
                "intersect": null,
                "limit": null,
                "orderby": [],
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    2,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "union": null,
                "where": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ],
                        "\"APG\"",
                        null
                    ]
                ]
            },
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            12,
                            false
                        ],
                        null
                    ],
                    "\"CVO\"",
                    null
                ]
            ]
        },
        "question": "list airline name of airline with country of airport equal to value except that list airline name of airline with source airport of flight equal to value",
        "gold_question": "list airline name of airline with source airport of flight equal to value except that list airline name of airline with source airport of flight equal to value",
        "question_toks": [
            "list",
            "airline",
            "name",
            "of",
            "airline",
            "with",
            "country",
            "of",
            "airport",
            "equal",
            "to",
            "value",
            "except",
            "that",
            "list",
            "airline",
            "name",
            "of",
            "airline",
            "with",
            "source",
            "airport",
            "of",
            "flight",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "flight_2",
        "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10",
        "query_toks": [
            "SELECT",
            "T1.Airline",
            "FROM",
            "AIRLINES",
            "AS",
            "T1",
            "JOIN",
            "FLIGHTS",
            "AS",
            "T2",
            "ON",
            "T1.uid",
            "=",
            "T2.Airline",
            "GROUP",
            "BY",
            "T1.Airline",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "10"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "airline",
            "from",
            "airlines",
            "as",
            "t1",
            "join",
            "flights",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "uid",
            "=",
            "t2",
            ".",
            "airline",
            "group",
            "by",
            "t1",
            ".",
            "airline",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    2,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    10.0,
                    null
                ]
            ],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list airline name of airline for each airline of flight that have the total number of flight greater than or equal to value",
        "gold_question": "list airline name of airline for each airline name of airline that have the total number of airline greater than value",
        "question_toks": [
            "list",
            "airline",
            "name",
            "of",
            "airline",
            "for",
            "each",
            "airline",
            "of",
            "flight",
            "that",
            "have",
            "the",
            "total",
            "number",
            "of",
            "flight",
            "greater",
            "than",
            "or",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "flight_2",
        "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10",
        "query_toks": [
            "SELECT",
            "T1.Airline",
            "FROM",
            "AIRLINES",
            "AS",
            "T1",
            "JOIN",
            "FLIGHTS",
            "AS",
            "T2",
            "ON",
            "T1.uid",
            "=",
            "T2.Airline",
            "GROUP",
            "BY",
            "T1.Airline",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "10"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "airline",
            "from",
            "airlines",
            "as",
            "t1",
            "join",
            "flights",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "uid",
            "=",
            "t2",
            ".",
            "airline",
            "group",
            "by",
            "t1",
            ".",
            "airline",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    2,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    10.0,
                    null
                ]
            ],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list airline name of airline for each airline of flight that have the total number of flight greater than or equal to value",
        "gold_question": "list airline name of airline for each airline name of airline that have the total number of airline greater than value",
        "question_toks": [
            "list",
            "airline",
            "name",
            "of",
            "airline",
            "for",
            "each",
            "airline",
            "of",
            "flight",
            "that",
            "have",
            "the",
            "total",
            "number",
            "of",
            "flight",
            "greater",
            "than",
            "or",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "flight_2",
        "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200",
        "query_toks": [
            "SELECT",
            "T1.Airline",
            "FROM",
            "AIRLINES",
            "AS",
            "T1",
            "JOIN",
            "FLIGHTS",
            "AS",
            "T2",
            "ON",
            "T1.uid",
            "=",
            "T2.Airline",
            "GROUP",
            "BY",
            "T1.Airline",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            "<",
            "200"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "airline",
            "from",
            "airlines",
            "as",
            "t1",
            "join",
            "flights",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "uid",
            "=",
            "t2",
            ".",
            "airline",
            "group",
            "by",
            "t1",
            ".",
            "airline",
            "having",
            "count",
            "(",
            "*",
            ")",
            "<",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    2,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    4,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    200.0,
                    null
                ]
            ],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list airline name of airline for each airline of flight that have the number of flight number of flight less than value",
        "gold_question": "list airline name of airline for each airline name of airline that have the total number of airline less than value",
        "question_toks": [
            "list",
            "airline",
            "name",
            "of",
            "airline",
            "for",
            "each",
            "airline",
            "of",
            "flight",
            "that",
            "have",
            "the",
            "number",
            "of",
            "flight",
            "number",
            "of",
            "flight",
            "less",
            "than",
            "value"
        ]
    },
    {
        "db_id": "flight_2",
        "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200",
        "query_toks": [
            "SELECT",
            "T1.Airline",
            "FROM",
            "AIRLINES",
            "AS",
            "T1",
            "JOIN",
            "FLIGHTS",
            "AS",
            "T2",
            "ON",
            "T1.uid",
            "=",
            "T2.Airline",
            "GROUP",
            "BY",
            "T1.Airline",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            "<",
            "200"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "airline",
            "from",
            "airlines",
            "as",
            "t1",
            "join",
            "flights",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "uid",
            "=",
            "t2",
            ".",
            "airline",
            "group",
            "by",
            "t1",
            ".",
            "airline",
            "having",
            "count",
            "(",
            "*",
            ")",
            "<",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    2,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    4,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    200.0,
                    null
                ]
            ],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list airline name of airline for each airline of flight that have the number of flight number of flight less than value",
        "gold_question": "list airline name of airline for each airline name of airline that have the total number of airline less than value",
        "question_toks": [
            "list",
            "airline",
            "name",
            "of",
            "airline",
            "for",
            "each",
            "airline",
            "of",
            "flight",
            "that",
            "have",
            "the",
            "number",
            "of",
            "flight",
            "number",
            "of",
            "flight",
            "less",
            "than",
            "value"
        ]
    },
    {
        "db_id": "flight_2",
        "query": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  \"United Airlines\"",
        "query_toks": [
            "SELECT",
            "T1.FlightNo",
            "FROM",
            "FLIGHTS",
            "AS",
            "T1",
            "JOIN",
            "AIRLINES",
            "AS",
            "T2",
            "ON",
            "T2.uid",
            "=",
            "T1.Airline",
            "WHERE",
            "T2.Airline",
            "=",
            "``",
            "United",
            "Airlines",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "flightno",
            "from",
            "flights",
            "as",
            "t1",
            "join",
            "airlines",
            "as",
            "t2",
            "on",
            "t2",
            ".",
            "uid",
            "=",
            "t1",
            ".",
            "airline",
            "where",
            "t2",
            ".",
            "airline",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"United Airlines\"",
                    null
                ]
            ]
        },
        "question": "list flight number with airline name of airline equal to value",
        "gold_question": "list flight number of flight with airline name of airline equal to value",
        "question_toks": [
            "list",
            "flight",
            "number",
            "with",
            "airline",
            "name",
            "of",
            "airline",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "flight_2",
        "query": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  \"United Airlines\"",
        "query_toks": [
            "SELECT",
            "T1.FlightNo",
            "FROM",
            "FLIGHTS",
            "AS",
            "T1",
            "JOIN",
            "AIRLINES",
            "AS",
            "T2",
            "ON",
            "T2.uid",
            "=",
            "T1.Airline",
            "WHERE",
            "T2.Airline",
            "=",
            "``",
            "United",
            "Airlines",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "flightno",
            "from",
            "flights",
            "as",
            "t1",
            "join",
            "airlines",
            "as",
            "t2",
            "on",
            "t2",
            ".",
            "uid",
            "=",
            "t1",
            ".",
            "airline",
            "where",
            "t2",
            ".",
            "airline",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"United Airlines\"",
                    null
                ]
            ]
        },
        "question": "list flight number with airline name of airline equal to value",
        "gold_question": "list flight number of flight with airline name of airline equal to value",
        "question_toks": [
            "list",
            "flight",
            "number",
            "with",
            "airline",
            "name",
            "of",
            "airline",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "flight_2",
        "query": "SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  \"APG\"",
        "query_toks": [
            "SELECT",
            "FlightNo",
            "FROM",
            "FLIGHTS",
            "WHERE",
            "SourceAirport",
            "=",
            "``",
            "APG",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "flightno",
            "from",
            "flights",
            "where",
            "sourceairport",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            12,
                            false
                        ],
                        null
                    ],
                    "\"APG\"",
                    null
                ]
            ]
        },
        "question": "list flight number with source airport equal to value",
        "gold_question": "list flight number of flight with source airport equal to value",
        "question_toks": [
            "list",
            "flight",
            "number",
            "with",
            "source",
            "airport",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "flight_2",
        "query": "SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  \"APG\"",
        "query_toks": [
            "SELECT",
            "FlightNo",
            "FROM",
            "FLIGHTS",
            "WHERE",
            "SourceAirport",
            "=",
            "``",
            "APG",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "flightno",
            "from",
            "flights",
            "where",
            "sourceairport",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            12,
                            false
                        ],
                        null
                    ],
                    "\"APG\"",
                    null
                ]
            ]
        },
        "question": "list flight number with source airport equal to value",
        "gold_question": "list flight number of flight with source airport equal to value",
        "question_toks": [
            "list",
            "flight",
            "number",
            "with",
            "source",
            "airport",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "flight_2",
        "query": "SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  \"APG\"",
        "query_toks": [
            "SELECT",
            "FlightNo",
            "FROM",
            "FLIGHTS",
            "WHERE",
            "DestAirport",
            "=",
            "``",
            "APG",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "flightno",
            "from",
            "flights",
            "where",
            "destairport",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ],
                    "\"APG\"",
                    null
                ]
            ]
        },
        "question": "list flight number with source airport equal to value",
        "gold_question": "list flight number of flight with destination airport equal to value",
        "question_toks": [
            "list",
            "flight",
            "number",
            "with",
            "source",
            "airport",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "flight_2",
        "query": "SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  \"APG\"",
        "query_toks": [
            "SELECT",
            "FlightNo",
            "FROM",
            "FLIGHTS",
            "WHERE",
            "DestAirport",
            "=",
            "``",
            "APG",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "flightno",
            "from",
            "flights",
            "where",
            "destairport",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ],
                    "\"APG\"",
                    null
                ]
            ]
        },
        "question": "list flight number with source airport equal to value",
        "gold_question": "list flight number of flight with destination airport equal to value",
        "question_toks": [
            "list",
            "flight",
            "number",
            "with",
            "source",
            "airport",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "flight_2",
        "query": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"",
        "query_toks": [
            "SELECT",
            "T1.FlightNo",
            "FROM",
            "FLIGHTS",
            "AS",
            "T1",
            "JOIN",
            "AIRPORTS",
            "AS",
            "T2",
            "ON",
            "T1.SourceAirport",
            "=",
            "T2.AirportCode",
            "WHERE",
            "T2.City",
            "=",
            "``",
            "Aberdeen",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "flightno",
            "from",
            "flights",
            "as",
            "t1",
            "join",
            "airports",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "sourceairport",
            "=",
            "t2",
            ".",
            "airportcode",
            "where",
            "t2",
            ".",
            "city",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "\"Aberdeen\"",
                    null
                ]
            ]
        },
        "question": "list flight number with city of airport equal to value",
        "gold_question": "list flight number of flight with city of airport equal to value",
        "question_toks": [
            "list",
            "flight",
            "number",
            "with",
            "city",
            "of",
            "airport",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "flight_2",
        "query": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"",
        "query_toks": [
            "SELECT",
            "T1.FlightNo",
            "FROM",
            "FLIGHTS",
            "AS",
            "T1",
            "JOIN",
            "AIRPORTS",
            "AS",
            "T2",
            "ON",
            "T1.SourceAirport",
            "=",
            "T2.AirportCode",
            "WHERE",
            "T2.City",
            "=",
            "``",
            "Aberdeen",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "flightno",
            "from",
            "flights",
            "as",
            "t1",
            "join",
            "airports",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "sourceairport",
            "=",
            "t2",
            ".",
            "airportcode",
            "where",
            "t2",
            ".",
            "city",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "\"Aberdeen\"",
                    null
                ]
            ]
        },
        "question": "list flight number with airport name of airport equal to value",
        "gold_question": "list flight number of flight with city of airport equal to value",
        "question_toks": [
            "list",
            "flight",
            "number",
            "with",
            "airport",
            "name",
            "of",
            "airport",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "flight_2",
        "query": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"",
        "query_toks": [
            "SELECT",
            "T1.FlightNo",
            "FROM",
            "FLIGHTS",
            "AS",
            "T1",
            "JOIN",
            "AIRPORTS",
            "AS",
            "T2",
            "ON",
            "T1.DestAirport",
            "=",
            "T2.AirportCode",
            "WHERE",
            "T2.City",
            "=",
            "``",
            "Aberdeen",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "flightno",
            "from",
            "flights",
            "as",
            "t1",
            "join",
            "airports",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "destairport",
            "=",
            "t2",
            ".",
            "airportcode",
            "where",
            "t2",
            ".",
            "city",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "\"Aberdeen\"",
                    null
                ]
            ]
        },
        "question": "list flight number with city of airport equal to value",
        "gold_question": "list flight number of flight with city of airport equal to value",
        "question_toks": [
            "list",
            "flight",
            "number",
            "with",
            "city",
            "of",
            "airport",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "flight_2",
        "query": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"",
        "query_toks": [
            "SELECT",
            "T1.FlightNo",
            "FROM",
            "FLIGHTS",
            "AS",
            "T1",
            "JOIN",
            "AIRPORTS",
            "AS",
            "T2",
            "ON",
            "T1.DestAirport",
            "=",
            "T2.AirportCode",
            "WHERE",
            "T2.City",
            "=",
            "``",
            "Aberdeen",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "flightno",
            "from",
            "flights",
            "as",
            "t1",
            "join",
            "airports",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "destairport",
            "=",
            "t2",
            ".",
            "airportcode",
            "where",
            "t2",
            ".",
            "city",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "\"Aberdeen\"",
                    null
                ]
            ]
        },
        "question": "list flight number with airport name of airport equal to value",
        "gold_question": "list flight number of flight with city of airport equal to value",
        "question_toks": [
            "list",
            "flight",
            "number",
            "with",
            "airport",
            "name",
            "of",
            "airport",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "flight_2",
        "query": "SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  \"Aberdeen\" OR T2.city  =  \"Abilene\"",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "Flights",
            "AS",
            "T1",
            "JOIN",
            "Airports",
            "AS",
            "T2",
            "ON",
            "T1.DestAirport",
            "=",
            "T2.AirportCode",
            "WHERE",
            "T2.city",
            "=",
            "``",
            "Aberdeen",
            "''",
            "OR",
            "T2.city",
            "=",
            "``",
            "Abilene",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "flights",
            "as",
            "t1",
            "join",
            "airports",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "destairport",
            "=",
            "t2",
            ".",
            "airportcode",
            "where",
            "t2",
            ".",
            "city",
            "=",
            "value",
            "or",
            "t2",
            ".",
            "city",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "\"Aberdeen\"",
                    null
                ],
                "or",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "\"Abilene\"",
                    null
                ]
            ]
        },
        "question": "list the total number of airport with city of airport equal to value or city of airport equal to value",
        "gold_question": "list the total number of airport with city of airport equal to value or city of airport equal to value",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "airport",
            "with",
            "city",
            "of",
            "airport",
            "equal",
            "to",
            "value",
            "or",
            "city",
            "of",
            "airport",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "flight_2",
        "query": "SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  \"Aberdeen\" OR T2.city  =  \"Abilene\"",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "Flights",
            "AS",
            "T1",
            "JOIN",
            "Airports",
            "AS",
            "T2",
            "ON",
            "T1.DestAirport",
            "=",
            "T2.AirportCode",
            "WHERE",
            "T2.city",
            "=",
            "``",
            "Aberdeen",
            "''",
            "OR",
            "T2.city",
            "=",
            "``",
            "Abilene",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "flights",
            "as",
            "t1",
            "join",
            "airports",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "destairport",
            "=",
            "t2",
            ".",
            "airportcode",
            "where",
            "t2",
            ".",
            "city",
            "=",
            "value",
            "or",
            "t2",
            ".",
            "city",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "\"Aberdeen\"",
                    null
                ],
                "or",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "\"Abilene\"",
                    null
                ]
            ]
        },
        "question": "list the total number of airport with city of airport equal to value or city of airport equal to value",
        "gold_question": "list the total number of airport with city of airport equal to value or city of airport equal to value",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "airport",
            "with",
            "city",
            "of",
            "airport",
            "equal",
            "to",
            "value",
            "or",
            "city",
            "of",
            "airport",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "flight_2",
        "query": "SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights)",
        "query_toks": [
            "SELECT",
            "AirportName",
            "FROM",
            "Airports",
            "WHERE",
            "AirportCode",
            "NOT",
            "IN",
            "(",
            "SELECT",
            "SourceAirport",
            "FROM",
            "Flights",
            "UNION",
            "SELECT",
            "DestAirport",
            "FROM",
            "Flights",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "airportname",
            "from",
            "airports",
            "where",
            "airportcode",
            "not",
            "in",
            "(",
            "select",
            "sourceairport",
            "from",
            "flights",
            "union",
            "select",
            "destairport",
            "from",
            "flights",
            ")"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    true,
                    8,
                    [
                        0,
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    2
                                ]
                            ]
                        },
                        "groupby": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderby": [],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            12,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": {
                            "except": null,
                            "from": {
                                "conds": [],
                                "table_units": [
                                    [
                                        "table_unit",
                                        2
                                    ]
                                ]
                            },
                            "groupby": [],
                            "having": [],
                            "intersect": null,
                            "limit": null,
                            "orderby": [],
                            "select": [
                                false,
                                [
                                    [
                                        0,
                                        [
                                            0,
                                            [
                                                0,
                                                13,
                                                false
                                            ],
                                            null
                                        ]
                                    ]
                                ]
                            ],
                            "union": null,
                            "where": []
                        },
                        "where": []
                    },
                    null
                ]
            ]
        },
        "question": "list airport name of airport except that list airport name of airport",
        "gold_question": "list airport name of airport with airport code that is not in ( source airport of flight )",
        "question_toks": [
            "list",
            "airport",
            "name",
            "of",
            "airport",
            "except",
            "that",
            "list",
            "airport",
            "name",
            "of",
            "airport"
        ]
    },
    {
        "db_id": "flight_2",
        "query": "SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights)",
        "query_toks": [
            "SELECT",
            "AirportName",
            "FROM",
            "Airports",
            "WHERE",
            "AirportCode",
            "NOT",
            "IN",
            "(",
            "SELECT",
            "SourceAirport",
            "FROM",
            "Flights",
            "UNION",
            "SELECT",
            "DestAirport",
            "FROM",
            "Flights",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "airportname",
            "from",
            "airports",
            "where",
            "airportcode",
            "not",
            "in",
            "(",
            "select",
            "sourceairport",
            "from",
            "flights",
            "union",
            "select",
            "destairport",
            "from",
            "flights",
            ")"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    true,
                    8,
                    [
                        0,
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    2
                                ]
                            ]
                        },
                        "groupby": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderby": [],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            12,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": {
                            "except": null,
                            "from": {
                                "conds": [],
                                "table_units": [
                                    [
                                        "table_unit",
                                        2
                                    ]
                                ]
                            },
                            "groupby": [],
                            "having": [],
                            "intersect": null,
                            "limit": null,
                            "orderby": [],
                            "select": [
                                false,
                                [
                                    [
                                        0,
                                        [
                                            0,
                                            [
                                                0,
                                                13,
                                                false
                                            ],
                                            null
                                        ]
                                    ]
                                ]
                            ],
                            "union": null,
                            "where": []
                        },
                        "where": []
                    },
                    null
                ]
            ]
        },
        "question": "list airport name of airport except that list airport name of airport",
        "gold_question": "list airport name of airport with airport code that is not in ( source airport of flight )",
        "question_toks": [
            "list",
            "airport",
            "name",
            "of",
            "airport",
            "except",
            "that",
            "list",
            "airport",
            "name",
            "of",
            "airport"
        ]
    },
    {
        "db_id": "employee_hire_evaluation",
        "query": "SELECT count(*) FROM employee",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "employee"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "employee"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list the total number of employee",
        "gold_question": "list the total number of employee",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "employee"
        ]
    },
    {
        "db_id": "employee_hire_evaluation",
        "query": "SELECT count(*) FROM employee",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "employee"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "employee"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list the total number of employee",
        "gold_question": "list the total number of employee",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "employee"
        ]
    },
    {
        "db_id": "employee_hire_evaluation",
        "query": "SELECT name FROM employee ORDER BY age",
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "employee",
            "ORDER",
            "BY",
            "age"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "employee",
            "order",
            "by",
            "age"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list name of employee ordered by age ascendingly",
        "gold_question": "list name of employee ordered by age ascendingly",
        "question_toks": [
            "list",
            "name",
            "of",
            "employee",
            "ordered",
            "by",
            "age",
            "ascendingly"
        ]
    },
    {
        "db_id": "employee_hire_evaluation",
        "query": "SELECT name FROM employee ORDER BY age",
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "employee",
            "ORDER",
            "BY",
            "age"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "employee",
            "order",
            "by",
            "age"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list name of employee ordered by age ascendingly",
        "gold_question": "list name of employee ordered by age ascendingly",
        "question_toks": [
            "list",
            "name",
            "of",
            "employee",
            "ordered",
            "by",
            "age",
            "ascendingly"
        ]
    },
    {
        "db_id": "employee_hire_evaluation",
        "query": "SELECT count(*) ,  city FROM employee GROUP BY city",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            ",",
            "city",
            "FROM",
            "employee",
            "GROUP",
            "BY",
            "city"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            ",",
            "city",
            "from",
            "employee",
            "group",
            "by",
            "city"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    4,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list the total number of employee city of employee for each city",
        "gold_question": "list the total number of employee city of employee for each city",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "employee",
            "city",
            "of",
            "employee",
            "for",
            "each",
            "city"
        ]
    },
    {
        "db_id": "employee_hire_evaluation",
        "query": "SELECT count(*) ,  city FROM employee GROUP BY city",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            ",",
            "city",
            "FROM",
            "employee",
            "GROUP",
            "BY",
            "city"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            ",",
            "city",
            "from",
            "employee",
            "group",
            "by",
            "city"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    4,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list the total number of employee city of employee for each city",
        "gold_question": "list the total number of employee city of employee for each city",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "employee",
            "city",
            "of",
            "employee",
            "for",
            "each",
            "city"
        ]
    },
    {
        "db_id": "employee_hire_evaluation",
        "query": "SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1",
        "query_toks": [
            "SELECT",
            "city",
            "FROM",
            "employee",
            "WHERE",
            "age",
            "<",
            "30",
            "GROUP",
            "BY",
            "city",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "city",
            "from",
            "employee",
            "where",
            "age",
            "<",
            "value",
            "group",
            "by",
            "city",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    4,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    4,
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ],
                    30.0,
                    null
                ]
            ]
        },
        "question": "list city of employee for each city that have the total number of employee greater than value",
        "gold_question": "list city of employee with age less than value for each city that have the total number of employee greater than value",
        "question_toks": [
            "list",
            "city",
            "of",
            "employee",
            "for",
            "each",
            "city",
            "that",
            "have",
            "the",
            "total",
            "number",
            "of",
            "employee",
            "greater",
            "than",
            "value"
        ]
    },
    {
        "db_id": "employee_hire_evaluation",
        "query": "SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1",
        "query_toks": [
            "SELECT",
            "city",
            "FROM",
            "employee",
            "WHERE",
            "age",
            "<",
            "30",
            "GROUP",
            "BY",
            "city",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "city",
            "from",
            "employee",
            "where",
            "age",
            "<",
            "value",
            "group",
            "by",
            "city",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    4,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    4,
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ],
                    30.0,
                    null
                ]
            ]
        },
        "question": "list city of employee for each city that have the total number of employee greater than value",
        "gold_question": "list city of employee with age less than value for each city that have the total number of employee greater than value",
        "question_toks": [
            "list",
            "city",
            "of",
            "employee",
            "for",
            "each",
            "city",
            "that",
            "have",
            "the",
            "total",
            "number",
            "of",
            "employee",
            "greater",
            "than",
            "value"
        ]
    },
    {
        "db_id": "employee_hire_evaluation",
        "query": "SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            ",",
            "LOCATION",
            "FROM",
            "shop",
            "GROUP",
            "BY",
            "LOCATION"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            ",",
            "location",
            "from",
            "shop",
            "group",
            "by",
            "location"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    7,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list the total number of shop location of shop for each location",
        "gold_question": "list the total number of shop location of shop for each location",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "shop",
            "location",
            "of",
            "shop",
            "for",
            "each",
            "location"
        ]
    },
    {
        "db_id": "employee_hire_evaluation",
        "query": "SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            ",",
            "LOCATION",
            "FROM",
            "shop",
            "GROUP",
            "BY",
            "LOCATION"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            ",",
            "location",
            "from",
            "shop",
            "group",
            "by",
            "location"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    7,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list the total number of shop location of shop for each location",
        "gold_question": "list the total number of shop location of shop for each location",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "shop",
            "location",
            "of",
            "shop",
            "for",
            "each",
            "location"
        ]
    },
    {
        "db_id": "employee_hire_evaluation",
        "query": "SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "manager_name",
            ",",
            "district",
            "FROM",
            "shop",
            "ORDER",
            "BY",
            "number_products",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "manager_name",
            ",",
            "district",
            "from",
            "shop",
            "order",
            "by",
            "number_products",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of manager name district of shop ordered by number product descendingly",
        "gold_question": "list top value items of manager name district of shop ordered by number product descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "manager",
            "name",
            "district",
            "of",
            "shop",
            "ordered",
            "by",
            "number",
            "product",
            "descendingly"
        ]
    },
    {
        "db_id": "employee_hire_evaluation",
        "query": "SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "manager_name",
            ",",
            "district",
            "FROM",
            "shop",
            "ORDER",
            "BY",
            "number_products",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "manager_name",
            ",",
            "district",
            "from",
            "shop",
            "order",
            "by",
            "number_products",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of manager name district of shop ordered by number product descendingly",
        "gold_question": "list top value items of manager name district of shop ordered by number product descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "manager",
            "name",
            "district",
            "of",
            "shop",
            "ordered",
            "by",
            "number",
            "product",
            "descendingly"
        ]
    },
    {
        "db_id": "employee_hire_evaluation",
        "query": "SELECT min(Number_products) ,  max(Number_products) FROM shop",
        "query_toks": [
            "SELECT",
            "min",
            "(",
            "Number_products",
            ")",
            ",",
            "max",
            "(",
            "Number_products",
            ")",
            "FROM",
            "shop"
        ],
        "query_toks_no_value": [
            "select",
            "min",
            "(",
            "number_products",
            ")",
            ",",
            "max",
            "(",
            "number_products",
            ")",
            "from",
            "shop"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list the minimum of number product the maximum of number product of shop",
        "gold_question": "list the minimum of number product the maximum of number product of shop",
        "question_toks": [
            "list",
            "the",
            "minimum",
            "of",
            "number",
            "product",
            "the",
            "maximum",
            "of",
            "number",
            "product",
            "of",
            "shop"
        ]
    },
    {
        "db_id": "employee_hire_evaluation",
        "query": "SELECT min(Number_products) ,  max(Number_products) FROM shop",
        "query_toks": [
            "SELECT",
            "min",
            "(",
            "Number_products",
            ")",
            ",",
            "max",
            "(",
            "Number_products",
            ")",
            "FROM",
            "shop"
        ],
        "query_toks_no_value": [
            "select",
            "min",
            "(",
            "number_products",
            ")",
            ",",
            "max",
            "(",
            "number_products",
            ")",
            "from",
            "shop"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list the minimum of number product the maximum of number product of shop",
        "gold_question": "list the minimum of number product the maximum of number product of shop",
        "question_toks": [
            "list",
            "the",
            "minimum",
            "of",
            "number",
            "product",
            "the",
            "maximum",
            "of",
            "number",
            "product",
            "of",
            "shop"
        ]
    },
    {
        "db_id": "employee_hire_evaluation",
        "query": "SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC",
        "query_toks": [
            "SELECT",
            "name",
            ",",
            "LOCATION",
            ",",
            "district",
            "FROM",
            "shop",
            "ORDER",
            "BY",
            "number_products",
            "DESC"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "location",
            ",",
            "district",
            "from",
            "shop",
            "order",
            "by",
            "number_products",
            "desc"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list name location district of shop ordered by number product descendingly",
        "gold_question": "list name location district of shop ordered by number product descendingly",
        "question_toks": [
            "list",
            "name",
            "location",
            "district",
            "of",
            "shop",
            "ordered",
            "by",
            "number",
            "product",
            "descendingly"
        ]
    },
    {
        "db_id": "employee_hire_evaluation",
        "query": "SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC",
        "query_toks": [
            "SELECT",
            "name",
            ",",
            "LOCATION",
            ",",
            "district",
            "FROM",
            "shop",
            "ORDER",
            "BY",
            "number_products",
            "DESC"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "location",
            ",",
            "district",
            "from",
            "shop",
            "order",
            "by",
            "number_products",
            "desc"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list name location district of shop ordered by number product descendingly",
        "gold_question": "list name location district of shop ordered by number product descendingly",
        "question_toks": [
            "list",
            "name",
            "location",
            "district",
            "of",
            "shop",
            "ordered",
            "by",
            "number",
            "product",
            "descendingly"
        ]
    },
    {
        "db_id": "employee_hire_evaluation",
        "query": "SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop)",
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "shop",
            "WHERE",
            "number_products",
            ">",
            "(",
            "SELECT",
            "avg",
            "(",
            "number_products",
            ")",
            "FROM",
            "shop",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "shop",
            "where",
            "number_products",
            ">",
            "(",
            "select",
            "avg",
            "(",
            "number_products",
            ")",
            "from",
            "shop",
            ")"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    1
                                ]
                            ]
                        },
                        "groupby": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderby": [],
                        "select": [
                            false,
                            [
                                [
                                    5,
                                    [
                                        0,
                                        [
                                            0,
                                            9,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": []
                    },
                    null
                ]
            ]
        },
        "question": "list name with number product greater than ( the average of number product of shop )",
        "gold_question": "list name of shop with number product greater than ( the average of number product of shop )",
        "question_toks": [
            "list",
            "name",
            "with",
            "number",
            "product",
            "greater",
            "than",
            "(",
            "the",
            "average",
            "of",
            "number",
            "product",
            "of",
            "shop",
            ")"
        ]
    },
    {
        "db_id": "employee_hire_evaluation",
        "query": "SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop)",
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "shop",
            "WHERE",
            "number_products",
            ">",
            "(",
            "SELECT",
            "avg",
            "(",
            "number_products",
            ")",
            "FROM",
            "shop",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "shop",
            "where",
            "number_products",
            ">",
            "(",
            "select",
            "avg",
            "(",
            "number_products",
            ")",
            "from",
            "shop",
            ")"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    1
                                ]
                            ]
                        },
                        "groupby": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderby": [],
                        "select": [
                            false,
                            [
                                [
                                    5,
                                    [
                                        0,
                                        [
                                            0,
                                            9,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": []
                    },
                    null
                ]
            ]
        },
        "question": "list name with number product greater than ( the average of number product of shop )",
        "gold_question": "list name of shop with number product greater than ( the average of number product of shop )",
        "question_toks": [
            "list",
            "name",
            "with",
            "number",
            "product",
            "greater",
            "than",
            "(",
            "the",
            "average",
            "of",
            "number",
            "product",
            "of",
            "shop",
            ")"
        ]
    },
    {
        "db_id": "employee_hire_evaluation",
        "query": "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "t1.name",
            "FROM",
            "employee",
            "AS",
            "t1",
            "JOIN",
            "evaluation",
            "AS",
            "t2",
            "ON",
            "t1.Employee_ID",
            "=",
            "t2.Employee_ID",
            "GROUP",
            "BY",
            "t2.Employee_ID",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "name",
            "from",
            "employee",
            "as",
            "t1",
            "join",
            "evaluation",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "employee_id",
            "=",
            "t2",
            ".",
            "employee_id",
            "group",
            "by",
            "t2",
            ".",
            "employee_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            15,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    15,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of name of employee for each employee id of evaluation ordered by the total number of evaluation descendingly",
        "gold_question": "list top value items of name of employee for each employee id of evaluation ordered by the total number of evaluation descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "name",
            "of",
            "employee",
            "for",
            "each",
            "employee",
            "id",
            "of",
            "evaluation",
            "ordered",
            "by",
            "the",
            "total",
            "number",
            "of",
            "evaluation",
            "descendingly"
        ]
    },
    {
        "db_id": "employee_hire_evaluation",
        "query": "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "t1.name",
            "FROM",
            "employee",
            "AS",
            "t1",
            "JOIN",
            "evaluation",
            "AS",
            "t2",
            "ON",
            "t1.Employee_ID",
            "=",
            "t2.Employee_ID",
            "GROUP",
            "BY",
            "t2.Employee_ID",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "name",
            "from",
            "employee",
            "as",
            "t1",
            "join",
            "evaluation",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "employee_id",
            "=",
            "t2",
            ".",
            "employee_id",
            "group",
            "by",
            "t2",
            ".",
            "employee_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            15,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    15,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of name of employee for each year award of evaluation ordered by the total number of evaluation descendingly",
        "gold_question": "list top value items of name of employee for each employee id of evaluation ordered by the total number of evaluation descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "name",
            "of",
            "employee",
            "for",
            "each",
            "year",
            "award",
            "of",
            "evaluation",
            "ordered",
            "by",
            "the",
            "total",
            "number",
            "of",
            "evaluation",
            "descendingly"
        ]
    },
    {
        "db_id": "employee_hire_evaluation",
        "query": "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "t1.name",
            "FROM",
            "employee",
            "AS",
            "t1",
            "JOIN",
            "evaluation",
            "AS",
            "t2",
            "ON",
            "t1.Employee_ID",
            "=",
            "t2.Employee_ID",
            "ORDER",
            "BY",
            "t2.bonus",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "name",
            "from",
            "employee",
            "as",
            "t1",
            "join",
            "evaluation",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "employee_id",
            "=",
            "t2",
            ".",
            "employee_id",
            "order",
            "by",
            "t2",
            ".",
            "bonus",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            15,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            17,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of name of employee ordered by bonu of evaluation descendingly",
        "gold_question": "list top value items of name of employee ordered by bonu of evaluation descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "name",
            "of",
            "employee",
            "ordered",
            "by",
            "bonu",
            "of",
            "evaluation",
            "descendingly"
        ]
    },
    {
        "db_id": "employee_hire_evaluation",
        "query": "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "t1.name",
            "FROM",
            "employee",
            "AS",
            "t1",
            "JOIN",
            "evaluation",
            "AS",
            "t2",
            "ON",
            "t1.Employee_ID",
            "=",
            "t2.Employee_ID",
            "ORDER",
            "BY",
            "t2.bonus",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "name",
            "from",
            "employee",
            "as",
            "t1",
            "join",
            "evaluation",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "employee_id",
            "=",
            "t2",
            ".",
            "employee_id",
            "order",
            "by",
            "t2",
            ".",
            "bonus",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            15,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            17,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of name of employee ordered by bonu of evaluation descendingly",
        "gold_question": "list top value items of name of employee ordered by bonu of evaluation descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "name",
            "of",
            "employee",
            "ordered",
            "by",
            "bonu",
            "of",
            "evaluation",
            "descendingly"
        ]
    },
    {
        "db_id": "employee_hire_evaluation",
        "query": "SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)",
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "employee",
            "WHERE",
            "Employee_ID",
            "NOT",
            "IN",
            "(",
            "SELECT",
            "Employee_ID",
            "FROM",
            "evaluation",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "employee",
            "where",
            "employee_id",
            "not",
            "in",
            "(",
            "select",
            "employee_id",
            "from",
            "evaluation",
            ")"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    true,
                    8,
                    [
                        0,
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    3
                                ]
                            ]
                        },
                        "groupby": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderby": [],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            15,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": []
                    },
                    null
                ]
            ]
        },
        "question": "list name of employee with employee id that is not in ( employee id of evaluation )",
        "gold_question": "list name of employee with employee id that is not in ( employee id of evaluation )",
        "question_toks": [
            "list",
            "name",
            "of",
            "employee",
            "with",
            "employee",
            "id",
            "that",
            "is",
            "not",
            "in",
            "(",
            "employee",
            "id",
            "of",
            "evaluation",
            ")"
        ]
    },
    {
        "db_id": "employee_hire_evaluation",
        "query": "SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)",
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "employee",
            "WHERE",
            "Employee_ID",
            "NOT",
            "IN",
            "(",
            "SELECT",
            "Employee_ID",
            "FROM",
            "evaluation",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "employee",
            "where",
            "employee_id",
            "not",
            "in",
            "(",
            "select",
            "employee_id",
            "from",
            "evaluation",
            ")"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    true,
                    8,
                    [
                        0,
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    3
                                ]
                            ]
                        },
                        "groupby": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderby": [],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            15,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": []
                    },
                    null
                ]
            ]
        },
        "question": "list name of employee with employee id that is not in ( employee id of evaluation )",
        "gold_question": "list name of employee with employee id that is not in ( employee id of evaluation )",
        "question_toks": [
            "list",
            "name",
            "of",
            "employee",
            "with",
            "employee",
            "id",
            "that",
            "is",
            "not",
            "in",
            "(",
            "employee",
            "id",
            "of",
            "evaluation",
            ")"
        ]
    },
    {
        "db_id": "employee_hire_evaluation",
        "query": "SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "t2.name",
            "FROM",
            "hiring",
            "AS",
            "t1",
            "JOIN",
            "shop",
            "AS",
            "t2",
            "ON",
            "t1.shop_id",
            "=",
            "t2.shop_id",
            "GROUP",
            "BY",
            "t1.shop_id",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t2",
            ".",
            "name",
            "from",
            "hiring",
            "as",
            "t1",
            "join",
            "shop",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "shop_id",
            "=",
            "t2",
            ".",
            "shop_id",
            "group",
            "by",
            "t1",
            ".",
            "shop_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    11,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of name of shop for each shop id of hire ordered by the total number of hire descendingly",
        "gold_question": "list top value items of name of shop for each shop id of hire ordered by the total number of hire descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "name",
            "of",
            "shop",
            "for",
            "each",
            "shop",
            "id",
            "of",
            "hire",
            "ordered",
            "by",
            "the",
            "total",
            "number",
            "of",
            "hire",
            "descendingly"
        ]
    },
    {
        "db_id": "employee_hire_evaluation",
        "query": "SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "t2.name",
            "FROM",
            "hiring",
            "AS",
            "t1",
            "JOIN",
            "shop",
            "AS",
            "t2",
            "ON",
            "t1.shop_id",
            "=",
            "t2.shop_id",
            "GROUP",
            "BY",
            "t1.shop_id",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t2",
            ".",
            "name",
            "from",
            "hiring",
            "as",
            "t1",
            "join",
            "shop",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "shop_id",
            "=",
            "t2",
            ".",
            "shop_id",
            "group",
            "by",
            "t1",
            ".",
            "shop_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    11,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of name of shop for each shop id ordered by the total number of shop descendingly",
        "gold_question": "list top value items of name of shop for each shop id of hire ordered by the total number of hire descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "name",
            "of",
            "shop",
            "for",
            "each",
            "shop",
            "id",
            "ordered",
            "by",
            "the",
            "total",
            "number",
            "of",
            "shop",
            "descendingly"
        ]
    },
    {
        "db_id": "employee_hire_evaluation",
        "query": "SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring)",
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "shop",
            "WHERE",
            "shop_id",
            "NOT",
            "IN",
            "(",
            "SELECT",
            "shop_id",
            "FROM",
            "hiring",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "shop",
            "where",
            "shop_id",
            "not",
            "in",
            "(",
            "select",
            "shop_id",
            "from",
            "hiring",
            ")"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    true,
                    8,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    2
                                ]
                            ]
                        },
                        "groupby": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderby": [],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            11,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": []
                    },
                    null
                ]
            ]
        },
        "question": "list name of shop with shop id that is not in ( shop id of hire )",
        "gold_question": "list name of shop with shop id that is not in ( shop id of hire )",
        "question_toks": [
            "list",
            "name",
            "of",
            "shop",
            "with",
            "shop",
            "id",
            "that",
            "is",
            "not",
            "in",
            "(",
            "shop",
            "id",
            "of",
            "hire",
            ")"
        ]
    },
    {
        "db_id": "employee_hire_evaluation",
        "query": "SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring)",
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "shop",
            "WHERE",
            "shop_id",
            "NOT",
            "IN",
            "(",
            "SELECT",
            "shop_id",
            "FROM",
            "hiring",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "shop",
            "where",
            "shop_id",
            "not",
            "in",
            "(",
            "select",
            "shop_id",
            "from",
            "hiring",
            ")"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    true,
                    8,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    2
                                ]
                            ]
                        },
                        "groupby": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderby": [],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            11,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": []
                    },
                    null
                ]
            ]
        },
        "question": "list name of shop with shop id that is not in ( shop id of hire )",
        "gold_question": "list name of shop with shop id that is not in ( shop id of hire )",
        "question_toks": [
            "list",
            "name",
            "of",
            "shop",
            "with",
            "shop",
            "id",
            "that",
            "is",
            "not",
            "in",
            "(",
            "shop",
            "id",
            "of",
            "hire",
            ")"
        ]
    },
    {
        "db_id": "employee_hire_evaluation",
        "query": "SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            ",",
            "t2.name",
            "FROM",
            "hiring",
            "AS",
            "t1",
            "JOIN",
            "shop",
            "AS",
            "t2",
            "ON",
            "t1.shop_id",
            "=",
            "t2.shop_id",
            "GROUP",
            "BY",
            "t2.name"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            ",",
            "t2",
            ".",
            "name",
            "from",
            "hiring",
            "as",
            "t1",
            "join",
            "shop",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "shop_id",
            "=",
            "t2",
            ".",
            "shop_id",
            "group",
            "by",
            "t2",
            ".",
            "name"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    6,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list the total number of hire name for each shop id",
        "gold_question": "list the total number of hire name of shop for each name of shop",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "hire",
            "name",
            "for",
            "each",
            "shop",
            "id"
        ]
    },
    {
        "db_id": "employee_hire_evaluation",
        "query": "SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            ",",
            "t2.name",
            "FROM",
            "hiring",
            "AS",
            "t1",
            "JOIN",
            "shop",
            "AS",
            "t2",
            "ON",
            "t1.shop_id",
            "=",
            "t2.shop_id",
            "GROUP",
            "BY",
            "t2.name"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            ",",
            "t2",
            ".",
            "name",
            "from",
            "hiring",
            "as",
            "t1",
            "join",
            "shop",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "shop_id",
            "=",
            "t2",
            ".",
            "shop_id",
            "group",
            "by",
            "t2",
            ".",
            "name"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    6,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list the total number of hire name for each shop id",
        "gold_question": "list the total number of hire name of shop for each name of shop",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "hire",
            "name",
            "for",
            "each",
            "shop",
            "id"
        ]
    },
    {
        "db_id": "employee_hire_evaluation",
        "query": "SELECT sum(bonus) FROM evaluation",
        "query_toks": [
            "SELECT",
            "sum",
            "(",
            "bonus",
            ")",
            "FROM",
            "evaluation"
        ],
        "query_toks_no_value": [
            "select",
            "sum",
            "(",
            "bonus",
            ")",
            "from",
            "evaluation"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        4,
                        [
                            0,
                            [
                                0,
                                17,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list the sum of bonu of evaluation",
        "gold_question": "list the sum of bonu of evaluation",
        "question_toks": [
            "list",
            "the",
            "sum",
            "of",
            "bonu",
            "of",
            "evaluation"
        ]
    },
    {
        "db_id": "employee_hire_evaluation",
        "query": "SELECT sum(bonus) FROM evaluation",
        "query_toks": [
            "SELECT",
            "sum",
            "(",
            "bonus",
            ")",
            "FROM",
            "evaluation"
        ],
        "query_toks_no_value": [
            "select",
            "sum",
            "(",
            "bonus",
            ")",
            "from",
            "evaluation"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        4,
                        [
                            0,
                            [
                                0,
                                17,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list the sum of bonu of evaluation",
        "gold_question": "list the sum of bonu of evaluation",
        "question_toks": [
            "list",
            "the",
            "sum",
            "of",
            "bonu",
            "of",
            "evaluation"
        ]
    },
    {
        "db_id": "employee_hire_evaluation",
        "query": "SELECT * FROM hiring",
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "hiring"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "hiring"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list all information of hire",
        "gold_question": "list all information of hire",
        "question_toks": [
            "list",
            "all",
            "information",
            "of",
            "hire"
        ]
    },
    {
        "db_id": "employee_hire_evaluation",
        "query": "SELECT * FROM hiring",
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "hiring"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "hiring"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list all information of hire",
        "gold_question": "list all information of hire",
        "question_toks": [
            "list",
            "all",
            "information",
            "of",
            "hire"
        ]
    },
    {
        "db_id": "employee_hire_evaluation",
        "query": "SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000",
        "query_toks": [
            "SELECT",
            "district",
            "FROM",
            "shop",
            "WHERE",
            "Number_products",
            "<",
            "3000",
            "INTERSECT",
            "SELECT",
            "district",
            "FROM",
            "shop",
            "WHERE",
            "Number_products",
            ">",
            "10000"
        ],
        "query_toks_no_value": [
            "select",
            "district",
            "from",
            "shop",
            "where",
            "number_products",
            "<",
            "value",
            "intersect",
            "select",
            "district",
            "from",
            "shop",
            "where",
            "number_products",
            ">",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": {
                "except": null,
                "from": {
                    "conds": [],
                    "table_units": [
                        [
                            "table_unit",
                            1
                        ]
                    ]
                },
                "groupby": [],
                "having": [],
                "intersect": null,
                "limit": null,
                "orderby": [],
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    8,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "union": null,
                "where": [
                    [
                        false,
                        3,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ],
                        10000.0,
                        null
                    ]
                ]
            },
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    4,
                    [
                        0,
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ],
                    3000.0,
                    null
                ]
            ]
        },
        "question": "list district of shop with number product less than value and list district of shop with number product greater than value",
        "gold_question": "list district of shop with number product less than value and list district of shop with number product greater than value",
        "question_toks": [
            "list",
            "district",
            "of",
            "shop",
            "with",
            "number",
            "product",
            "less",
            "than",
            "value",
            "and",
            "list",
            "district",
            "of",
            "shop",
            "with",
            "number",
            "product",
            "greater",
            "than",
            "value"
        ]
    },
    {
        "db_id": "employee_hire_evaluation",
        "query": "SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000",
        "query_toks": [
            "SELECT",
            "district",
            "FROM",
            "shop",
            "WHERE",
            "Number_products",
            "<",
            "3000",
            "INTERSECT",
            "SELECT",
            "district",
            "FROM",
            "shop",
            "WHERE",
            "Number_products",
            ">",
            "10000"
        ],
        "query_toks_no_value": [
            "select",
            "district",
            "from",
            "shop",
            "where",
            "number_products",
            "<",
            "value",
            "intersect",
            "select",
            "district",
            "from",
            "shop",
            "where",
            "number_products",
            ">",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": {
                "except": null,
                "from": {
                    "conds": [],
                    "table_units": [
                        [
                            "table_unit",
                            1
                        ]
                    ]
                },
                "groupby": [],
                "having": [],
                "intersect": null,
                "limit": null,
                "orderby": [],
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    8,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "union": null,
                "where": [
                    [
                        false,
                        3,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ],
                        10000.0,
                        null
                    ]
                ]
            },
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    4,
                    [
                        0,
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ],
                    3000.0,
                    null
                ]
            ]
        },
        "question": "list district of shop with number product less than value and list district of shop with number product greater than value",
        "gold_question": "list district of shop with number product less than value and list district of shop with number product greater than value",
        "question_toks": [
            "list",
            "district",
            "of",
            "shop",
            "with",
            "number",
            "product",
            "less",
            "than",
            "value",
            "and",
            "list",
            "district",
            "of",
            "shop",
            "with",
            "number",
            "product",
            "greater",
            "than",
            "value"
        ]
    },
    {
        "db_id": "employee_hire_evaluation",
        "query": "SELECT count(DISTINCT LOCATION) FROM shop",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "DISTINCT",
            "LOCATION",
            ")",
            "FROM",
            "shop"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "distinct",
            "location",
            ")",
            "from",
            "shop"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                7,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list the number of location of shop",
        "gold_question": "list the number of location of shop",
        "question_toks": [
            "list",
            "the",
            "number",
            "of",
            "location",
            "of",
            "shop"
        ]
    },
    {
        "db_id": "employee_hire_evaluation",
        "query": "SELECT count(DISTINCT LOCATION) FROM shop",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "DISTINCT",
            "LOCATION",
            ")",
            "FROM",
            "shop"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "distinct",
            "location",
            ")",
            "from",
            "shop"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                7,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list the number of location of shop",
        "gold_question": "list the number of location of shop",
        "question_toks": [
            "list",
            "the",
            "number",
            "of",
            "location",
            "of",
            "shop"
        ]
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "SELECT count(*) FROM Documents",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "Documents"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "documents"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list the total number of document",
        "gold_question": "list the total number of document",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "document"
        ]
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "SELECT count(*) FROM Documents",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "Documents"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "documents"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list the total number of document",
        "gold_question": "list the total number of document",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "document"
        ]
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "SELECT document_id ,  document_name ,  document_description FROM Documents",
        "query_toks": [
            "SELECT",
            "document_id",
            ",",
            "document_name",
            ",",
            "document_description",
            "FROM",
            "Documents"
        ],
        "query_toks_no_value": [
            "select",
            "document_id",
            ",",
            "document_name",
            ",",
            "document_description",
            "from",
            "documents"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list document id document name document description of document",
        "gold_question": "list document id document name document description of document",
        "question_toks": [
            "list",
            "document",
            "id",
            "document",
            "name",
            "document",
            "description",
            "of",
            "document"
        ]
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "SELECT document_id ,  document_name ,  document_description FROM Documents",
        "query_toks": [
            "SELECT",
            "document_id",
            ",",
            "document_name",
            ",",
            "document_description",
            "FROM",
            "Documents"
        ],
        "query_toks_no_value": [
            "select",
            "document_id",
            ",",
            "document_name",
            ",",
            "document_description",
            "from",
            "documents"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list document id document name document description of document",
        "gold_question": "list document id document name document description of document",
        "question_toks": [
            "list",
            "document",
            "id",
            "document",
            "name",
            "document",
            "description",
            "of",
            "document"
        ]
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "SELECT document_name ,  template_id FROM Documents WHERE Document_Description LIKE \"%w%\"",
        "query_toks": [
            "SELECT",
            "document_name",
            ",",
            "template_id",
            "FROM",
            "Documents",
            "WHERE",
            "Document_Description",
            "LIKE",
            "``",
            "%",
            "w",
            "%",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "document_name",
            ",",
            "template_id",
            "from",
            "documents",
            "where",
            "document_description",
            "like",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    9,
                    [
                        0,
                        [
                            0,
                            12,
                            false
                        ],
                        null
                    ],
                    "\"%w%\"",
                    null
                ]
            ]
        },
        "question": "list document name template id of document with document description formatted as value",
        "gold_question": "list document name template id of document with document description formatted as value",
        "question_toks": [
            "list",
            "document",
            "name",
            "template",
            "id",
            "of",
            "document",
            "with",
            "document",
            "description",
            "formatted",
            "as",
            "value"
        ]
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "SELECT document_name ,  template_id FROM Documents WHERE Document_Description LIKE \"%w%\"",
        "query_toks": [
            "SELECT",
            "document_name",
            ",",
            "template_id",
            "FROM",
            "Documents",
            "WHERE",
            "Document_Description",
            "LIKE",
            "``",
            "%",
            "w",
            "%",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "document_name",
            ",",
            "template_id",
            "from",
            "documents",
            "where",
            "document_description",
            "like",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    9,
                    [
                        0,
                        [
                            0,
                            12,
                            false
                        ],
                        null
                    ],
                    "\"%w%\"",
                    null
                ]
            ]
        },
        "question": "list document name template id of document with document description formatted as value",
        "gold_question": "list document name template id of document with document description formatted as value",
        "question_toks": [
            "list",
            "document",
            "name",
            "template",
            "id",
            "of",
            "document",
            "with",
            "document",
            "description",
            "formatted",
            "as",
            "value"
        ]
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "SELECT document_id ,  template_id ,  Document_Description FROM Documents WHERE document_name  =  \"Robbin CV\"",
        "query_toks": [
            "SELECT",
            "document_id",
            ",",
            "template_id",
            ",",
            "Document_Description",
            "FROM",
            "Documents",
            "WHERE",
            "document_name",
            "=",
            "``",
            "Robbin",
            "CV",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "document_id",
            ",",
            "template_id",
            ",",
            "document_description",
            "from",
            "documents",
            "where",
            "document_name",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    "\"Robbin CV\"",
                    null
                ]
            ]
        },
        "question": "list document id template id document description of document with document name equal to value",
        "gold_question": "list document id template id document description of document with document name equal to value",
        "question_toks": [
            "list",
            "document",
            "id",
            "template",
            "id",
            "document",
            "description",
            "of",
            "document",
            "with",
            "document",
            "name",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "SELECT document_id ,  template_id ,  Document_Description FROM Documents WHERE document_name  =  \"Robbin CV\"",
        "query_toks": [
            "SELECT",
            "document_id",
            ",",
            "template_id",
            ",",
            "Document_Description",
            "FROM",
            "Documents",
            "WHERE",
            "document_name",
            "=",
            "``",
            "Robbin",
            "CV",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "document_id",
            ",",
            "template_id",
            ",",
            "document_description",
            "from",
            "documents",
            "where",
            "document_name",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    "\"Robbin CV\"",
                    null
                ]
            ]
        },
        "question": "list document id template id document description of document with document name equal to value",
        "gold_question": "list document id template id document description of document with document name equal to value",
        "question_toks": [
            "list",
            "document",
            "id",
            "template",
            "id",
            "document",
            "description",
            "of",
            "document",
            "with",
            "document",
            "name",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "SELECT count(DISTINCT template_id) FROM Documents",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "DISTINCT",
            "template_id",
            ")",
            "FROM",
            "Documents"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "distinct",
            "template_id",
            ")",
            "from",
            "documents"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                10,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list the number of template id of document",
        "gold_question": "list the number of template id of document",
        "question_toks": [
            "list",
            "the",
            "number",
            "of",
            "template",
            "id",
            "of",
            "document"
        ]
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "SELECT count(DISTINCT template_id) FROM Documents",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "DISTINCT",
            "template_id",
            ")",
            "FROM",
            "Documents"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "distinct",
            "template_id",
            ")",
            "from",
            "documents"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                10,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list the number of template id of document",
        "gold_question": "list the number of template id of document",
        "question_toks": [
            "list",
            "the",
            "number",
            "of",
            "template",
            "id",
            "of",
            "document"
        ]
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT'",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "Documents",
            "AS",
            "T1",
            "JOIN",
            "Templates",
            "AS",
            "T2",
            "ON",
            "T1.Template_ID",
            "=",
            "T2.Template_ID",
            "WHERE",
            "T2.Template_Type_Code",
            "=",
            "'PPT",
            "'"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "documents",
            "as",
            "t1",
            "join",
            "templates",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "template_id",
            "=",
            "t2",
            ".",
            "template_id",
            "where",
            "t2",
            ".",
            "template_type_code",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "\"PPT\"",
                    null
                ]
            ]
        },
        "question": "list the total number of template with template type code of template equal to value",
        "gold_question": "list the total number of template with template type code of template equal to value",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "template",
            "with",
            "template",
            "type",
            "code",
            "of",
            "template",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT'",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "Documents",
            "AS",
            "T1",
            "JOIN",
            "Templates",
            "AS",
            "T2",
            "ON",
            "T1.Template_ID",
            "=",
            "T2.Template_ID",
            "WHERE",
            "T2.Template_Type_Code",
            "=",
            "'PPT",
            "'"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "documents",
            "as",
            "t1",
            "join",
            "templates",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "template_id",
            "=",
            "t2",
            ".",
            "template_id",
            "where",
            "t2",
            ".",
            "template_type_code",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "\"PPT\"",
                    null
                ]
            ]
        },
        "question": "list the total number of reference template type with template type code equal to value",
        "gold_question": "list the total number of template with template type code of template equal to value",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "reference",
            "template",
            "type",
            "with",
            "template",
            "type",
            "code",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "SELECT template_id ,  count(*) FROM Documents GROUP BY template_id",
        "query_toks": [
            "SELECT",
            "template_id",
            ",",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "Documents",
            "GROUP",
            "BY",
            "template_id"
        ],
        "query_toks_no_value": [
            "select",
            "template_id",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "documents",
            "group",
            "by",
            "template_id"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    10,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list template id the total number of document for each template id",
        "gold_question": "list template id the total number of document for each template id",
        "question_toks": [
            "list",
            "template",
            "id",
            "the",
            "total",
            "number",
            "of",
            "document",
            "for",
            "each",
            "template",
            "id"
        ]
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "SELECT template_id ,  count(*) FROM Documents GROUP BY template_id",
        "query_toks": [
            "SELECT",
            "template_id",
            ",",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "Documents",
            "GROUP",
            "BY",
            "template_id"
        ],
        "query_toks_no_value": [
            "select",
            "template_id",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "documents",
            "group",
            "by",
            "template_id"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    10,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list template id the total number of document for each template id",
        "gold_question": "list template id the total number of document for each template id",
        "question_toks": [
            "list",
            "template",
            "id",
            "the",
            "total",
            "number",
            "of",
            "document",
            "for",
            "each",
            "template",
            "id"
        ]
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T1.template_id",
            ",",
            "T2.Template_Type_Code",
            "FROM",
            "Documents",
            "AS",
            "T1",
            "JOIN",
            "Templates",
            "AS",
            "T2",
            "ON",
            "T1.template_id",
            "=",
            "T2.template_id",
            "GROUP",
            "BY",
            "T1.template_id",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "template_id",
            ",",
            "t2",
            ".",
            "template_type_code",
            "from",
            "documents",
            "as",
            "t1",
            "join",
            "templates",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "template_id",
            "=",
            "t2",
            ".",
            "template_id",
            "group",
            "by",
            "t1",
            ".",
            "template_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    10,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of template id of document template type code of template for each template id of document ordered by the total number of document descendingly",
        "gold_question": "list top value items of template id of document template type code of template for each template id of document ordered by the total number of document descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "template",
            "id",
            "of",
            "document",
            "template",
            "type",
            "code",
            "of",
            "template",
            "for",
            "each",
            "template",
            "id",
            "of",
            "document",
            "ordered",
            "by",
            "the",
            "total",
            "number",
            "of",
            "document",
            "descendingly"
        ]
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T1.template_id",
            ",",
            "T2.Template_Type_Code",
            "FROM",
            "Documents",
            "AS",
            "T1",
            "JOIN",
            "Templates",
            "AS",
            "T2",
            "ON",
            "T1.template_id",
            "=",
            "T2.template_id",
            "GROUP",
            "BY",
            "T1.template_id",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "template_id",
            ",",
            "t2",
            ".",
            "template_type_code",
            "from",
            "documents",
            "as",
            "t1",
            "join",
            "templates",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "template_id",
            "=",
            "t2",
            ".",
            "template_id",
            "group",
            "by",
            "t1",
            ".",
            "template_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    10,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of template id of document template type code of template for each template id of document ordered by the total number of document descendingly",
        "gold_question": "list top value items of template id of document template type code of template for each template id of document ordered by the total number of document descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "template",
            "id",
            "of",
            "document",
            "template",
            "type",
            "code",
            "of",
            "template",
            "for",
            "each",
            "template",
            "id",
            "of",
            "document",
            "ordered",
            "by",
            "the",
            "total",
            "number",
            "of",
            "document",
            "descendingly"
        ]
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1",
        "query_toks": [
            "SELECT",
            "template_id",
            "FROM",
            "Documents",
            "GROUP",
            "BY",
            "template_id",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "template_id",
            "from",
            "documents",
            "group",
            "by",
            "template_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    10,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list template id of document for each template id that have the total number of document greater than value",
        "gold_question": "list template id of document for each template id that have the total number of document greater than value",
        "question_toks": [
            "list",
            "template",
            "id",
            "of",
            "document",
            "for",
            "each",
            "template",
            "id",
            "that",
            "have",
            "the",
            "total",
            "number",
            "of",
            "document",
            "greater",
            "than",
            "value"
        ]
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1",
        "query_toks": [
            "SELECT",
            "template_id",
            "FROM",
            "Documents",
            "GROUP",
            "BY",
            "template_id",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "template_id",
            "from",
            "documents",
            "group",
            "by",
            "template_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    10,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list template id of document for each template id that have the total number of document greater than value",
        "gold_question": "list template id of document for each template id that have the total number of document greater than value",
        "question_toks": [
            "list",
            "template",
            "id",
            "of",
            "document",
            "for",
            "each",
            "template",
            "id",
            "that",
            "have",
            "the",
            "total",
            "number",
            "of",
            "document",
            "greater",
            "than",
            "value"
        ]
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents",
        "query_toks": [
            "SELECT",
            "template_id",
            "FROM",
            "Templates",
            "EXCEPT",
            "SELECT",
            "template_id",
            "FROM",
            "Documents"
        ],
        "query_toks_no_value": [
            "select",
            "template_id",
            "from",
            "templates",
            "except",
            "select",
            "template_id",
            "from",
            "documents"
        ],
        "sql": {
            "except": {
                "except": null,
                "from": {
                    "conds": [],
                    "table_units": [
                        [
                            "table_unit",
                            2
                        ]
                    ]
                },
                "groupby": [],
                "having": [],
                "intersect": null,
                "limit": null,
                "orderby": [],
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    10,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "union": null,
                "where": []
            },
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list template id of template except that list template id of document",
        "gold_question": "list template id of template except that list template id of document",
        "question_toks": [
            "list",
            "template",
            "id",
            "of",
            "template",
            "except",
            "that",
            "list",
            "template",
            "id",
            "of",
            "document"
        ]
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents",
        "query_toks": [
            "SELECT",
            "template_id",
            "FROM",
            "Templates",
            "EXCEPT",
            "SELECT",
            "template_id",
            "FROM",
            "Documents"
        ],
        "query_toks_no_value": [
            "select",
            "template_id",
            "from",
            "templates",
            "except",
            "select",
            "template_id",
            "from",
            "documents"
        ],
        "sql": {
            "except": {
                "except": null,
                "from": {
                    "conds": [],
                    "table_units": [
                        [
                            "table_unit",
                            2
                        ]
                    ]
                },
                "groupby": [],
                "having": [],
                "intersect": null,
                "limit": null,
                "orderby": [],
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    10,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "union": null,
                "where": []
            },
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list template id of template except that list template id of document",
        "gold_question": "list template id of template except that list template id of document",
        "question_toks": [
            "list",
            "template",
            "id",
            "of",
            "template",
            "except",
            "that",
            "list",
            "template",
            "id",
            "of",
            "document"
        ]
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "SELECT count(*) FROM Templates",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "Templates"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "templates"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list the total number of template",
        "gold_question": "list the total number of template",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "template"
        ]
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "SELECT count(*) FROM Templates",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "Templates"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "templates"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list the total number of template",
        "gold_question": "list the total number of template",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "template"
        ]
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "SELECT template_id ,  version_number ,  template_type_code FROM Templates",
        "query_toks": [
            "SELECT",
            "template_id",
            ",",
            "version_number",
            ",",
            "template_type_code",
            "FROM",
            "Templates"
        ],
        "query_toks_no_value": [
            "select",
            "template_id",
            ",",
            "version_number",
            ",",
            "template_type_code",
            "from",
            "templates"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list template id version number template type code of template",
        "gold_question": "list template id version number template type code of template",
        "question_toks": [
            "list",
            "template",
            "id",
            "version",
            "number",
            "template",
            "type",
            "code",
            "of",
            "template"
        ]
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "SELECT template_id ,  version_number ,  template_type_code FROM Templates",
        "query_toks": [
            "SELECT",
            "template_id",
            ",",
            "version_number",
            ",",
            "template_type_code",
            "FROM",
            "Templates"
        ],
        "query_toks_no_value": [
            "select",
            "template_id",
            ",",
            "version_number",
            ",",
            "template_type_code",
            "from",
            "templates"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list template id version number template type code of template",
        "gold_question": "list template id version number template type code of template",
        "question_toks": [
            "list",
            "template",
            "id",
            "version",
            "number",
            "template",
            "type",
            "code",
            "of",
            "template"
        ]
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "SELECT DISTINCT template_type_code FROM Templates",
        "query_toks": [
            "SELECT",
            "DISTINCT",
            "template_type_code",
            "FROM",
            "Templates"
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "template_type_code",
            "from",
            "templates"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list template type code of template",
        "gold_question": "list template type code of template",
        "question_toks": [
            "list",
            "template",
            "type",
            "code",
            "of",
            "template"
        ]
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "SELECT DISTINCT template_type_code FROM Templates",
        "query_toks": [
            "SELECT",
            "DISTINCT",
            "template_type_code",
            "FROM",
            "Templates"
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "template_type_code",
            "from",
            "templates"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list template type code of template",
        "gold_question": "list template type code of template",
        "question_toks": [
            "list",
            "template",
            "type",
            "code",
            "of",
            "template"
        ]
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "SELECT template_id FROM Templates WHERE template_type_code  =  \"PP\" OR template_type_code  =  \"PPT\"",
        "query_toks": [
            "SELECT",
            "template_id",
            "FROM",
            "Templates",
            "WHERE",
            "template_type_code",
            "=",
            "``",
            "PP",
            "''",
            "OR",
            "template_type_code",
            "=",
            "``",
            "PPT",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "template_id",
            "from",
            "templates",
            "where",
            "template_type_code",
            "=",
            "value",
            "or",
            "template_type_code",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "\"PP\"",
                    null
                ],
                "or",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "\"PPT\"",
                    null
                ]
            ]
        },
        "question": "list template id of template with template type code equal to value or template type code equal to value",
        "gold_question": "list template id of template with template type code equal to value or template type code equal to value",
        "question_toks": [
            "list",
            "template",
            "id",
            "of",
            "template",
            "with",
            "template",
            "type",
            "code",
            "equal",
            "to",
            "value",
            "or",
            "template",
            "type",
            "code",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "SELECT template_id FROM Templates WHERE template_type_code  =  \"PP\" OR template_type_code  =  \"PPT\"",
        "query_toks": [
            "SELECT",
            "template_id",
            "FROM",
            "Templates",
            "WHERE",
            "template_type_code",
            "=",
            "``",
            "PP",
            "''",
            "OR",
            "template_type_code",
            "=",
            "``",
            "PPT",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "template_id",
            "from",
            "templates",
            "where",
            "template_type_code",
            "=",
            "value",
            "or",
            "template_type_code",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "\"PP\"",
                    null
                ],
                "or",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "\"PPT\"",
                    null
                ]
            ]
        },
        "question": "list template id of template with template type code equal to value or template type code equal to value",
        "gold_question": "list template id of template with template type code equal to value or template type code equal to value",
        "question_toks": [
            "list",
            "template",
            "id",
            "of",
            "template",
            "with",
            "template",
            "type",
            "code",
            "equal",
            "to",
            "value",
            "or",
            "template",
            "type",
            "code",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "SELECT count(*) FROM Templates WHERE template_type_code  =  \"CV\"",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "Templates",
            "WHERE",
            "template_type_code",
            "=",
            "``",
            "CV",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "templates",
            "where",
            "template_type_code",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "\"CV\"",
                    null
                ]
            ]
        },
        "question": "list the total number of template with template type code equal to value",
        "gold_question": "list the total number of template with template type code equal to value",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "template",
            "with",
            "template",
            "type",
            "code",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "SELECT count(*) FROM Templates WHERE template_type_code  =  \"CV\"",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "Templates",
            "WHERE",
            "template_type_code",
            "=",
            "``",
            "CV",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "templates",
            "where",
            "template_type_code",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "\"CV\"",
                    null
                ]
            ]
        },
        "question": "list the total number of reference template type with template type code equal to value",
        "gold_question": "list the total number of template with template type code equal to value",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "reference",
            "template",
            "type",
            "with",
            "template",
            "type",
            "code",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "SELECT version_number ,  template_type_code FROM Templates WHERE version_number  >  5",
        "query_toks": [
            "SELECT",
            "version_number",
            ",",
            "template_type_code",
            "FROM",
            "Templates",
            "WHERE",
            "version_number",
            ">",
            "5"
        ],
        "query_toks_no_value": [
            "select",
            "version_number",
            ",",
            "template_type_code",
            "from",
            "templates",
            "where",
            "version_number",
            ">",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ],
                    5.0,
                    null
                ]
            ]
        },
        "question": "list version number template type code of template with version number greater than value",
        "gold_question": "list version number template type code of template with version number greater than value",
        "question_toks": [
            "list",
            "version",
            "number",
            "template",
            "type",
            "code",
            "of",
            "template",
            "with",
            "version",
            "number",
            "greater",
            "than",
            "value"
        ]
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "SELECT version_number ,  template_type_code FROM Templates WHERE version_number  >  5",
        "query_toks": [
            "SELECT",
            "version_number",
            ",",
            "template_type_code",
            "FROM",
            "Templates",
            "WHERE",
            "version_number",
            ">",
            "5"
        ],
        "query_toks_no_value": [
            "select",
            "version_number",
            ",",
            "template_type_code",
            "from",
            "templates",
            "where",
            "version_number",
            ">",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ],
                    5.0,
                    null
                ]
            ]
        },
        "question": "list version number template type code of template with version number greater than value",
        "gold_question": "list version number template type code of template with version number greater than value",
        "question_toks": [
            "list",
            "version",
            "number",
            "template",
            "type",
            "code",
            "of",
            "template",
            "with",
            "version",
            "number",
            "greater",
            "than",
            "value"
        ]
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "SELECT template_type_code ,  count(*) FROM Templates GROUP BY template_type_code",
        "query_toks": [
            "SELECT",
            "template_type_code",
            ",",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "Templates",
            "GROUP",
            "BY",
            "template_type_code"
        ],
        "query_toks_no_value": [
            "select",
            "template_type_code",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "templates",
            "group",
            "by",
            "template_type_code"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    5,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list template type code the total number of template for each template type code",
        "gold_question": "list template type code the total number of template for each template type code",
        "question_toks": [
            "list",
            "template",
            "type",
            "code",
            "the",
            "total",
            "number",
            "of",
            "template",
            "for",
            "each",
            "template",
            "type",
            "code"
        ]
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "SELECT template_type_code ,  count(*) FROM Templates GROUP BY template_type_code",
        "query_toks": [
            "SELECT",
            "template_type_code",
            ",",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "Templates",
            "GROUP",
            "BY",
            "template_type_code"
        ],
        "query_toks_no_value": [
            "select",
            "template_type_code",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "templates",
            "group",
            "by",
            "template_type_code"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    5,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list template type code the total number of template for each template type code",
        "gold_question": "list template type code the total number of template for each template type code",
        "question_toks": [
            "list",
            "template",
            "type",
            "code",
            "the",
            "total",
            "number",
            "of",
            "template",
            "for",
            "each",
            "template",
            "type",
            "code"
        ]
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "template_type_code",
            "FROM",
            "Templates",
            "GROUP",
            "BY",
            "template_type_code",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "template_type_code",
            "from",
            "templates",
            "group",
            "by",
            "template_type_code",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    5,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of template type code of template for each template type code ordered by the total number of template descendingly",
        "gold_question": "list top value items of template type code of template for each template type code ordered by the total number of template descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "template",
            "type",
            "code",
            "of",
            "template",
            "for",
            "each",
            "template",
            "type",
            "code",
            "ordered",
            "by",
            "the",
            "total",
            "number",
            "of",
            "template",
            "descendingly"
        ]
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "template_type_code",
            "FROM",
            "Templates",
            "GROUP",
            "BY",
            "template_type_code",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "template_type_code",
            "from",
            "templates",
            "group",
            "by",
            "template_type_code",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    5,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of template type code of template for each template type code ordered by the total number of template descendingly",
        "gold_question": "list top value items of template type code of template for each template type code ordered by the total number of template descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "template",
            "type",
            "code",
            "of",
            "template",
            "for",
            "each",
            "template",
            "type",
            "code",
            "ordered",
            "by",
            "the",
            "total",
            "number",
            "of",
            "template",
            "descendingly"
        ]
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*)  <  3",
        "query_toks": [
            "SELECT",
            "template_type_code",
            "FROM",
            "Templates",
            "GROUP",
            "BY",
            "template_type_code",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            "<",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "template_type_code",
            "from",
            "templates",
            "group",
            "by",
            "template_type_code",
            "having",
            "count",
            "(",
            "*",
            ")",
            "<",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    5,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    4,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list template type code of template for each template type code that have the total number of template less than value",
        "gold_question": "list template type code of template for each template type code that have the total number of template less than value",
        "question_toks": [
            "list",
            "template",
            "type",
            "code",
            "of",
            "template",
            "for",
            "each",
            "template",
            "type",
            "code",
            "that",
            "have",
            "the",
            "total",
            "number",
            "of",
            "template",
            "less",
            "than",
            "value"
        ]
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*)  <  3",
        "query_toks": [
            "SELECT",
            "template_type_code",
            "FROM",
            "Templates",
            "GROUP",
            "BY",
            "template_type_code",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            "<",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "template_type_code",
            "from",
            "templates",
            "group",
            "by",
            "template_type_code",
            "having",
            "count",
            "(",
            "*",
            ")",
            "<",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    5,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    4,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list template type code of template for each template type code that have the total number of template less than value",
        "gold_question": "list template type code of template for each template type code that have the total number of template less than value",
        "question_toks": [
            "list",
            "template",
            "type",
            "code",
            "of",
            "template",
            "for",
            "each",
            "template",
            "type",
            "code",
            "that",
            "have",
            "the",
            "total",
            "number",
            "of",
            "template",
            "less",
            "than",
            "value"
        ]
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "SELECT min(Version_Number) ,  template_type_code FROM Templates",
        "query_toks": [
            "SELECT",
            "min",
            "(",
            "Version_Number",
            ")",
            ",",
            "template_type_code",
            "FROM",
            "Templates"
        ],
        "query_toks_no_value": [
            "select",
            "min",
            "(",
            "version_number",
            ")",
            ",",
            "template_type_code",
            "from",
            "templates"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list the minimum of version number template type code of template",
        "gold_question": "list the minimum of version number template type code of template",
        "question_toks": [
            "list",
            "the",
            "minimum",
            "of",
            "version",
            "number",
            "template",
            "type",
            "code",
            "of",
            "template"
        ]
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "SELECT min(Version_Number) ,  template_type_code FROM Templates",
        "query_toks": [
            "SELECT",
            "min",
            "(",
            "Version_Number",
            ")",
            ",",
            "template_type_code",
            "FROM",
            "Templates"
        ],
        "query_toks_no_value": [
            "select",
            "min",
            "(",
            "version_number",
            ")",
            ",",
            "template_type_code",
            "from",
            "templates"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list the minimum of version number template type code of template",
        "gold_question": "list the minimum of version number template type code of template",
        "question_toks": [
            "list",
            "the",
            "minimum",
            "of",
            "version",
            "number",
            "template",
            "type",
            "code",
            "of",
            "template"
        ]
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T2.document_name  =  \"Data base\"",
        "query_toks": [
            "SELECT",
            "T1.template_type_code",
            "FROM",
            "Templates",
            "AS",
            "T1",
            "JOIN",
            "Documents",
            "AS",
            "T2",
            "ON",
            "T1.template_id",
            "=",
            "T2.template_id",
            "WHERE",
            "T2.document_name",
            "=",
            "``",
            "Data",
            "base",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "template_type_code",
            "from",
            "templates",
            "as",
            "t1",
            "join",
            "documents",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "template_id",
            "=",
            "t2",
            ".",
            "template_id",
            "where",
            "t2",
            ".",
            "document_name",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    "\"Data base\"",
                    null
                ]
            ]
        },
        "question": "list template type code of template with document name of document equal to value",
        "gold_question": "list template type code of template with document name of document equal to value",
        "question_toks": [
            "list",
            "template",
            "type",
            "code",
            "of",
            "template",
            "with",
            "document",
            "name",
            "of",
            "document",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T2.document_name  =  \"Data base\"",
        "query_toks": [
            "SELECT",
            "T1.template_type_code",
            "FROM",
            "Templates",
            "AS",
            "T1",
            "JOIN",
            "Documents",
            "AS",
            "T2",
            "ON",
            "T1.template_id",
            "=",
            "T2.template_id",
            "WHERE",
            "T2.document_name",
            "=",
            "``",
            "Data",
            "base",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "template_type_code",
            "from",
            "templates",
            "as",
            "t1",
            "join",
            "documents",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "template_id",
            "=",
            "t2",
            ".",
            "template_id",
            "where",
            "t2",
            ".",
            "document_name",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    "\"Data base\"",
                    null
                ]
            ]
        },
        "question": "list template type code of template with document name of document equal to value",
        "gold_question": "list template type code of template with document name of document equal to value",
        "question_toks": [
            "list",
            "template",
            "type",
            "code",
            "of",
            "template",
            "with",
            "document",
            "name",
            "of",
            "document",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T1.template_type_code  =  \"BK\"",
        "query_toks": [
            "SELECT",
            "T2.document_name",
            "FROM",
            "Templates",
            "AS",
            "T1",
            "JOIN",
            "Documents",
            "AS",
            "T2",
            "ON",
            "T1.template_id",
            "=",
            "T2.template_id",
            "WHERE",
            "T1.template_type_code",
            "=",
            "``",
            "BK",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "t2",
            ".",
            "document_name",
            "from",
            "templates",
            "as",
            "t1",
            "join",
            "documents",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "template_id",
            "=",
            "t2",
            ".",
            "template_id",
            "where",
            "t1",
            ".",
            "template_type_code",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "\"BK\"",
                    null
                ]
            ]
        },
        "question": "list document name of document with template type code of template equal to value",
        "gold_question": "list document name of document with template type code of template equal to value",
        "question_toks": [
            "list",
            "document",
            "name",
            "of",
            "document",
            "with",
            "template",
            "type",
            "code",
            "of",
            "template",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T1.template_type_code  =  \"BK\"",
        "query_toks": [
            "SELECT",
            "T2.document_name",
            "FROM",
            "Templates",
            "AS",
            "T1",
            "JOIN",
            "Documents",
            "AS",
            "T2",
            "ON",
            "T1.template_id",
            "=",
            "T2.template_id",
            "WHERE",
            "T1.template_type_code",
            "=",
            "``",
            "BK",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "t2",
            ".",
            "document_name",
            "from",
            "templates",
            "as",
            "t1",
            "join",
            "documents",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "template_id",
            "=",
            "t2",
            ".",
            "template_id",
            "where",
            "t1",
            ".",
            "template_type_code",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "\"BK\"",
                    null
                ]
            ]
        },
        "question": "list document name of document with template type code of template equal to value",
        "gold_question": "list document name of document with template type code of template equal to value",
        "question_toks": [
            "list",
            "document",
            "name",
            "of",
            "document",
            "with",
            "template",
            "type",
            "code",
            "of",
            "template",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code",
        "query_toks": [
            "SELECT",
            "T1.template_type_code",
            ",",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "Templates",
            "AS",
            "T1",
            "JOIN",
            "Documents",
            "AS",
            "T2",
            "ON",
            "T1.template_id",
            "=",
            "T2.template_id",
            "GROUP",
            "BY",
            "T1.template_type_code"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "template_type_code",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "templates",
            "as",
            "t1",
            "join",
            "documents",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "template_id",
            "=",
            "t2",
            ".",
            "template_id",
            "group",
            "by",
            "t1",
            ".",
            "template_type_code"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    5,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list template type code of document the total number of document for each template type code of template",
        "gold_question": "list template type code of document the total number of document for each template type code of template",
        "question_toks": [
            "list",
            "template",
            "type",
            "code",
            "of",
            "document",
            "the",
            "total",
            "number",
            "of",
            "document",
            "for",
            "each",
            "template",
            "type",
            "code",
            "of",
            "template"
        ]
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code",
        "query_toks": [
            "SELECT",
            "T1.template_type_code",
            ",",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "Templates",
            "AS",
            "T1",
            "JOIN",
            "Documents",
            "AS",
            "T2",
            "ON",
            "T1.template_id",
            "=",
            "T2.template_id",
            "GROUP",
            "BY",
            "T1.template_type_code"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "template_type_code",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "templates",
            "as",
            "t1",
            "join",
            "documents",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "template_id",
            "=",
            "t2",
            ".",
            "template_id",
            "group",
            "by",
            "t1",
            ".",
            "template_type_code"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    5,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list template type code of document the total number of document for each template type code of template",
        "gold_question": "list template type code of document the total number of document for each template type code of template",
        "question_toks": [
            "list",
            "template",
            "type",
            "code",
            "of",
            "document",
            "the",
            "total",
            "number",
            "of",
            "document",
            "for",
            "each",
            "template",
            "type",
            "code",
            "of",
            "template"
        ]
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T1.template_type_code",
            "FROM",
            "Templates",
            "AS",
            "T1",
            "JOIN",
            "Documents",
            "AS",
            "T2",
            "ON",
            "T1.template_id",
            "=",
            "T2.template_id",
            "GROUP",
            "BY",
            "T1.template_type_code",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "template_type_code",
            "from",
            "templates",
            "as",
            "t1",
            "join",
            "documents",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "template_id",
            "=",
            "t2",
            ".",
            "template_id",
            "group",
            "by",
            "t1",
            ".",
            "template_type_code",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    5,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of template type code of template for each template type code of template ordered by the total number of template descendingly",
        "gold_question": "list top value items of template type code of template for each template type code of template ordered by the total number of template descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "template",
            "type",
            "code",
            "of",
            "template",
            "for",
            "each",
            "template",
            "type",
            "code",
            "of",
            "template",
            "ordered",
            "by",
            "the",
            "total",
            "number",
            "of",
            "template",
            "descendingly"
        ]
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T1.template_type_code",
            "FROM",
            "Templates",
            "AS",
            "T1",
            "JOIN",
            "Documents",
            "AS",
            "T2",
            "ON",
            "T1.template_id",
            "=",
            "T2.template_id",
            "GROUP",
            "BY",
            "T1.template_type_code",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "template_type_code",
            "from",
            "templates",
            "as",
            "t1",
            "join",
            "documents",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "template_id",
            "=",
            "t2",
            ".",
            "template_id",
            "group",
            "by",
            "t1",
            ".",
            "template_type_code",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    5,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of template type code of template for each template type code of template ordered by the total number of template descendingly",
        "gold_question": "list top value items of template type code of template for each template type code of template ordered by the total number of template descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "template",
            "type",
            "code",
            "of",
            "template",
            "for",
            "each",
            "template",
            "type",
            "code",
            "of",
            "template",
            "ordered",
            "by",
            "the",
            "total",
            "number",
            "of",
            "template",
            "descendingly"
        ]
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id",
        "query_toks": [
            "SELECT",
            "template_type_code",
            "FROM",
            "Templates",
            "EXCEPT",
            "SELECT",
            "template_type_code",
            "FROM",
            "Templates",
            "AS",
            "T1",
            "JOIN",
            "Documents",
            "AS",
            "T2",
            "ON",
            "T1.template_id",
            "=",
            "T2.template_id"
        ],
        "query_toks_no_value": [
            "select",
            "template_type_code",
            "from",
            "templates",
            "except",
            "select",
            "template_type_code",
            "from",
            "templates",
            "as",
            "t1",
            "join",
            "documents",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "template_id",
            "=",
            "t2",
            ".",
            "template_id"
        ],
        "sql": {
            "except": {
                "except": null,
                "from": {
                    "conds": [
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    3,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ],
                    "table_units": [
                        [
                            "table_unit",
                            1
                        ],
                        [
                            "table_unit",
                            2
                        ]
                    ]
                },
                "groupby": [],
                "having": [],
                "intersect": null,
                "limit": null,
                "orderby": [],
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    5,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "union": null,
                "where": []
            },
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list template type code of reference template type except that list template type code of template",
        "gold_question": "list template type code of template except that list template type code of template",
        "question_toks": [
            "list",
            "template",
            "type",
            "code",
            "of",
            "reference",
            "template",
            "type",
            "except",
            "that",
            "list",
            "template",
            "type",
            "code",
            "of",
            "template"
        ]
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id",
        "query_toks": [
            "SELECT",
            "template_type_code",
            "FROM",
            "Templates",
            "EXCEPT",
            "SELECT",
            "template_type_code",
            "FROM",
            "Templates",
            "AS",
            "T1",
            "JOIN",
            "Documents",
            "AS",
            "T2",
            "ON",
            "T1.template_id",
            "=",
            "T2.template_id"
        ],
        "query_toks_no_value": [
            "select",
            "template_type_code",
            "from",
            "templates",
            "except",
            "select",
            "template_type_code",
            "from",
            "templates",
            "as",
            "t1",
            "join",
            "documents",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "template_id",
            "=",
            "t2",
            ".",
            "template_id"
        ],
        "sql": {
            "except": {
                "except": null,
                "from": {
                    "conds": [
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    3,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ],
                    "table_units": [
                        [
                            "table_unit",
                            1
                        ],
                        [
                            "table_unit",
                            2
                        ]
                    ]
                },
                "groupby": [],
                "having": [],
                "intersect": null,
                "limit": null,
                "orderby": [],
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    5,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "union": null,
                "where": []
            },
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list template type code of template except that list template type code of template",
        "gold_question": "list template type code of template except that list template type code of template",
        "question_toks": [
            "list",
            "template",
            "type",
            "code",
            "of",
            "template",
            "except",
            "that",
            "list",
            "template",
            "type",
            "code",
            "of",
            "template"
        ]
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "SELECT template_type_code ,  template_type_description FROM Ref_template_types",
        "query_toks": [
            "SELECT",
            "template_type_code",
            ",",
            "template_type_description",
            "FROM",
            "Ref_template_types"
        ],
        "query_toks_no_value": [
            "select",
            "template_type_code",
            ",",
            "template_type_description",
            "from",
            "ref_template_types"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list template type code template type description of reference template type",
        "gold_question": "list template type code template type description of reference template type",
        "question_toks": [
            "list",
            "template",
            "type",
            "code",
            "template",
            "type",
            "description",
            "of",
            "reference",
            "template",
            "type"
        ]
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "SELECT template_type_code ,  template_type_description FROM Ref_template_types",
        "query_toks": [
            "SELECT",
            "template_type_code",
            ",",
            "template_type_description",
            "FROM",
            "Ref_template_types"
        ],
        "query_toks_no_value": [
            "select",
            "template_type_code",
            ",",
            "template_type_description",
            "from",
            "ref_template_types"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list template type code template type description of reference template type",
        "gold_question": "list template type code template type description of reference template type",
        "question_toks": [
            "list",
            "template",
            "type",
            "code",
            "template",
            "type",
            "description",
            "of",
            "reference",
            "template",
            "type"
        ]
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "SELECT template_type_description FROM Ref_template_types WHERE template_type_code  =  \"AD\"",
        "query_toks": [
            "SELECT",
            "template_type_description",
            "FROM",
            "Ref_template_types",
            "WHERE",
            "template_type_code",
            "=",
            "``",
            "AD",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "template_type_description",
            "from",
            "ref_template_types",
            "where",
            "template_type_code",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ],
                    "\"AD\"",
                    null
                ]
            ]
        },
        "question": "list template type description of reference template type with template type code equal to value",
        "gold_question": "list template type description of reference template type with template type code equal to value",
        "question_toks": [
            "list",
            "template",
            "type",
            "description",
            "of",
            "reference",
            "template",
            "type",
            "with",
            "template",
            "type",
            "code",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "SELECT template_type_description FROM Ref_template_types WHERE template_type_code  =  \"AD\"",
        "query_toks": [
            "SELECT",
            "template_type_description",
            "FROM",
            "Ref_template_types",
            "WHERE",
            "template_type_code",
            "=",
            "``",
            "AD",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "template_type_description",
            "from",
            "ref_template_types",
            "where",
            "template_type_code",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ],
                    "\"AD\"",
                    null
                ]
            ]
        },
        "question": "list template type description of reference template type with template type code equal to value",
        "gold_question": "list template type description of reference template type with template type code equal to value",
        "question_toks": [
            "list",
            "template",
            "type",
            "description",
            "of",
            "reference",
            "template",
            "type",
            "with",
            "template",
            "type",
            "code",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "SELECT template_type_code FROM Ref_template_types WHERE template_type_description  =  \"Book\"",
        "query_toks": [
            "SELECT",
            "template_type_code",
            "FROM",
            "Ref_template_types",
            "WHERE",
            "template_type_description",
            "=",
            "``",
            "Book",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "template_type_code",
            "from",
            "ref_template_types",
            "where",
            "template_type_description",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"Book\"",
                    null
                ]
            ]
        },
        "question": "list template type code of reference template type with template type description equal to value",
        "gold_question": "list template type code of reference template type with template type description equal to value",
        "question_toks": [
            "list",
            "template",
            "type",
            "code",
            "of",
            "reference",
            "template",
            "type",
            "with",
            "template",
            "type",
            "description",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "SELECT template_type_code FROM Ref_template_types WHERE template_type_description  =  \"Book\"",
        "query_toks": [
            "SELECT",
            "template_type_code",
            "FROM",
            "Ref_template_types",
            "WHERE",
            "template_type_description",
            "=",
            "``",
            "Book",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "template_type_code",
            "from",
            "ref_template_types",
            "where",
            "template_type_description",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"Book\"",
                    null
                ]
            ]
        },
        "question": "list template type code of template with template type description equal to value",
        "gold_question": "list template type code of reference template type with template type description equal to value",
        "question_toks": [
            "list",
            "template",
            "type",
            "code",
            "of",
            "template",
            "with",
            "template",
            "type",
            "description",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID",
        "query_toks": [
            "SELECT",
            "DISTINCT",
            "T1.template_type_description",
            "FROM",
            "Ref_template_types",
            "AS",
            "T1",
            "JOIN",
            "Templates",
            "AS",
            "T2",
            "ON",
            "T1.template_type_code",
            "=",
            "T2.template_type_code",
            "JOIN",
            "Documents",
            "AS",
            "T3",
            "ON",
            "T2.Template_ID",
            "=",
            "T3.template_ID"
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "t1",
            ".",
            "template_type_description",
            "from",
            "ref_template_types",
            "as",
            "t1",
            "join",
            "templates",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "template_type_code",
            "=",
            "t2",
            ".",
            "template_type_code",
            "join",
            "documents",
            "as",
            "t3",
            "on",
            "t2",
            ".",
            "template_id",
            "=",
            "t3",
            ".",
            "template_id"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list template type description of reference template type",
        "gold_question": "list template type description of reference template type",
        "question_toks": [
            "list",
            "template",
            "type",
            "description",
            "of",
            "reference",
            "template",
            "type"
        ]
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID",
        "query_toks": [
            "SELECT",
            "DISTINCT",
            "T1.template_type_description",
            "FROM",
            "Ref_template_types",
            "AS",
            "T1",
            "JOIN",
            "Templates",
            "AS",
            "T2",
            "ON",
            "T1.template_type_code",
            "=",
            "T2.template_type_code",
            "JOIN",
            "Documents",
            "AS",
            "T3",
            "ON",
            "T2.Template_ID",
            "=",
            "T3.template_ID"
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "t1",
            ".",
            "template_type_description",
            "from",
            "ref_template_types",
            "as",
            "t1",
            "join",
            "templates",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "template_type_code",
            "=",
            "t2",
            ".",
            "template_type_code",
            "join",
            "documents",
            "as",
            "t3",
            "on",
            "t2",
            ".",
            "template_id",
            "=",
            "t3",
            ".",
            "template_id"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list template type description of reference template type",
        "gold_question": "list template type description of reference template type",
        "question_toks": [
            "list",
            "template",
            "type",
            "description",
            "of",
            "reference",
            "template",
            "type"
        ]
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  \"Presentation\"",
        "query_toks": [
            "SELECT",
            "T2.template_id",
            "FROM",
            "Ref_template_types",
            "AS",
            "T1",
            "JOIN",
            "Templates",
            "AS",
            "T2",
            "ON",
            "T1.template_type_code",
            "=",
            "T2.template_type_code",
            "WHERE",
            "T1.template_type_description",
            "=",
            "``",
            "Presentation",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "t2",
            ".",
            "template_id",
            "from",
            "ref_template_types",
            "as",
            "t1",
            "join",
            "templates",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "template_type_code",
            "=",
            "t2",
            ".",
            "template_type_code",
            "where",
            "t1",
            ".",
            "template_type_description",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"Presentation\"",
                    null
                ]
            ]
        },
        "question": "list template id of template with template type description of reference template type equal to value",
        "gold_question": "list template id of template with template type description of reference template type equal to value",
        "question_toks": [
            "list",
            "template",
            "id",
            "of",
            "template",
            "with",
            "template",
            "type",
            "description",
            "of",
            "reference",
            "template",
            "type",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  \"Presentation\"",
        "query_toks": [
            "SELECT",
            "T2.template_id",
            "FROM",
            "Ref_template_types",
            "AS",
            "T1",
            "JOIN",
            "Templates",
            "AS",
            "T2",
            "ON",
            "T1.template_type_code",
            "=",
            "T2.template_type_code",
            "WHERE",
            "T1.template_type_description",
            "=",
            "``",
            "Presentation",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "t2",
            ".",
            "template_id",
            "from",
            "ref_template_types",
            "as",
            "t1",
            "join",
            "templates",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "template_type_code",
            "=",
            "t2",
            ".",
            "template_type_code",
            "where",
            "t1",
            ".",
            "template_type_description",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"Presentation\"",
                    null
                ]
            ]
        },
        "question": "list template id of template with template type description of reference template type equal to value",
        "gold_question": "list template id of template with template type description of reference template type equal to value",
        "question_toks": [
            "list",
            "template",
            "id",
            "of",
            "template",
            "with",
            "template",
            "type",
            "description",
            "of",
            "reference",
            "template",
            "type",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "SELECT count(*) FROM Paragraphs",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "Paragraphs"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "paragraphs"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list the total number of paragraph",
        "gold_question": "list the total number of paragraph",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "paragraph"
        ]
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "SELECT count(*) FROM Paragraphs",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "Paragraphs"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "paragraphs"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list the total number of paragraph",
        "gold_question": "list the total number of paragraph",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "paragraph"
        ]
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID WHERE T2.document_name  =  'Summer Show'",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "Paragraphs",
            "AS",
            "T1",
            "JOIN",
            "Documents",
            "AS",
            "T2",
            "ON",
            "T1.document_ID",
            "=",
            "T2.document_ID",
            "WHERE",
            "T2.document_name",
            "=",
            "'Summer",
            "Show",
            "'"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "paragraphs",
            "as",
            "t1",
            "join",
            "documents",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "document_id",
            "=",
            "t2",
            ".",
            "document_id",
            "where",
            "t2",
            ".",
            "document_name",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    "\"Summer Show\"",
                    null
                ]
            ]
        },
        "question": "list the total number of document with document name of document equal to value",
        "gold_question": "list the total number of document with document name of document equal to value",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "document",
            "with",
            "document",
            "name",
            "of",
            "document",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID WHERE T2.document_name  =  'Summer Show'",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "Paragraphs",
            "AS",
            "T1",
            "JOIN",
            "Documents",
            "AS",
            "T2",
            "ON",
            "T1.document_ID",
            "=",
            "T2.document_ID",
            "WHERE",
            "T2.document_name",
            "=",
            "'Summer",
            "Show",
            "'"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "paragraphs",
            "as",
            "t1",
            "join",
            "documents",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "document_id",
            "=",
            "t2",
            ".",
            "document_id",
            "where",
            "t2",
            ".",
            "document_name",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    "\"Summer Show\"",
                    null
                ]
            ]
        },
        "question": "list the total number of document with document name of document equal to value",
        "gold_question": "list the total number of document with document name of document equal to value",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "document",
            "with",
            "document",
            "name",
            "of",
            "document",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select other_details from paragraphs where paragraph_text like 'korea'",
        "query_toks": [
            "select",
            "other_details",
            "from",
            "paragraphs",
            "where",
            "paragraph_text",
            "like",
            "\"korea\""
        ],
        "query_toks_no_value": [
            "select",
            "other_details",
            "from",
            "paragraphs",
            "where",
            "paragraph_text",
            "like",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                17,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    9,
                    [
                        0,
                        [
                            0,
                            16,
                            false
                        ],
                        null
                    ],
                    "\"korea\"",
                    null
                ]
            ]
        },
        "question": "list other detail of paragraph with paragraph text equal to value",
        "gold_question": "list other detail of paragraph with paragraph text formatted as value",
        "question_toks": [
            "list",
            "other",
            "detail",
            "of",
            "paragraph",
            "with",
            "paragraph",
            "text",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select other_details from paragraphs where paragraph_text like 'korea'",
        "query_toks": [
            "select",
            "other_details",
            "from",
            "paragraphs",
            "where",
            "paragraph_text",
            "like",
            "\"korea\""
        ],
        "query_toks_no_value": [
            "select",
            "other_details",
            "from",
            "paragraphs",
            "where",
            "paragraph_text",
            "like",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                17,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    9,
                    [
                        0,
                        [
                            0,
                            16,
                            false
                        ],
                        null
                    ],
                    "\"korea\"",
                    null
                ]
            ]
        },
        "question": "list other detail of paragraph with paragraph text formatted as value",
        "gold_question": "list other detail of paragraph with paragraph text formatted as value",
        "question_toks": [
            "list",
            "other",
            "detail",
            "of",
            "paragraph",
            "with",
            "paragraph",
            "text",
            "formatted",
            "as",
            "value"
        ]
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "SELECT T1.paragraph_id ,   T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.Document_Name  =  'Welcome to NY'",
        "query_toks": [
            "SELECT",
            "T1.paragraph_id",
            ",",
            "T1.paragraph_text",
            "FROM",
            "Paragraphs",
            "AS",
            "T1",
            "JOIN",
            "Documents",
            "AS",
            "T2",
            "ON",
            "T1.document_id",
            "=",
            "T2.document_id",
            "WHERE",
            "T2.Document_Name",
            "=",
            "'Welcome",
            "to",
            "NY",
            "'"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "paragraph_id",
            ",",
            "t1",
            ".",
            "paragraph_text",
            "from",
            "paragraphs",
            "as",
            "t1",
            "join",
            "documents",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "document_id",
            "=",
            "t2",
            ".",
            "document_id",
            "where",
            "t2",
            ".",
            "document_name",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                16,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    "\"Welcome to NY\"",
                    null
                ]
            ]
        },
        "question": "list paragraph id of paragraph paragraph text of paragraph with document name of document equal to value",
        "gold_question": "list paragraph id of paragraph paragraph text of paragraph with document name of document equal to value",
        "question_toks": [
            "list",
            "paragraph",
            "id",
            "of",
            "paragraph",
            "paragraph",
            "text",
            "of",
            "paragraph",
            "with",
            "document",
            "name",
            "of",
            "document",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "SELECT T1.paragraph_id ,   T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.Document_Name  =  'Welcome to NY'",
        "query_toks": [
            "SELECT",
            "T1.paragraph_id",
            ",",
            "T1.paragraph_text",
            "FROM",
            "Paragraphs",
            "AS",
            "T1",
            "JOIN",
            "Documents",
            "AS",
            "T2",
            "ON",
            "T1.document_id",
            "=",
            "T2.document_id",
            "WHERE",
            "T2.Document_Name",
            "=",
            "'Welcome",
            "to",
            "NY",
            "'"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "paragraph_id",
            ",",
            "t1",
            ".",
            "paragraph_text",
            "from",
            "paragraphs",
            "as",
            "t1",
            "join",
            "documents",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "document_id",
            "=",
            "t2",
            ".",
            "document_id",
            "where",
            "t2",
            ".",
            "document_name",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                16,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    "\"Welcome to NY\"",
                    null
                ]
            ]
        },
        "question": "list paragraph id of paragraph paragraph text of paragraph with document name of document equal to value",
        "gold_question": "list paragraph id of paragraph paragraph text of paragraph with document name of document equal to value",
        "question_toks": [
            "list",
            "paragraph",
            "id",
            "of",
            "paragraph",
            "paragraph",
            "text",
            "of",
            "paragraph",
            "with",
            "document",
            "name",
            "of",
            "document",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "SELECT T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  \"Customer reviews\"",
        "query_toks": [
            "SELECT",
            "T1.paragraph_text",
            "FROM",
            "Paragraphs",
            "AS",
            "T1",
            "JOIN",
            "Documents",
            "AS",
            "T2",
            "ON",
            "T1.document_id",
            "=",
            "T2.document_id",
            "WHERE",
            "T2.document_name",
            "=",
            "``",
            "Customer",
            "reviews",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "paragraph_text",
            "from",
            "paragraphs",
            "as",
            "t1",
            "join",
            "documents",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "document_id",
            "=",
            "t2",
            ".",
            "document_id",
            "where",
            "t2",
            ".",
            "document_name",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                16,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    "\"Customer reviews\"",
                    null
                ]
            ]
        },
        "question": "list paragraph text of paragraph with document name of document equal to value",
        "gold_question": "list paragraph text of paragraph with document name of document equal to value",
        "question_toks": [
            "list",
            "paragraph",
            "text",
            "of",
            "paragraph",
            "with",
            "document",
            "name",
            "of",
            "document",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "SELECT T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  \"Customer reviews\"",
        "query_toks": [
            "SELECT",
            "T1.paragraph_text",
            "FROM",
            "Paragraphs",
            "AS",
            "T1",
            "JOIN",
            "Documents",
            "AS",
            "T2",
            "ON",
            "T1.document_id",
            "=",
            "T2.document_id",
            "WHERE",
            "T2.document_name",
            "=",
            "``",
            "Customer",
            "reviews",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "paragraph_text",
            "from",
            "paragraphs",
            "as",
            "t1",
            "join",
            "documents",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "document_id",
            "=",
            "t2",
            ".",
            "document_id",
            "where",
            "t2",
            ".",
            "document_name",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                16,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    "\"Customer reviews\"",
                    null
                ]
            ]
        },
        "question": "list paragraph text of paragraph with document name of document equal to value",
        "gold_question": "list paragraph text of paragraph with document name of document equal to value",
        "question_toks": [
            "list",
            "paragraph",
            "text",
            "of",
            "paragraph",
            "with",
            "document",
            "name",
            "of",
            "document",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id",
        "query_toks": [
            "SELECT",
            "document_id",
            ",",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "Paragraphs",
            "GROUP",
            "BY",
            "document_id",
            "ORDER",
            "BY",
            "document_id"
        ],
        "query_toks_no_value": [
            "select",
            "document_id",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "paragraphs",
            "group",
            "by",
            "document_id",
            "order",
            "by",
            "document_id"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    15,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            15,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list document id the total number of paragraph for each document id ordered by the total number of paragraph ascendingly",
        "gold_question": "list document id the total number of paragraph for each document id ordered by document id ascendingly",
        "question_toks": [
            "list",
            "document",
            "id",
            "the",
            "total",
            "number",
            "of",
            "paragraph",
            "for",
            "each",
            "document",
            "id",
            "ordered",
            "by",
            "the",
            "total",
            "number",
            "of",
            "paragraph",
            "ascendingly"
        ]
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id",
        "query_toks": [
            "SELECT",
            "document_id",
            ",",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "Paragraphs",
            "GROUP",
            "BY",
            "document_id",
            "ORDER",
            "BY",
            "document_id"
        ],
        "query_toks_no_value": [
            "select",
            "document_id",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "paragraphs",
            "group",
            "by",
            "document_id",
            "order",
            "by",
            "document_id"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    15,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            15,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list document id the total number of paragraph for each document id ordered by the total number of paragraph ascendingly",
        "gold_question": "list document id the total number of paragraph for each document id ordered by document id ascendingly",
        "question_toks": [
            "list",
            "document",
            "id",
            "the",
            "total",
            "number",
            "of",
            "paragraph",
            "for",
            "each",
            "document",
            "id",
            "ordered",
            "by",
            "the",
            "total",
            "number",
            "of",
            "paragraph",
            "ascendingly"
        ]
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2",
        "query_toks": [
            "SELECT",
            "document_id",
            "FROM",
            "Paragraphs",
            "GROUP",
            "BY",
            "document_id",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "document_id",
            "from",
            "paragraphs",
            "group",
            "by",
            "document_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    15,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    5,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list document id of paragraph for each document id that have the total number of paragraph greater than or equal to value",
        "gold_question": "list document id of paragraph for each document id that have the total number of paragraph greater than or equal to value",
        "question_toks": [
            "list",
            "document",
            "id",
            "of",
            "paragraph",
            "for",
            "each",
            "document",
            "id",
            "that",
            "have",
            "the",
            "total",
            "number",
            "of",
            "paragraph",
            "greater",
            "than",
            "or",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2",
        "query_toks": [
            "SELECT",
            "document_id",
            "FROM",
            "Paragraphs",
            "GROUP",
            "BY",
            "document_id",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "document_id",
            "from",
            "paragraphs",
            "group",
            "by",
            "document_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    15,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    5,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list document id of paragraph for each document id that have the total number of paragraph greater than or equal to value",
        "gold_question": "list document id of paragraph for each document id that have the total number of paragraph greater than or equal to value",
        "question_toks": [
            "list",
            "document",
            "id",
            "of",
            "paragraph",
            "for",
            "each",
            "document",
            "id",
            "that",
            "have",
            "the",
            "total",
            "number",
            "of",
            "paragraph",
            "greater",
            "than",
            "or",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T1.document_id",
            ",",
            "T2.document_name",
            "FROM",
            "Paragraphs",
            "AS",
            "T1",
            "JOIN",
            "Documents",
            "AS",
            "T2",
            "ON",
            "T1.document_id",
            "=",
            "T2.document_id",
            "GROUP",
            "BY",
            "T1.document_id",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "document_id",
            ",",
            "t2",
            ".",
            "document_name",
            "from",
            "paragraphs",
            "as",
            "t1",
            "join",
            "documents",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "document_id",
            "=",
            "t2",
            ".",
            "document_id",
            "group",
            "by",
            "t1",
            ".",
            "document_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    15,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of document id of document document name of document for each document id of document ordered by the total number of document descendingly",
        "gold_question": "list top value items of document id of paragraph document name of document for each document id of paragraph ordered by the total number of paragraph descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "document",
            "id",
            "of",
            "document",
            "document",
            "name",
            "of",
            "document",
            "for",
            "each",
            "document",
            "id",
            "of",
            "document",
            "ordered",
            "by",
            "the",
            "total",
            "number",
            "of",
            "document",
            "descendingly"
        ]
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T1.document_id",
            ",",
            "T2.document_name",
            "FROM",
            "Paragraphs",
            "AS",
            "T1",
            "JOIN",
            "Documents",
            "AS",
            "T2",
            "ON",
            "T1.document_id",
            "=",
            "T2.document_id",
            "GROUP",
            "BY",
            "T1.document_id",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "document_id",
            ",",
            "t2",
            ".",
            "document_name",
            "from",
            "paragraphs",
            "as",
            "t1",
            "join",
            "documents",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "document_id",
            "=",
            "t2",
            ".",
            "document_id",
            "group",
            "by",
            "t1",
            ".",
            "document_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    15,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of document id of document document name of document for each document id of document ordered by the total number of document descendingly",
        "gold_question": "list top value items of document id of paragraph document name of document for each document id of paragraph ordered by the total number of paragraph descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "document",
            "id",
            "of",
            "document",
            "document",
            "name",
            "of",
            "document",
            "for",
            "each",
            "document",
            "id",
            "of",
            "document",
            "ordered",
            "by",
            "the",
            "total",
            "number",
            "of",
            "document",
            "descendingly"
        ]
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1",
        "query_toks": [
            "SELECT",
            "document_id",
            "FROM",
            "Paragraphs",
            "GROUP",
            "BY",
            "document_id",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "ASC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "document_id",
            "from",
            "paragraphs",
            "group",
            "by",
            "document_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "asc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    15,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "asc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of document id of paragraph for each document id ordered by the total number of paragraph ascendingly",
        "gold_question": "list top value items of document id of paragraph for each document id ordered by the total number of paragraph ascendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "document",
            "id",
            "of",
            "paragraph",
            "for",
            "each",
            "document",
            "id",
            "ordered",
            "by",
            "the",
            "total",
            "number",
            "of",
            "paragraph",
            "ascendingly"
        ]
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1",
        "query_toks": [
            "SELECT",
            "document_id",
            "FROM",
            "Paragraphs",
            "GROUP",
            "BY",
            "document_id",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "ASC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "document_id",
            "from",
            "paragraphs",
            "group",
            "by",
            "document_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "asc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    15,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "asc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of document id of paragraph for each document id ordered by the total number of paragraph ascendingly",
        "gold_question": "list top value items of document id of paragraph for each document id ordered by the total number of paragraph ascendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "document",
            "id",
            "of",
            "paragraph",
            "for",
            "each",
            "document",
            "id",
            "ordered",
            "by",
            "the",
            "total",
            "number",
            "of",
            "paragraph",
            "ascendingly"
        ]
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2",
        "query_toks": [
            "SELECT",
            "document_id",
            "FROM",
            "Paragraphs",
            "GROUP",
            "BY",
            "document_id",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            "BETWEEN",
            "1",
            "AND",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "document_id",
            "from",
            "paragraphs",
            "group",
            "by",
            "document_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            "between",
            "value",
            "and",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    15,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    1,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    1.0,
                    2.0
                ]
            ],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list document id of paragraph for each document id that have the total number of paragraph is between value and value",
        "gold_question": "list document id of paragraph for each document id that have the total number of paragraph is between value and value",
        "question_toks": [
            "list",
            "document",
            "id",
            "of",
            "paragraph",
            "for",
            "each",
            "document",
            "id",
            "that",
            "have",
            "the",
            "total",
            "number",
            "of",
            "paragraph",
            "is",
            "between",
            "value",
            "and",
            "value"
        ]
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2",
        "query_toks": [
            "SELECT",
            "document_id",
            "FROM",
            "Paragraphs",
            "GROUP",
            "BY",
            "document_id",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            "BETWEEN",
            "1",
            "AND",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "document_id",
            "from",
            "paragraphs",
            "group",
            "by",
            "document_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            "between",
            "value",
            "and",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    15,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    1,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    1.0,
                    2.0
                ]
            ],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list document id of paragraph for each document id that have the total number of paragraph is between value and value",
        "gold_question": "list document id of paragraph for each document id that have the total number of paragraph is between value and value",
        "question_toks": [
            "list",
            "document",
            "id",
            "of",
            "paragraph",
            "for",
            "each",
            "document",
            "id",
            "that",
            "have",
            "the",
            "total",
            "number",
            "of",
            "paragraph",
            "is",
            "between",
            "value",
            "and",
            "value"
        ]
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Brazil' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Ireland'",
        "query_toks": [
            "SELECT",
            "document_id",
            "FROM",
            "Paragraphs",
            "WHERE",
            "paragraph_text",
            "=",
            "'Brazil",
            "'",
            "INTERSECT",
            "SELECT",
            "document_id",
            "FROM",
            "Paragraphs",
            "WHERE",
            "paragraph_text",
            "=",
            "'Ireland",
            "'"
        ],
        "query_toks_no_value": [
            "select",
            "document_id",
            "from",
            "paragraphs",
            "where",
            "paragraph_text",
            "=",
            "value",
            "intersect",
            "select",
            "document_id",
            "from",
            "paragraphs",
            "where",
            "paragraph_text",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": {
                "except": null,
                "from": {
                    "conds": [],
                    "table_units": [
                        [
                            "table_unit",
                            3
                        ]
                    ]
                },
                "groupby": [],
                "having": [],
                "intersect": null,
                "limit": null,
                "orderby": [],
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    15,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "union": null,
                "where": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                16,
                                false
                            ],
                            null
                        ],
                        "\"Ireland\"",
                        null
                    ]
                ]
            },
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            16,
                            false
                        ],
                        null
                    ],
                    "\"Brazil\"",
                    null
                ]
            ]
        },
        "question": "list document id of paragraph with paragraph text equal to value and list document id of paragraph with paragraph text equal to value",
        "gold_question": "list document id of paragraph with paragraph text equal to value and list document id of paragraph with paragraph text equal to value",
        "question_toks": [
            "list",
            "document",
            "id",
            "of",
            "paragraph",
            "with",
            "paragraph",
            "text",
            "equal",
            "to",
            "value",
            "and",
            "list",
            "document",
            "id",
            "of",
            "paragraph",
            "with",
            "paragraph",
            "text",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Brazil' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Ireland'",
        "query_toks": [
            "SELECT",
            "document_id",
            "FROM",
            "Paragraphs",
            "WHERE",
            "paragraph_text",
            "=",
            "'Brazil",
            "'",
            "INTERSECT",
            "SELECT",
            "document_id",
            "FROM",
            "Paragraphs",
            "WHERE",
            "paragraph_text",
            "=",
            "'Ireland",
            "'"
        ],
        "query_toks_no_value": [
            "select",
            "document_id",
            "from",
            "paragraphs",
            "where",
            "paragraph_text",
            "=",
            "value",
            "intersect",
            "select",
            "document_id",
            "from",
            "paragraphs",
            "where",
            "paragraph_text",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": {
                "except": null,
                "from": {
                    "conds": [],
                    "table_units": [
                        [
                            "table_unit",
                            3
                        ]
                    ]
                },
                "groupby": [],
                "having": [],
                "intersect": null,
                "limit": null,
                "orderby": [],
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    15,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "union": null,
                "where": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                16,
                                false
                            ],
                            null
                        ],
                        "\"Ireland\"",
                        null
                    ]
                ]
            },
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            16,
                            false
                        ],
                        null
                    ],
                    "\"Brazil\"",
                    null
                ]
            ]
        },
        "question": "list document id of document with paragraph text of paragraph equal to value and list document id of paragraph with paragraph text equal to value",
        "gold_question": "list document id of paragraph with paragraph text equal to value and list document id of paragraph with paragraph text equal to value",
        "question_toks": [
            "list",
            "document",
            "id",
            "of",
            "document",
            "with",
            "paragraph",
            "text",
            "of",
            "paragraph",
            "equal",
            "to",
            "value",
            "and",
            "list",
            "document",
            "id",
            "of",
            "paragraph",
            "with",
            "paragraph",
            "text",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "course_teach",
        "query": "SELECT count(*) FROM teacher",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "teacher"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "teacher"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list the total number of teacher",
        "gold_question": "list the total number of teacher",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "teacher"
        ]
    },
    {
        "db_id": "course_teach",
        "query": "SELECT count(*) FROM teacher",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "teacher"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "teacher"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list the total number of teacher",
        "gold_question": "list the total number of teacher",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "teacher"
        ]
    },
    {
        "db_id": "course_teach",
        "query": "SELECT Name FROM teacher ORDER BY Age ASC",
        "query_toks": [
            "SELECT",
            "Name",
            "FROM",
            "teacher",
            "ORDER",
            "BY",
            "Age",
            "ASC"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "teacher",
            "order",
            "by",
            "age",
            "asc"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list name of teacher ordered by age ascendingly",
        "gold_question": "list name of teacher ordered by age ascendingly",
        "question_toks": [
            "list",
            "name",
            "of",
            "teacher",
            "ordered",
            "by",
            "age",
            "ascendingly"
        ]
    },
    {
        "db_id": "course_teach",
        "query": "SELECT Name FROM teacher ORDER BY Age ASC",
        "query_toks": [
            "SELECT",
            "Name",
            "FROM",
            "teacher",
            "ORDER",
            "BY",
            "Age",
            "ASC"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "teacher",
            "order",
            "by",
            "age",
            "asc"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list name of teacher ordered by age ascendingly",
        "gold_question": "list name of teacher ordered by age ascendingly",
        "question_toks": [
            "list",
            "name",
            "of",
            "teacher",
            "ordered",
            "by",
            "age",
            "ascendingly"
        ]
    },
    {
        "db_id": "course_teach",
        "query": "SELECT Age ,  Hometown FROM teacher",
        "query_toks": [
            "SELECT",
            "Age",
            ",",
            "Hometown",
            "FROM",
            "teacher"
        ],
        "query_toks_no_value": [
            "select",
            "age",
            ",",
            "hometown",
            "from",
            "teacher"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list age hometown of teacher",
        "gold_question": "list age hometown of teacher",
        "question_toks": [
            "list",
            "age",
            "hometown",
            "of",
            "teacher"
        ]
    },
    {
        "db_id": "course_teach",
        "query": "SELECT Age ,  Hometown FROM teacher",
        "query_toks": [
            "SELECT",
            "Age",
            ",",
            "Hometown",
            "FROM",
            "teacher"
        ],
        "query_toks_no_value": [
            "select",
            "age",
            ",",
            "hometown",
            "from",
            "teacher"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list age hometown of teacher",
        "gold_question": "list age hometown of teacher",
        "question_toks": [
            "list",
            "age",
            "hometown",
            "of",
            "teacher"
        ]
    },
    {
        "db_id": "course_teach",
        "query": "select name from teacher where hometown != \"little lever urban district\"",
        "query_toks": [
            "select",
            "name",
            "from",
            "teacher",
            "where",
            "hometown",
            "!=",
            "\"little lever urban district\""
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "teacher",
            "where",
            "hometown",
            "!",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ],
                    "\"little lever urban district\"",
                    null
                ]
            ]
        },
        "question": "list name of teacher with hometown not equal to value",
        "gold_question": "list name of teacher with hometown not equal to value",
        "question_toks": [
            "list",
            "name",
            "of",
            "teacher",
            "with",
            "hometown",
            "not",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "course_teach",
        "query": "select name from teacher where hometown != \"little lever urban district\"",
        "query_toks": [
            "select",
            "name",
            "from",
            "teacher",
            "where",
            "hometown",
            "!=",
            "\"little lever urban district\""
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "teacher",
            "where",
            "hometown",
            "!",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ],
                    "\"little lever urban district\"",
                    null
                ]
            ]
        },
        "question": "list name of teacher with hometown not equal to value",
        "gold_question": "list name of teacher with hometown not equal to value",
        "question_toks": [
            "list",
            "name",
            "of",
            "teacher",
            "with",
            "hometown",
            "not",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "course_teach",
        "query": "SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33",
        "query_toks": [
            "SELECT",
            "Name",
            "FROM",
            "teacher",
            "WHERE",
            "Age",
            "=",
            "32",
            "OR",
            "Age",
            "=",
            "33"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "teacher",
            "where",
            "age",
            "=",
            "value",
            "or",
            "age",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ],
                    32.0,
                    null
                ],
                "or",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ],
                    33.0,
                    null
                ]
            ]
        },
        "question": "list name of teacher with age equal to value or age equal to value",
        "gold_question": "list name of teacher with age equal to value or age equal to value",
        "question_toks": [
            "list",
            "name",
            "of",
            "teacher",
            "with",
            "age",
            "equal",
            "to",
            "value",
            "or",
            "age",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "course_teach",
        "query": "SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33",
        "query_toks": [
            "SELECT",
            "Name",
            "FROM",
            "teacher",
            "WHERE",
            "Age",
            "=",
            "32",
            "OR",
            "Age",
            "=",
            "33"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "teacher",
            "where",
            "age",
            "=",
            "value",
            "or",
            "age",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ],
                    32.0,
                    null
                ],
                "or",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ],
                    33.0,
                    null
                ]
            ]
        },
        "question": "list name of teacher with age equal to value or age equal to value",
        "gold_question": "list name of teacher with age equal to value or age equal to value",
        "question_toks": [
            "list",
            "name",
            "of",
            "teacher",
            "with",
            "age",
            "equal",
            "to",
            "value",
            "or",
            "age",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "course_teach",
        "query": "SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1",
        "query_toks": [
            "SELECT",
            "Hometown",
            "FROM",
            "teacher",
            "ORDER",
            "BY",
            "Age",
            "ASC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "hometown",
            "from",
            "teacher",
            "order",
            "by",
            "age",
            "asc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of hometown of teacher ordered by age ascendingly",
        "gold_question": "list top value items of hometown of teacher ordered by age ascendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "hometown",
            "of",
            "teacher",
            "ordered",
            "by",
            "age",
            "ascendingly"
        ]
    },
    {
        "db_id": "course_teach",
        "query": "SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1",
        "query_toks": [
            "SELECT",
            "Hometown",
            "FROM",
            "teacher",
            "ORDER",
            "BY",
            "Age",
            "ASC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "hometown",
            "from",
            "teacher",
            "order",
            "by",
            "age",
            "asc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of hometown of teacher ordered by age ascendingly",
        "gold_question": "list top value items of hometown of teacher ordered by age ascendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "hometown",
            "of",
            "teacher",
            "ordered",
            "by",
            "age",
            "ascendingly"
        ]
    },
    {
        "db_id": "course_teach",
        "query": "SELECT Hometown ,  COUNT(*) FROM teacher GROUP BY Hometown",
        "query_toks": [
            "SELECT",
            "Hometown",
            ",",
            "COUNT",
            "(",
            "*",
            ")",
            "FROM",
            "teacher",
            "GROUP",
            "BY",
            "Hometown"
        ],
        "query_toks_no_value": [
            "select",
            "hometown",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "teacher",
            "group",
            "by",
            "hometown"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    7,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list hometown the total number of teacher for each hometown",
        "gold_question": "list hometown the total number of teacher for each hometown",
        "question_toks": [
            "list",
            "hometown",
            "the",
            "total",
            "number",
            "of",
            "teacher",
            "for",
            "each",
            "hometown"
        ]
    },
    {
        "db_id": "course_teach",
        "query": "SELECT Hometown ,  COUNT(*) FROM teacher GROUP BY Hometown",
        "query_toks": [
            "SELECT",
            "Hometown",
            ",",
            "COUNT",
            "(",
            "*",
            ")",
            "FROM",
            "teacher",
            "GROUP",
            "BY",
            "Hometown"
        ],
        "query_toks_no_value": [
            "select",
            "hometown",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "teacher",
            "group",
            "by",
            "hometown"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    7,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list hometown the total number of teacher for each hometown",
        "gold_question": "list hometown the total number of teacher for each hometown",
        "question_toks": [
            "list",
            "hometown",
            "the",
            "total",
            "number",
            "of",
            "teacher",
            "for",
            "each",
            "hometown"
        ]
    },
    {
        "db_id": "course_teach",
        "query": "SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "Hometown",
            "FROM",
            "teacher",
            "GROUP",
            "BY",
            "Hometown",
            "ORDER",
            "BY",
            "COUNT",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "hometown",
            "from",
            "teacher",
            "group",
            "by",
            "hometown",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    7,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of hometown of teacher for each hometown ordered by the total number of teacher descendingly",
        "gold_question": "list top value items of hometown of teacher for each hometown ordered by the total number of teacher descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "hometown",
            "of",
            "teacher",
            "for",
            "each",
            "hometown",
            "ordered",
            "by",
            "the",
            "total",
            "number",
            "of",
            "teacher",
            "descendingly"
        ]
    },
    {
        "db_id": "course_teach",
        "query": "SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "Hometown",
            "FROM",
            "teacher",
            "GROUP",
            "BY",
            "Hometown",
            "ORDER",
            "BY",
            "COUNT",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "hometown",
            "from",
            "teacher",
            "group",
            "by",
            "hometown",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    7,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of hometown of teacher for each hometown ordered by the total number of teacher descendingly",
        "gold_question": "list top value items of hometown of teacher for each hometown ordered by the total number of teacher descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "hometown",
            "of",
            "teacher",
            "for",
            "each",
            "hometown",
            "ordered",
            "by",
            "the",
            "total",
            "number",
            "of",
            "teacher",
            "descendingly"
        ]
    },
    {
        "db_id": "course_teach",
        "query": "SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*)  >=  2",
        "query_toks": [
            "SELECT",
            "Hometown",
            "FROM",
            "teacher",
            "GROUP",
            "BY",
            "Hometown",
            "HAVING",
            "COUNT",
            "(",
            "*",
            ")",
            ">",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "hometown",
            "from",
            "teacher",
            "group",
            "by",
            "hometown",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    7,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    5,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list hometown of teacher for each hometown that have the total number of teacher greater than or equal to value",
        "gold_question": "list hometown of teacher for each hometown that have the total number of teacher greater than or equal to value",
        "question_toks": [
            "list",
            "hometown",
            "of",
            "teacher",
            "for",
            "each",
            "hometown",
            "that",
            "have",
            "the",
            "total",
            "number",
            "of",
            "teacher",
            "greater",
            "than",
            "or",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "course_teach",
        "query": "SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*)  >=  2",
        "query_toks": [
            "SELECT",
            "Hometown",
            "FROM",
            "teacher",
            "GROUP",
            "BY",
            "Hometown",
            "HAVING",
            "COUNT",
            "(",
            "*",
            ")",
            ">",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "hometown",
            "from",
            "teacher",
            "group",
            "by",
            "hometown",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    7,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    5,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list hometown of teacher for each hometown that have the total number of teacher greater than or equal to value",
        "gold_question": "list hometown of teacher for each hometown that have the total number of teacher greater than or equal to value",
        "question_toks": [
            "list",
            "hometown",
            "of",
            "teacher",
            "for",
            "each",
            "hometown",
            "that",
            "have",
            "the",
            "total",
            "number",
            "of",
            "teacher",
            "greater",
            "than",
            "or",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "course_teach",
        "query": "SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID",
        "query_toks": [
            "SELECT",
            "T3.Name",
            ",",
            "T2.Course",
            "FROM",
            "course_arrange",
            "AS",
            "T1",
            "JOIN",
            "course",
            "AS",
            "T2",
            "ON",
            "T1.Course_ID",
            "=",
            "T2.Course_ID",
            "JOIN",
            "teacher",
            "AS",
            "T3",
            "ON",
            "T1.Teacher_ID",
            "=",
            "T3.Teacher_ID"
        ],
        "query_toks_no_value": [
            "select",
            "t3",
            ".",
            "name",
            ",",
            "t2",
            ".",
            "course",
            "from",
            "course_arrange",
            "as",
            "t1",
            "join",
            "course",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "course_id",
            "=",
            "t2",
            ".",
            "course_id",
            "join",
            "teacher",
            "as",
            "t3",
            "on",
            "t1",
            ".",
            "teacher_id",
            "=",
            "t3",
            ".",
            "teacher_id"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list name of teacher course of course",
        "gold_question": "list name of teacher course",
        "question_toks": [
            "list",
            "name",
            "of",
            "teacher",
            "course",
            "of",
            "course"
        ]
    },
    {
        "db_id": "course_teach",
        "query": "SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID",
        "query_toks": [
            "SELECT",
            "T3.Name",
            ",",
            "T2.Course",
            "FROM",
            "course_arrange",
            "AS",
            "T1",
            "JOIN",
            "course",
            "AS",
            "T2",
            "ON",
            "T1.Course_ID",
            "=",
            "T2.Course_ID",
            "JOIN",
            "teacher",
            "AS",
            "T3",
            "ON",
            "T1.Teacher_ID",
            "=",
            "T3.Teacher_ID"
        ],
        "query_toks_no_value": [
            "select",
            "t3",
            ".",
            "name",
            ",",
            "t2",
            ".",
            "course",
            "from",
            "course_arrange",
            "as",
            "t1",
            "join",
            "course",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "course_id",
            "=",
            "t2",
            ".",
            "course_id",
            "join",
            "teacher",
            "as",
            "t3",
            "on",
            "t1",
            ".",
            "teacher_id",
            "=",
            "t3",
            ".",
            "teacher_id"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list name of teacher course of course",
        "gold_question": "list name of teacher course",
        "question_toks": [
            "list",
            "name",
            "of",
            "teacher",
            "course",
            "of",
            "course"
        ]
    },
    {
        "db_id": "course_teach",
        "query": "SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID ORDER BY T3.Name",
        "query_toks": [
            "SELECT",
            "T3.Name",
            ",",
            "T2.Course",
            "FROM",
            "course_arrange",
            "AS",
            "T1",
            "JOIN",
            "course",
            "AS",
            "T2",
            "ON",
            "T1.Course_ID",
            "=",
            "T2.Course_ID",
            "JOIN",
            "teacher",
            "AS",
            "T3",
            "ON",
            "T1.Teacher_ID",
            "=",
            "T3.Teacher_ID",
            "ORDER",
            "BY",
            "T3.Name"
        ],
        "query_toks_no_value": [
            "select",
            "t3",
            ".",
            "name",
            ",",
            "t2",
            ".",
            "course",
            "from",
            "course_arrange",
            "as",
            "t1",
            "join",
            "course",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "course_id",
            "=",
            "t2",
            ".",
            "course_id",
            "join",
            "teacher",
            "as",
            "t3",
            "on",
            "t1",
            ".",
            "teacher_id",
            "=",
            "t3",
            ".",
            "teacher_id",
            "order",
            "by",
            "t3",
            ".",
            "name"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list name of teacher course of course ordered by name of teacher ascendingly",
        "gold_question": "list name of teacher course ordered by name of teacher ascendingly",
        "question_toks": [
            "list",
            "name",
            "of",
            "teacher",
            "course",
            "of",
            "course",
            "ordered",
            "by",
            "name",
            "of",
            "teacher",
            "ascendingly"
        ]
    },
    {
        "db_id": "course_teach",
        "query": "SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID ORDER BY T3.Name",
        "query_toks": [
            "SELECT",
            "T3.Name",
            ",",
            "T2.Course",
            "FROM",
            "course_arrange",
            "AS",
            "T1",
            "JOIN",
            "course",
            "AS",
            "T2",
            "ON",
            "T1.Course_ID",
            "=",
            "T2.Course_ID",
            "JOIN",
            "teacher",
            "AS",
            "T3",
            "ON",
            "T1.Teacher_ID",
            "=",
            "T3.Teacher_ID",
            "ORDER",
            "BY",
            "T3.Name"
        ],
        "query_toks_no_value": [
            "select",
            "t3",
            ".",
            "name",
            ",",
            "t2",
            ".",
            "course",
            "from",
            "course_arrange",
            "as",
            "t1",
            "join",
            "course",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "course_id",
            "=",
            "t2",
            ".",
            "course_id",
            "join",
            "teacher",
            "as",
            "t3",
            "on",
            "t1",
            ".",
            "teacher_id",
            "=",
            "t3",
            ".",
            "teacher_id",
            "order",
            "by",
            "t3",
            ".",
            "name"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list name of teacher course of course ordered by name of teacher ascendingly",
        "gold_question": "list name of teacher course ordered by name of teacher ascendingly",
        "question_toks": [
            "list",
            "name",
            "of",
            "teacher",
            "course",
            "of",
            "course",
            "ordered",
            "by",
            "name",
            "of",
            "teacher",
            "ascendingly"
        ]
    },
    {
        "db_id": "course_teach",
        "query": "SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  \"Math\"",
        "query_toks": [
            "SELECT",
            "T3.Name",
            "FROM",
            "course_arrange",
            "AS",
            "T1",
            "JOIN",
            "course",
            "AS",
            "T2",
            "ON",
            "T1.Course_ID",
            "=",
            "T2.Course_ID",
            "JOIN",
            "teacher",
            "AS",
            "T3",
            "ON",
            "T1.Teacher_ID",
            "=",
            "T3.Teacher_ID",
            "WHERE",
            "T2.Course",
            "=",
            "``",
            "Math",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "t3",
            ".",
            "name",
            "from",
            "course_arrange",
            "as",
            "t1",
            "join",
            "course",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "course_id",
            "=",
            "t2",
            ".",
            "course_id",
            "join",
            "teacher",
            "as",
            "t3",
            "on",
            "t1",
            ".",
            "teacher_id",
            "=",
            "t3",
            ".",
            "teacher_id",
            "where",
            "t2",
            ".",
            "course",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ],
                    "\"Math\"",
                    null
                ]
            ]
        },
        "question": "list name of teacher with course of course equal to value",
        "gold_question": "list name of teacher with course equal to value",
        "question_toks": [
            "list",
            "name",
            "of",
            "teacher",
            "with",
            "course",
            "of",
            "course",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "course_teach",
        "query": "SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  \"Math\"",
        "query_toks": [
            "SELECT",
            "T3.Name",
            "FROM",
            "course_arrange",
            "AS",
            "T1",
            "JOIN",
            "course",
            "AS",
            "T2",
            "ON",
            "T1.Course_ID",
            "=",
            "T2.Course_ID",
            "JOIN",
            "teacher",
            "AS",
            "T3",
            "ON",
            "T1.Teacher_ID",
            "=",
            "T3.Teacher_ID",
            "WHERE",
            "T2.Course",
            "=",
            "``",
            "Math",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "t3",
            ".",
            "name",
            "from",
            "course_arrange",
            "as",
            "t1",
            "join",
            "course",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "course_id",
            "=",
            "t2",
            ".",
            "course_id",
            "join",
            "teacher",
            "as",
            "t3",
            "on",
            "t1",
            ".",
            "teacher_id",
            "=",
            "t3",
            ".",
            "teacher_id",
            "where",
            "t2",
            ".",
            "course",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ],
                    "\"Math\"",
                    null
                ]
            ]
        },
        "question": "list name of teacher with course of course equal to value",
        "gold_question": "list name of teacher with course equal to value",
        "question_toks": [
            "list",
            "name",
            "of",
            "teacher",
            "with",
            "course",
            "of",
            "course",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "course_teach",
        "query": "SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name",
        "query_toks": [
            "SELECT",
            "T2.Name",
            ",",
            "COUNT",
            "(",
            "*",
            ")",
            "FROM",
            "course_arrange",
            "AS",
            "T1",
            "JOIN",
            "teacher",
            "AS",
            "T2",
            "ON",
            "T1.Teacher_ID",
            "=",
            "T2.Teacher_ID",
            "GROUP",
            "BY",
            "T2.Name"
        ],
        "query_toks_no_value": [
            "select",
            "t2",
            ".",
            "name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "course_arrange",
            "as",
            "t1",
            "join",
            "teacher",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "teacher_id",
            "=",
            "t2",
            ".",
            "teacher_id",
            "group",
            "by",
            "t2",
            ".",
            "name"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    5,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list name of course arrange the total number of course arrange for each name of teacher",
        "gold_question": "list name of course arrange the total number of course arrange for each name of teacher",
        "question_toks": [
            "list",
            "name",
            "of",
            "course",
            "arrange",
            "the",
            "total",
            "number",
            "of",
            "course",
            "arrange",
            "for",
            "each",
            "name",
            "of",
            "teacher"
        ]
    },
    {
        "db_id": "course_teach",
        "query": "SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name",
        "query_toks": [
            "SELECT",
            "T2.Name",
            ",",
            "COUNT",
            "(",
            "*",
            ")",
            "FROM",
            "course_arrange",
            "AS",
            "T1",
            "JOIN",
            "teacher",
            "AS",
            "T2",
            "ON",
            "T1.Teacher_ID",
            "=",
            "T2.Teacher_ID",
            "GROUP",
            "BY",
            "T2.Name"
        ],
        "query_toks_no_value": [
            "select",
            "t2",
            ".",
            "name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "course_arrange",
            "as",
            "t1",
            "join",
            "teacher",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "teacher_id",
            "=",
            "t2",
            ".",
            "teacher_id",
            "group",
            "by",
            "t2",
            ".",
            "name"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    5,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list name of course arrange the total number of course arrange for each name of teacher",
        "gold_question": "list name of course arrange the total number of course arrange for each name of teacher",
        "question_toks": [
            "list",
            "name",
            "of",
            "course",
            "arrange",
            "the",
            "total",
            "number",
            "of",
            "course",
            "arrange",
            "for",
            "each",
            "name",
            "of",
            "teacher"
        ]
    },
    {
        "db_id": "course_teach",
        "query": "SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2",
        "query_toks": [
            "SELECT",
            "T2.Name",
            "FROM",
            "course_arrange",
            "AS",
            "T1",
            "JOIN",
            "teacher",
            "AS",
            "T2",
            "ON",
            "T1.Teacher_ID",
            "=",
            "T2.Teacher_ID",
            "GROUP",
            "BY",
            "T2.Name",
            "HAVING",
            "COUNT",
            "(",
            "*",
            ")",
            ">",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "t2",
            ".",
            "name",
            "from",
            "course_arrange",
            "as",
            "t1",
            "join",
            "teacher",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "teacher_id",
            "=",
            "t2",
            ".",
            "teacher_id",
            "group",
            "by",
            "t2",
            ".",
            "name",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    5,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    5,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list name of teacher for each teacher id that have the total number of teacher greater than or equal to value",
        "gold_question": "list name of teacher for each name of teacher that have the total number of teacher greater than or equal to value",
        "question_toks": [
            "list",
            "name",
            "of",
            "teacher",
            "for",
            "each",
            "teacher",
            "id",
            "that",
            "have",
            "the",
            "total",
            "number",
            "of",
            "teacher",
            "greater",
            "than",
            "or",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "course_teach",
        "query": "SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2",
        "query_toks": [
            "SELECT",
            "T2.Name",
            "FROM",
            "course_arrange",
            "AS",
            "T1",
            "JOIN",
            "teacher",
            "AS",
            "T2",
            "ON",
            "T1.Teacher_ID",
            "=",
            "T2.Teacher_ID",
            "GROUP",
            "BY",
            "T2.Name",
            "HAVING",
            "COUNT",
            "(",
            "*",
            ")",
            ">",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "t2",
            ".",
            "name",
            "from",
            "course_arrange",
            "as",
            "t1",
            "join",
            "teacher",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "teacher_id",
            "=",
            "t2",
            ".",
            "teacher_id",
            "group",
            "by",
            "t2",
            ".",
            "name",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    5,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    5,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list name of teacher for each teacher id of course arrange that have the total number of course arrange greater than or equal to value",
        "gold_question": "list name of teacher for each name of teacher that have the total number of teacher greater than or equal to value",
        "question_toks": [
            "list",
            "name",
            "of",
            "teacher",
            "for",
            "each",
            "teacher",
            "id",
            "of",
            "course",
            "arrange",
            "that",
            "have",
            "the",
            "total",
            "number",
            "of",
            "course",
            "arrange",
            "greater",
            "than",
            "or",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "course_teach",
        "query": "SELECT Name FROM teacher WHERE Teacher_id NOT IN (SELECT Teacher_id FROM course_arrange)",
        "query_toks": [
            "SELECT",
            "Name",
            "FROM",
            "teacher",
            "WHERE",
            "Teacher_id",
            "NOT",
            "IN",
            "(",
            "SELECT",
            "Teacher_id",
            "FROM",
            "course_arrange",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "teacher",
            "where",
            "teacher_id",
            "not",
            "in",
            "(",
            "select",
            "teacher_id",
            "from",
            "course_arrange",
            ")"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    true,
                    8,
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    2
                                ]
                            ]
                        },
                        "groupby": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderby": [],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            9,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": []
                    },
                    null
                ]
            ]
        },
        "question": "list name of teacher with teacher id that is not in ( teacher id of course arrange )",
        "gold_question": "list name of teacher with teacher id that is not in ( teacher id of course arrange )",
        "question_toks": [
            "list",
            "name",
            "of",
            "teacher",
            "with",
            "teacher",
            "id",
            "that",
            "is",
            "not",
            "in",
            "(",
            "teacher",
            "id",
            "of",
            "course",
            "arrange",
            ")"
        ]
    },
    {
        "db_id": "course_teach",
        "query": "SELECT Name FROM teacher WHERE Teacher_id NOT IN (SELECT Teacher_id FROM course_arrange)",
        "query_toks": [
            "SELECT",
            "Name",
            "FROM",
            "teacher",
            "WHERE",
            "Teacher_id",
            "NOT",
            "IN",
            "(",
            "SELECT",
            "Teacher_id",
            "FROM",
            "course_arrange",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "teacher",
            "where",
            "teacher_id",
            "not",
            "in",
            "(",
            "select",
            "teacher_id",
            "from",
            "course_arrange",
            ")"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    true,
                    8,
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    2
                                ]
                            ]
                        },
                        "groupby": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderby": [],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            9,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": []
                    },
                    null
                ]
            ]
        },
        "question": "list name of teacher with course id that is not in ( teacher id of course arrange )",
        "gold_question": "list name of teacher with teacher id that is not in ( teacher id of course arrange )",
        "question_toks": [
            "list",
            "name",
            "of",
            "teacher",
            "with",
            "course",
            "id",
            "that",
            "is",
            "not",
            "in",
            "(",
            "teacher",
            "id",
            "of",
            "course",
            "arrange",
            ")"
        ]
    },
    {
        "db_id": "museum_visit",
        "query": "SELECT count(*) FROM visitor WHERE age  <  30",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "visitor",
            "WHERE",
            "age",
            "<",
            "30"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "visitor",
            "where",
            "age",
            "<",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    4,
                    [
                        0,
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ],
                    30.0,
                    null
                ]
            ]
        },
        "question": "list the total number of customer with age less than value",
        "gold_question": "list the total number of customer with age less than value",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "customer",
            "with",
            "age",
            "less",
            "than",
            "value"
        ]
    },
    {
        "db_id": "museum_visit",
        "query": "SELECT name FROM visitor WHERE Level_of_membership  >  4 ORDER BY Level_of_membership DESC",
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "visitor",
            "WHERE",
            "Level_of_membership",
            ">",
            "4",
            "ORDER",
            "BY",
            "Level_of_membership",
            "DESC"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "visitor",
            "where",
            "level_of_membership",
            ">",
            "value",
            "order",
            "by",
            "level_of_membership",
            "desc"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ],
                    4.0,
                    null
                ]
            ]
        },
        "question": "list name of customer with level of membership greater than value ordered by level of membership descendingly",
        "gold_question": "list name of customer with level of membership greater than value ordered by level of membership descendingly",
        "question_toks": [
            "list",
            "name",
            "of",
            "customer",
            "with",
            "level",
            "of",
            "membership",
            "greater",
            "than",
            "value",
            "ordered",
            "by",
            "level",
            "of",
            "membership",
            "descendingly"
        ]
    },
    {
        "db_id": "museum_visit",
        "query": "SELECT avg(age) FROM visitor WHERE Level_of_membership  <=  4",
        "query_toks": [
            "SELECT",
            "avg",
            "(",
            "age",
            ")",
            "FROM",
            "visitor",
            "WHERE",
            "Level_of_membership",
            "<",
            "=",
            "4"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "age",
            ")",
            "from",
            "visitor",
            "where",
            "level_of_membership",
            "<",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    6,
                    [
                        0,
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ],
                    4.0,
                    null
                ]
            ]
        },
        "question": "list the average of age of customer with level of membership greater than or equal to value",
        "gold_question": "list the average of age of customer with level of membership less than or equal to value",
        "question_toks": [
            "list",
            "the",
            "average",
            "of",
            "age",
            "of",
            "customer",
            "with",
            "level",
            "of",
            "membership",
            "greater",
            "than",
            "or",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "museum_visit",
        "query": "SELECT name ,  Level_of_membership FROM visitor WHERE Level_of_membership  >  4 ORDER BY age DESC",
        "query_toks": [
            "SELECT",
            "name",
            ",",
            "Level_of_membership",
            "FROM",
            "visitor",
            "WHERE",
            "Level_of_membership",
            ">",
            "4",
            "ORDER",
            "BY",
            "age",
            "DESC"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "level_of_membership",
            "from",
            "visitor",
            "where",
            "level_of_membership",
            ">",
            "value",
            "order",
            "by",
            "age",
            "desc"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ],
                    4.0,
                    null
                ]
            ]
        },
        "question": "list name level of membership of customer with level of membership greater than value ordered by age descendingly",
        "gold_question": "list name level of membership of customer with level of membership greater than value ordered by age descendingly",
        "question_toks": [
            "list",
            "name",
            "level",
            "of",
            "membership",
            "of",
            "customer",
            "with",
            "level",
            "of",
            "membership",
            "greater",
            "than",
            "value",
            "ordered",
            "by",
            "age",
            "descendingly"
        ]
    },
    {
        "db_id": "museum_visit",
        "query": "SELECT museum_id ,  name FROM museum ORDER BY num_of_staff DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "museum_id",
            ",",
            "name",
            "FROM",
            "museum",
            "ORDER",
            "BY",
            "num_of_staff",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "museum_id",
            ",",
            "name",
            "from",
            "museum",
            "order",
            "by",
            "num_of_staff",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of museum id name of museum ordered by num of staff descendingly",
        "gold_question": "list top value items of museum id name of museum ordered by num of staff descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "museum",
            "id",
            "name",
            "of",
            "museum",
            "ordered",
            "by",
            "num",
            "of",
            "staff",
            "descendingly"
        ]
    },
    {
        "db_id": "museum_visit",
        "query": "SELECT avg(num_of_staff) FROM museum WHERE open_year  <  2009",
        "query_toks": [
            "SELECT",
            "avg",
            "(",
            "num_of_staff",
            ")",
            "FROM",
            "museum",
            "WHERE",
            "open_year",
            "<",
            "2009"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "num_of_staff",
            ")",
            "from",
            "museum",
            "where",
            "open_year",
            "<",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    4,
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ],
                    2009.0,
                    null
                ]
            ]
        },
        "question": "list the average of num of staff of museum with open year less than value",
        "gold_question": "list the average of num of staff of museum with open year less than value",
        "question_toks": [
            "list",
            "the",
            "average",
            "of",
            "num",
            "of",
            "staff",
            "of",
            "museum",
            "with",
            "open",
            "year",
            "less",
            "than",
            "value"
        ]
    },
    {
        "db_id": "museum_visit",
        "query": "SELECT Num_of_Staff ,  Open_Year FROM museum WHERE name  =  'Plaza Museum'",
        "query_toks": [
            "SELECT",
            "Num_of_Staff",
            ",",
            "Open_Year",
            "FROM",
            "museum",
            "WHERE",
            "name",
            "=",
            "'Plaza",
            "Museum",
            "'"
        ],
        "query_toks_no_value": [
            "select",
            "num_of_staff",
            ",",
            "open_year",
            "from",
            "museum",
            "where",
            "name",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"Plaza Museum\"",
                    null
                ]
            ]
        },
        "question": "list open year num of staff of museum with name equal to value",
        "gold_question": "list num of staff open year of museum with name equal to value",
        "question_toks": [
            "list",
            "open",
            "year",
            "num",
            "of",
            "staff",
            "of",
            "museum",
            "with",
            "name",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "museum_visit",
        "query": "SELECT name FROM museum WHERE num_of_staff  >  (SELECT min(num_of_staff) FROM museum WHERE open_year  >  2010)",
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "museum",
            "WHERE",
            "num_of_staff",
            ">",
            "(",
            "SELECT",
            "min",
            "(",
            "num_of_staff",
            ")",
            "FROM",
            "museum",
            "WHERE",
            "open_year",
            ">",
            "2010",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "museum",
            "where",
            "num_of_staff",
            ">",
            "(",
            "select",
            "min",
            "(",
            "num_of_staff",
            ")",
            "from",
            "museum",
            "where",
            "open_year",
            ">",
            "value",
            ")"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    0
                                ]
                            ]
                        },
                        "groupby": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderby": [],
                        "select": [
                            false,
                            [
                                [
                                    2,
                                    [
                                        0,
                                        [
                                            0,
                                            3,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": [
                            [
                                false,
                                3,
                                [
                                    0,
                                    [
                                        0,
                                        4,
                                        false
                                    ],
                                    null
                                ],
                                2010.0,
                                null
                            ]
                        ]
                    },
                    null
                ]
            ]
        },
        "question": "list name of museum with num of staff greater than ( the minimum of num of staff of museum with open year greater than value )",
        "gold_question": "list name of museum with num of staff greater than ( the minimum of num of staff of museum with open year greater than value )",
        "question_toks": [
            "list",
            "name",
            "of",
            "museum",
            "with",
            "num",
            "of",
            "staff",
            "greater",
            "than",
            "(",
            "the",
            "minimum",
            "of",
            "num",
            "of",
            "staff",
            "of",
            "museum",
            "with",
            "open",
            "year",
            "greater",
            "than",
            "value",
            ")"
        ]
    },
    {
        "db_id": "museum_visit",
        "query": "SELECT t1.id ,  t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t1.id HAVING count(*)  >  1",
        "query_toks": [
            "SELECT",
            "t1.id",
            ",",
            "t1.name",
            ",",
            "t1.age",
            "FROM",
            "visitor",
            "AS",
            "t1",
            "JOIN",
            "visit",
            "AS",
            "t2",
            "ON",
            "t1.id",
            "=",
            "t2.visitor_id",
            "GROUP",
            "BY",
            "t1.id",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "id",
            ",",
            "t1",
            ".",
            "name",
            ",",
            "t1",
            ".",
            "age",
            "from",
            "visitor",
            "as",
            "t1",
            "join",
            "visit",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "id",
            "=",
            "t2",
            ".",
            "visitor_id",
            "group",
            "by",
            "t1",
            ".",
            "id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    5,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list customer id of visit name of customer age of customer for each customer id of visit that have the total number of visit greater than value",
        "gold_question": "list customer id name of customer age of customer for each customer id that have the total number of customer greater than value",
        "question_toks": [
            "list",
            "customer",
            "id",
            "of",
            "visit",
            "name",
            "of",
            "customer",
            "age",
            "of",
            "customer",
            "for",
            "each",
            "customer",
            "id",
            "of",
            "visit",
            "that",
            "have",
            "the",
            "total",
            "number",
            "of",
            "visit",
            "greater",
            "than",
            "value"
        ]
    },
    {
        "db_id": "museum_visit",
        "query": "SELECT t2.visitor_id ,  t1.name ,  t1.Level_of_membership FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t2.visitor_id ORDER BY sum(t2.Total_spent) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "t2.visitor_id",
            ",",
            "t1.name",
            ",",
            "t1.Level_of_membership",
            "FROM",
            "visitor",
            "AS",
            "t1",
            "JOIN",
            "visit",
            "AS",
            "t2",
            "ON",
            "t1.id",
            "=",
            "t2.visitor_id",
            "GROUP",
            "BY",
            "t2.visitor_id",
            "ORDER",
            "BY",
            "sum",
            "(",
            "t2.Total_spent",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t2",
            ".",
            "visitor_id",
            ",",
            "t1",
            ".",
            "name",
            ",",
            "t1",
            ".",
            "level_of_membership",
            "from",
            "visitor",
            "as",
            "t1",
            "join",
            "visit",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "id",
            "=",
            "t2",
            ".",
            "visitor_id",
            "group",
            "by",
            "t2",
            ".",
            "visitor_id",
            "order",
            "by",
            "sum",
            "(",
            "t2",
            ".",
            "total_spent",
            ")",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    10,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            4,
                            12,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of customer id of customer name of customer level of membership of customer for each customer id of customer ordered by the sum of total spent of visit descendingly",
        "gold_question": "list top value items of customer id of visit name of customer level of membership of customer for each customer id of visit ordered by the sum of total spent of visit descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "customer",
            "id",
            "of",
            "customer",
            "name",
            "of",
            "customer",
            "level",
            "of",
            "membership",
            "of",
            "customer",
            "for",
            "each",
            "customer",
            "id",
            "of",
            "customer",
            "ordered",
            "by",
            "the",
            "sum",
            "of",
            "total",
            "spent",
            "of",
            "visit",
            "descendingly"
        ]
    },
    {
        "db_id": "museum_visit",
        "query": "SELECT t2.Museum_ID ,  t1.name FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID GROUP BY t2.Museum_ID ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "t2.Museum_ID",
            ",",
            "t1.name",
            "FROM",
            "museum",
            "AS",
            "t1",
            "JOIN",
            "visit",
            "AS",
            "t2",
            "ON",
            "t1.Museum_ID",
            "=",
            "t2.Museum_ID",
            "GROUP",
            "BY",
            "t2.Museum_ID",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t2",
            ".",
            "museum_id",
            ",",
            "t1",
            ".",
            "name",
            "from",
            "museum",
            "as",
            "t1",
            "join",
            "visit",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "museum_id",
            "=",
            "t2",
            ".",
            "museum_id",
            "group",
            "by",
            "t2",
            ".",
            "museum_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    9,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of museum id of museum name of museum for each museum id of visit ordered by the total number of visit descendingly",
        "gold_question": "list top value items of museum id of visit name of museum for each museum id of visit ordered by the total number of visit descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "museum",
            "id",
            "of",
            "museum",
            "name",
            "of",
            "museum",
            "for",
            "each",
            "museum",
            "id",
            "of",
            "visit",
            "ordered",
            "by",
            "the",
            "total",
            "number",
            "of",
            "visit",
            "descendingly"
        ]
    },
    {
        "db_id": "museum_visit",
        "query": "SELECT name FROM museum WHERE Museum_ID NOT IN (SELECT museum_id FROM visit)",
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "museum",
            "WHERE",
            "Museum_ID",
            "NOT",
            "IN",
            "(",
            "SELECT",
            "museum_id",
            "FROM",
            "visit",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "museum",
            "where",
            "museum_id",
            "not",
            "in",
            "(",
            "select",
            "museum_id",
            "from",
            "visit",
            ")"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    true,
                    8,
                    [
                        0,
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    2
                                ]
                            ]
                        },
                        "groupby": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderby": [],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            9,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": []
                    },
                    null
                ]
            ]
        },
        "question": "list name of museum with museum id that is not in ( museum id of visit )",
        "gold_question": "list name of museum with museum id that is not in ( museum id of visit )",
        "question_toks": [
            "list",
            "name",
            "of",
            "museum",
            "with",
            "museum",
            "id",
            "that",
            "is",
            "not",
            "in",
            "(",
            "museum",
            "id",
            "of",
            "visit",
            ")"
        ]
    },
    {
        "db_id": "museum_visit",
        "query": "SELECT t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id ORDER BY t2.num_of_ticket DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "t1.name",
            ",",
            "t1.age",
            "FROM",
            "visitor",
            "AS",
            "t1",
            "JOIN",
            "visit",
            "AS",
            "t2",
            "ON",
            "t1.id",
            "=",
            "t2.visitor_id",
            "ORDER",
            "BY",
            "t2.num_of_ticket",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "name",
            ",",
            "t1",
            ".",
            "age",
            "from",
            "visitor",
            "as",
            "t1",
            "join",
            "visit",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "id",
            "=",
            "t2",
            ".",
            "visitor_id",
            "order",
            "by",
            "t2",
            ".",
            "num_of_ticket",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of name of customer age of customer for each customer id of visit ordered by the total number of visit descendingly",
        "gold_question": "list top value items of name of customer age of customer ordered by num of ticket of visit descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "name",
            "of",
            "customer",
            "age",
            "of",
            "customer",
            "for",
            "each",
            "customer",
            "id",
            "of",
            "visit",
            "ordered",
            "by",
            "the",
            "total",
            "number",
            "of",
            "visit",
            "descendingly"
        ]
    },
    {
        "db_id": "museum_visit",
        "query": "SELECT avg(num_of_ticket) ,  max(num_of_ticket) FROM visit",
        "query_toks": [
            "SELECT",
            "avg",
            "(",
            "num_of_ticket",
            ")",
            ",",
            "max",
            "(",
            "num_of_ticket",
            ")",
            "FROM",
            "visit"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "num_of_ticket",
            ")",
            ",",
            "max",
            "(",
            "num_of_ticket",
            ")",
            "from",
            "visit"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list the average of num of ticket the maximum of num of ticket of visit",
        "gold_question": "list the average of num of ticket the maximum of num of ticket of visit",
        "question_toks": [
            "list",
            "the",
            "average",
            "of",
            "num",
            "of",
            "ticket",
            "the",
            "maximum",
            "of",
            "num",
            "of",
            "ticket",
            "of",
            "visit"
        ]
    },
    {
        "db_id": "museum_visit",
        "query": "SELECT sum(t2.Total_spent) FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id WHERE t1.Level_of_membership  =  1",
        "query_toks": [
            "SELECT",
            "sum",
            "(",
            "t2.Total_spent",
            ")",
            "FROM",
            "visitor",
            "AS",
            "t1",
            "JOIN",
            "visit",
            "AS",
            "t2",
            "ON",
            "t1.id",
            "=",
            "t2.visitor_id",
            "WHERE",
            "t1.Level_of_membership",
            "=",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "sum",
            "(",
            "t2",
            ".",
            "total_spent",
            ")",
            "from",
            "visitor",
            "as",
            "t1",
            "join",
            "visit",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "id",
            "=",
            "t2",
            ".",
            "visitor_id",
            "where",
            "t1",
            ".",
            "level_of_membership",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        4,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ]
        },
        "question": "list the sum of total spent of visit with level of membership of customer equal to value",
        "gold_question": "list the sum of total spent of visit with level of membership of customer equal to value",
        "question_toks": [
            "list",
            "the",
            "sum",
            "of",
            "total",
            "spent",
            "of",
            "visit",
            "with",
            "level",
            "of",
            "membership",
            "of",
            "customer",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "museum_visit",
        "query": "SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  <  2009 INTERSECT SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  >  2011",
        "query_toks": [
            "SELECT",
            "t1.name",
            "FROM",
            "visitor",
            "AS",
            "t1",
            "JOIN",
            "visit",
            "AS",
            "t2",
            "ON",
            "t1.id",
            "=",
            "t2.visitor_id",
            "JOIN",
            "museum",
            "AS",
            "t3",
            "ON",
            "t3.Museum_ID",
            "=",
            "t2.Museum_ID",
            "WHERE",
            "t3.open_year",
            "<",
            "2009",
            "INTERSECT",
            "SELECT",
            "t1.name",
            "FROM",
            "visitor",
            "AS",
            "t1",
            "JOIN",
            "visit",
            "AS",
            "t2",
            "ON",
            "t1.id",
            "=",
            "t2.visitor_id",
            "JOIN",
            "museum",
            "AS",
            "t3",
            "ON",
            "t3.Museum_ID",
            "=",
            "t2.Museum_ID",
            "WHERE",
            "t3.open_year",
            ">",
            "2011"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "name",
            "from",
            "visitor",
            "as",
            "t1",
            "join",
            "visit",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "id",
            "=",
            "t2",
            ".",
            "visitor_id",
            "join",
            "museum",
            "as",
            "t3",
            "on",
            "t3",
            ".",
            "museum_id",
            "=",
            "t2",
            ".",
            "museum_id",
            "where",
            "t3",
            ".",
            "open_year",
            "<",
            "value",
            "intersect",
            "select",
            "t1",
            ".",
            "name",
            "from",
            "visitor",
            "as",
            "t1",
            "join",
            "visit",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "id",
            "=",
            "t2",
            ".",
            "visitor_id",
            "join",
            "museum",
            "as",
            "t3",
            "on",
            "t3",
            ".",
            "museum_id",
            "=",
            "t2",
            ".",
            "museum_id",
            "where",
            "t3",
            ".",
            "open_year",
            ">",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": {
                "except": null,
                "from": {
                    "conds": [
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    5,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ],
                        "and",
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    1,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ],
                    "table_units": [
                        [
                            "table_unit",
                            1
                        ],
                        [
                            "table_unit",
                            2
                        ],
                        [
                            "table_unit",
                            0
                        ]
                    ]
                },
                "groupby": [],
                "having": [],
                "intersect": null,
                "limit": null,
                "orderby": [],
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    6,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "union": null,
                "where": [
                    [
                        false,
                        3,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ],
                        2011.0,
                        null
                    ]
                ]
            },
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    4,
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ],
                    2009.0,
                    null
                ]
            ]
        },
        "question": "list name of customer with open year of museum less than value and list name of customer with open year of museum greater than value",
        "gold_question": "list name of customer with open year of museum less than value and list name of customer with open year of museum greater than value",
        "question_toks": [
            "list",
            "name",
            "of",
            "customer",
            "with",
            "open",
            "year",
            "of",
            "museum",
            "less",
            "than",
            "value",
            "and",
            "list",
            "name",
            "of",
            "customer",
            "with",
            "open",
            "year",
            "of",
            "museum",
            "greater",
            "than",
            "value"
        ]
    },
    {
        "db_id": "museum_visit",
        "query": "SELECT count(*) FROM visitor WHERE id NOT IN (SELECT t2.visitor_id FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID WHERE t1.open_year  >  2010)",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "visitor",
            "WHERE",
            "id",
            "NOT",
            "IN",
            "(",
            "SELECT",
            "t2.visitor_id",
            "FROM",
            "museum",
            "AS",
            "t1",
            "JOIN",
            "visit",
            "AS",
            "t2",
            "ON",
            "t1.Museum_ID",
            "=",
            "t2.Museum_ID",
            "WHERE",
            "t1.open_year",
            ">",
            "2010",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "visitor",
            "where",
            "id",
            "not",
            "in",
            "(",
            "select",
            "t2",
            ".",
            "visitor_id",
            "from",
            "museum",
            "as",
            "t1",
            "join",
            "visit",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "museum_id",
            "=",
            "t2",
            ".",
            "museum_id",
            "where",
            "t1",
            ".",
            "open_year",
            ">",
            "value",
            ")"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    true,
                    8,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [
                                [
                                    false,
                                    2,
                                    [
                                        0,
                                        [
                                            0,
                                            1,
                                            false
                                        ],
                                        null
                                    ],
                                    [
                                        0,
                                        9,
                                        false
                                    ],
                                    null
                                ]
                            ],
                            "table_units": [
                                [
                                    "table_unit",
                                    0
                                ],
                                [
                                    "table_unit",
                                    2
                                ]
                            ]
                        },
                        "groupby": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderby": [],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            10,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": [
                            [
                                false,
                                3,
                                [
                                    0,
                                    [
                                        0,
                                        4,
                                        false
                                    ],
                                    null
                                ],
                                2010.0,
                                null
                            ]
                        ]
                    },
                    null
                ]
            ]
        },
        "question": "list the total number of customer with customer id that is not in ( customer id of visit with open year greater than value )",
        "gold_question": "list the total number of customer with customer id that is not in ( customer id of visit with open year of museum greater than value )",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "customer",
            "with",
            "customer",
            "id",
            "that",
            "is",
            "not",
            "in",
            "(",
            "customer",
            "id",
            "of",
            "visit",
            "with",
            "open",
            "year",
            "greater",
            "than",
            "value",
            ")"
        ]
    },
    {
        "db_id": "museum_visit",
        "query": "SELECT count(*) FROM museum WHERE open_year  >  2013 OR open_year  <  2008",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "museum",
            "WHERE",
            "open_year",
            ">",
            "2013",
            "OR",
            "open_year",
            "<",
            "2008"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "museum",
            "where",
            "open_year",
            ">",
            "value",
            "or",
            "open_year",
            "<",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ],
                    2013.0,
                    null
                ],
                "or",
                [
                    false,
                    4,
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ],
                    2008.0,
                    null
                ]
            ]
        },
        "question": "list the total number of museum with open year greater than value or open year less than value",
        "gold_question": "list the total number of museum with open year greater than value or open year less than value",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "museum",
            "with",
            "open",
            "year",
            "greater",
            "than",
            "value",
            "or",
            "open",
            "year",
            "less",
            "than",
            "value"
        ]
    },
    {
        "db_id": "wta_1",
        "query": "SELECT count(*) FROM players",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "players"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "players"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list the total number of player",
        "gold_question": "list the total number of player",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "player"
        ]
    },
    {
        "db_id": "wta_1",
        "query": "SELECT count(*) FROM players",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "players"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "players"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list the total number of player",
        "gold_question": "list the total number of player",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "player"
        ]
    },
    {
        "db_id": "wta_1",
        "query": "SELECT count(*) FROM matches",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "matches"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "matches"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list the total number of match",
        "gold_question": "list the total number of match",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "match"
        ]
    },
    {
        "db_id": "wta_1",
        "query": "SELECT count(*) FROM matches",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "matches"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "matches"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list the total number of match",
        "gold_question": "list the total number of match",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "match"
        ]
    },
    {
        "db_id": "wta_1",
        "query": "SELECT first_name ,  birth_date FROM players WHERE country_code  =  'USA'",
        "query_toks": [
            "SELECT",
            "first_name",
            ",",
            "birth_date",
            "FROM",
            "players",
            "WHERE",
            "country_code",
            "=",
            "'USA",
            "'"
        ],
        "query_toks_no_value": [
            "select",
            "first_name",
            ",",
            "birth_date",
            "from",
            "players",
            "where",
            "country_code",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ],
                    "\"USA\"",
                    null
                ]
            ]
        },
        "question": "list first name birth date of player with country code equal to value",
        "gold_question": "list first name birth date of player with country code equal to value",
        "question_toks": [
            "list",
            "first",
            "name",
            "birth",
            "date",
            "of",
            "player",
            "with",
            "country",
            "code",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "wta_1",
        "query": "SELECT first_name ,  birth_date FROM players WHERE country_code  =  'USA'",
        "query_toks": [
            "SELECT",
            "first_name",
            ",",
            "birth_date",
            "FROM",
            "players",
            "WHERE",
            "country_code",
            "=",
            "'USA",
            "'"
        ],
        "query_toks_no_value": [
            "select",
            "first_name",
            ",",
            "birth_date",
            "from",
            "players",
            "where",
            "country_code",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ],
                    "\"USA\"",
                    null
                ]
            ]
        },
        "question": "list first name birth date of player with country code equal to value",
        "gold_question": "list first name birth date of player with country code equal to value",
        "question_toks": [
            "list",
            "first",
            "name",
            "birth",
            "date",
            "of",
            "player",
            "with",
            "country",
            "code",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "wta_1",
        "query": "SELECT avg(loser_age) ,  avg(winner_age) FROM matches",
        "query_toks": [
            "SELECT",
            "avg",
            "(",
            "loser_age",
            ")",
            ",",
            "avg",
            "(",
            "winner_age",
            ")",
            "FROM",
            "matches"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "loser_age",
            ")",
            ",",
            "avg",
            "(",
            "winner_age",
            ")",
            "from",
            "matches"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                28,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list the average of loser age the average of winner age of match",
        "gold_question": "list the average of loser age the average of winner age of match",
        "question_toks": [
            "list",
            "the",
            "average",
            "of",
            "loser",
            "age",
            "the",
            "average",
            "of",
            "winner",
            "age",
            "of",
            "match"
        ]
    },
    {
        "db_id": "wta_1",
        "query": "SELECT avg(loser_age) ,  avg(winner_age) FROM matches",
        "query_toks": [
            "SELECT",
            "avg",
            "(",
            "loser_age",
            ")",
            ",",
            "avg",
            "(",
            "winner_age",
            ")",
            "FROM",
            "matches"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "loser_age",
            ")",
            ",",
            "avg",
            "(",
            "winner_age",
            ")",
            "from",
            "matches"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                28,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list the average of loser age the average of winner age of match",
        "gold_question": "list the average of loser age the average of winner age of match",
        "question_toks": [
            "list",
            "the",
            "average",
            "of",
            "loser",
            "age",
            "the",
            "average",
            "of",
            "winner",
            "age",
            "of",
            "match"
        ]
    },
    {
        "db_id": "wta_1",
        "query": "SELECT avg(winner_rank) FROM matches",
        "query_toks": [
            "SELECT",
            "avg",
            "(",
            "winner_rank",
            ")",
            "FROM",
            "matches"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "winner_rank",
            ")",
            "from",
            "matches"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                35,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list the average of winner rank of match",
        "gold_question": "list the average of winner rank of match",
        "question_toks": [
            "list",
            "the",
            "average",
            "of",
            "winner",
            "rank",
            "of",
            "match"
        ]
    },
    {
        "db_id": "wta_1",
        "query": "SELECT avg(winner_rank) FROM matches",
        "query_toks": [
            "SELECT",
            "avg",
            "(",
            "winner_rank",
            ")",
            "FROM",
            "matches"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "winner_rank",
            ")",
            "from",
            "matches"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                35,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list the average of winner rank of match",
        "gold_question": "list the average of winner rank of match",
        "question_toks": [
            "list",
            "the",
            "average",
            "of",
            "winner",
            "rank",
            "of",
            "match"
        ]
    },
    {
        "db_id": "wta_1",
        "query": "SELECT min(loser_rank) FROM matches",
        "query_toks": [
            "SELECT",
            "min",
            "(",
            "loser_rank",
            ")",
            "FROM",
            "matches"
        ],
        "query_toks_no_value": [
            "select",
            "min",
            "(",
            "loser_rank",
            ")",
            "from",
            "matches"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                16,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list the minimum of loser rank of match",
        "gold_question": "list the minimum of loser rank of match",
        "question_toks": [
            "list",
            "the",
            "minimum",
            "of",
            "loser",
            "rank",
            "of",
            "match"
        ]
    },
    {
        "db_id": "wta_1",
        "query": "SELECT min(loser_rank) FROM matches",
        "query_toks": [
            "SELECT",
            "min",
            "(",
            "loser_rank",
            ")",
            "FROM",
            "matches"
        ],
        "query_toks_no_value": [
            "select",
            "min",
            "(",
            "loser_rank",
            ")",
            "from",
            "matches"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                16,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of loser rank of match ordered by loser rank descendingly",
        "gold_question": "list the minimum of loser rank of match",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "loser",
            "rank",
            "of",
            "match",
            "ordered",
            "by",
            "loser",
            "rank",
            "descendingly"
        ]
    },
    {
        "db_id": "wta_1",
        "query": "SELECT count(DISTINCT country_code) FROM players",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "DISTINCT",
            "country_code",
            ")",
            "FROM",
            "players"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "distinct",
            "country_code",
            ")",
            "from",
            "players"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                6,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list the number of country code of player",
        "gold_question": "list the number of country code of player",
        "question_toks": [
            "list",
            "the",
            "number",
            "of",
            "country",
            "code",
            "of",
            "player"
        ]
    },
    {
        "db_id": "wta_1",
        "query": "SELECT count(DISTINCT country_code) FROM players",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "DISTINCT",
            "country_code",
            ")",
            "FROM",
            "players"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "distinct",
            "country_code",
            ")",
            "from",
            "players"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                6,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list the number of country code of player",
        "gold_question": "list the number of country code of player",
        "question_toks": [
            "list",
            "the",
            "number",
            "of",
            "country",
            "code",
            "of",
            "player"
        ]
    },
    {
        "db_id": "wta_1",
        "query": "SELECT count(DISTINCT loser_name) FROM matches",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "DISTINCT",
            "loser_name",
            ")",
            "FROM",
            "matches"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "distinct",
            "loser_name",
            ")",
            "from",
            "matches"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                15,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list the number of loser name of match",
        "gold_question": "list the number of loser name of match",
        "question_toks": [
            "list",
            "the",
            "number",
            "of",
            "loser",
            "name",
            "of",
            "match"
        ]
    },
    {
        "db_id": "wta_1",
        "query": "SELECT count(DISTINCT loser_name) FROM matches",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "DISTINCT",
            "loser_name",
            ")",
            "FROM",
            "matches"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "distinct",
            "loser_name",
            ")",
            "from",
            "matches"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                15,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list the number of loser name of match",
        "gold_question": "list the number of loser name of match",
        "question_toks": [
            "list",
            "the",
            "number",
            "of",
            "loser",
            "name",
            "of",
            "match"
        ]
    },
    {
        "db_id": "wta_1",
        "query": "SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10",
        "query_toks": [
            "SELECT",
            "tourney_name",
            "FROM",
            "matches",
            "GROUP",
            "BY",
            "tourney_name",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "10"
        ],
        "query_toks_no_value": [
            "select",
            "tourney_name",
            "from",
            "matches",
            "group",
            "by",
            "tourney_name",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    27,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    10.0,
                    null
                ]
            ],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                27,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list tourney name of match for each tourney name that have the total number of match greater than value",
        "gold_question": "list tourney name of match for each tourney name that have the total number of match greater than value",
        "question_toks": [
            "list",
            "tourney",
            "name",
            "of",
            "match",
            "for",
            "each",
            "tourney",
            "name",
            "that",
            "have",
            "the",
            "total",
            "number",
            "of",
            "match",
            "greater",
            "than",
            "value"
        ]
    },
    {
        "db_id": "wta_1",
        "query": "SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10",
        "query_toks": [
            "SELECT",
            "tourney_name",
            "FROM",
            "matches",
            "GROUP",
            "BY",
            "tourney_name",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "10"
        ],
        "query_toks_no_value": [
            "select",
            "tourney_name",
            "from",
            "matches",
            "group",
            "by",
            "tourney_name",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    27,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    10.0,
                    null
                ]
            ],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                27,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list tourney name of match for each tourney name that have the total number of match greater than value",
        "gold_question": "list tourney name of match for each tourney name that have the total number of match greater than value",
        "question_toks": [
            "list",
            "tourney",
            "name",
            "of",
            "match",
            "for",
            "each",
            "tourney",
            "name",
            "that",
            "have",
            "the",
            "total",
            "number",
            "of",
            "match",
            "greater",
            "than",
            "value"
        ]
    },
    {
        "db_id": "wta_1",
        "query": "SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016",
        "query_toks": [
            "SELECT",
            "winner_name",
            "FROM",
            "matches",
            "WHERE",
            "YEAR",
            "=",
            "2013",
            "INTERSECT",
            "SELECT",
            "winner_name",
            "FROM",
            "matches",
            "WHERE",
            "YEAR",
            "=",
            "2016"
        ],
        "query_toks_no_value": [
            "select",
            "winner_name",
            "from",
            "matches",
            "where",
            "year",
            "=",
            "value",
            "intersect",
            "select",
            "winner_name",
            "from",
            "matches",
            "where",
            "year",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": {
                "except": null,
                "from": {
                    "conds": [],
                    "table_units": [
                        [
                            "table_unit",
                            1
                        ]
                    ]
                },
                "groupby": [],
                "having": [],
                "intersect": null,
                "limit": null,
                "orderby": [],
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    34,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "union": null,
                "where": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                38,
                                false
                            ],
                            null
                        ],
                        2016.0,
                        null
                    ]
                ]
            },
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                34,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            38,
                            false
                        ],
                        null
                    ],
                    2013.0,
                    null
                ]
            ]
        },
        "question": "list winner name of match with year equal to value and list winner name of match with year equal to value",
        "gold_question": "list winner name of match with year equal to value and list winner name of match with year equal to value",
        "question_toks": [
            "list",
            "winner",
            "name",
            "of",
            "match",
            "with",
            "year",
            "equal",
            "to",
            "value",
            "and",
            "list",
            "winner",
            "name",
            "of",
            "match",
            "with",
            "year",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "wta_1",
        "query": "SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016",
        "query_toks": [
            "SELECT",
            "winner_name",
            "FROM",
            "matches",
            "WHERE",
            "YEAR",
            "=",
            "2013",
            "INTERSECT",
            "SELECT",
            "winner_name",
            "FROM",
            "matches",
            "WHERE",
            "YEAR",
            "=",
            "2016"
        ],
        "query_toks_no_value": [
            "select",
            "winner_name",
            "from",
            "matches",
            "where",
            "year",
            "=",
            "value",
            "intersect",
            "select",
            "winner_name",
            "from",
            "matches",
            "where",
            "year",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": {
                "except": null,
                "from": {
                    "conds": [],
                    "table_units": [
                        [
                            "table_unit",
                            1
                        ]
                    ]
                },
                "groupby": [],
                "having": [],
                "intersect": null,
                "limit": null,
                "orderby": [],
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    34,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "union": null,
                "where": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                38,
                                false
                            ],
                            null
                        ],
                        2016.0,
                        null
                    ]
                ]
            },
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                34,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            38,
                            false
                        ],
                        null
                    ],
                    2013.0,
                    null
                ]
            ]
        },
        "question": "list first name of player last name of player with year of match equal to value and list winner name of match with year of match equal to value",
        "gold_question": "list winner name of match with year equal to value and list winner name of match with year equal to value",
        "question_toks": [
            "list",
            "first",
            "name",
            "of",
            "player",
            "last",
            "name",
            "of",
            "player",
            "with",
            "year",
            "of",
            "match",
            "equal",
            "to",
            "value",
            "and",
            "list",
            "winner",
            "name",
            "of",
            "match",
            "with",
            "year",
            "of",
            "match",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "wta_1",
        "query": "SELECT count(*) FROM matches WHERE YEAR  =  2013 OR YEAR  =  2016",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "matches",
            "WHERE",
            "YEAR",
            "=",
            "2013",
            "OR",
            "YEAR",
            "=",
            "2016"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "matches",
            "where",
            "year",
            "=",
            "value",
            "or",
            "year",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            38,
                            false
                        ],
                        null
                    ],
                    2013.0,
                    null
                ],
                "or",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            38,
                            false
                        ],
                        null
                    ],
                    2016.0,
                    null
                ]
            ]
        },
        "question": "list the total number of match with year equal to value or year equal to value",
        "gold_question": "list the total number of match with year equal to value or year equal to value",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "match",
            "with",
            "year",
            "equal",
            "to",
            "value",
            "or",
            "year",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "wta_1",
        "query": "SELECT count(*) FROM matches WHERE YEAR  =  2013 OR YEAR  =  2016",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "matches",
            "WHERE",
            "YEAR",
            "=",
            "2013",
            "OR",
            "YEAR",
            "=",
            "2016"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "matches",
            "where",
            "year",
            "=",
            "value",
            "or",
            "year",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            38,
                            false
                        ],
                        null
                    ],
                    2013.0,
                    null
                ],
                "or",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            38,
                            false
                        ],
                        null
                    ],
                    2016.0,
                    null
                ]
            ]
        },
        "question": "list the total number of match with year equal to value or year equal to value",
        "gold_question": "list the total number of match with year equal to value or year equal to value",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "match",
            "with",
            "year",
            "equal",
            "to",
            "value",
            "or",
            "year",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "wta_1",
        "query": "SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA Championships' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'Australian Open'",
        "query_toks": [
            "SELECT",
            "T1.country_code",
            ",",
            "T1.first_name",
            "FROM",
            "players",
            "AS",
            "T1",
            "JOIN",
            "matches",
            "AS",
            "T2",
            "ON",
            "T1.player_id",
            "=",
            "T2.winner_id",
            "WHERE",
            "T2.tourney_name",
            "=",
            "'WTA",
            "Championships",
            "'",
            "INTERSECT",
            "SELECT",
            "T1.country_code",
            ",",
            "T1.first_name",
            "FROM",
            "players",
            "AS",
            "T1",
            "JOIN",
            "matches",
            "AS",
            "T2",
            "ON",
            "T1.player_id",
            "=",
            "T2.winner_id",
            "WHERE",
            "T2.tourney_name",
            "=",
            "'Australian",
            "Open",
            "'"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "country_code",
            ",",
            "t1",
            ".",
            "first_name",
            "from",
            "players",
            "as",
            "t1",
            "join",
            "matches",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "player_id",
            "=",
            "t2",
            ".",
            "winner_id",
            "where",
            "t2",
            ".",
            "tourney_name",
            "=",
            "value",
            "intersect",
            "select",
            "t1",
            ".",
            "country_code",
            ",",
            "t1",
            ".",
            "first_name",
            "from",
            "players",
            "as",
            "t1",
            "join",
            "matches",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "player_id",
            "=",
            "t2",
            ".",
            "winner_id",
            "where",
            "t2",
            ".",
            "tourney_name",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            32,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": {
                "except": null,
                "from": {
                    "conds": [
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    1,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                32,
                                false
                            ],
                            null
                        ]
                    ],
                    "table_units": [
                        [
                            "table_unit",
                            0
                        ],
                        [
                            "table_unit",
                            1
                        ]
                    ]
                },
                "groupby": [],
                "having": [],
                "intersect": null,
                "limit": null,
                "orderby": [],
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    6,
                                    false
                                ],
                                null
                            ]
                        ],
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    2,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "union": null,
                "where": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                27,
                                false
                            ],
                            null
                        ],
                        "\"Australian Open\"",
                        null
                    ]
                ]
            },
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            27,
                            false
                        ],
                        null
                    ],
                    "\"WTA Championships\"",
                    null
                ]
            ]
        },
        "question": "list country code of player first name of player with tourney name of match equal to value and list country code of player first name of player with tourney name of match equal to value",
        "gold_question": "list country code of player first name of player with tourney name of match equal to value and list country code of player first name of player with tourney name of match equal to value",
        "question_toks": [
            "list",
            "country",
            "code",
            "of",
            "player",
            "first",
            "name",
            "of",
            "player",
            "with",
            "tourney",
            "name",
            "of",
            "match",
            "equal",
            "to",
            "value",
            "and",
            "list",
            "country",
            "code",
            "of",
            "player",
            "first",
            "name",
            "of",
            "player",
            "with",
            "tourney",
            "name",
            "of",
            "match",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "wta_1",
        "query": "SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA Championships' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'Australian Open'",
        "query_toks": [
            "SELECT",
            "T1.country_code",
            ",",
            "T1.first_name",
            "FROM",
            "players",
            "AS",
            "T1",
            "JOIN",
            "matches",
            "AS",
            "T2",
            "ON",
            "T1.player_id",
            "=",
            "T2.winner_id",
            "WHERE",
            "T2.tourney_name",
            "=",
            "'WTA",
            "Championships",
            "'",
            "INTERSECT",
            "SELECT",
            "T1.country_code",
            ",",
            "T1.first_name",
            "FROM",
            "players",
            "AS",
            "T1",
            "JOIN",
            "matches",
            "AS",
            "T2",
            "ON",
            "T1.player_id",
            "=",
            "T2.winner_id",
            "WHERE",
            "T2.tourney_name",
            "=",
            "'Australian",
            "Open",
            "'"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "country_code",
            ",",
            "t1",
            ".",
            "first_name",
            "from",
            "players",
            "as",
            "t1",
            "join",
            "matches",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "player_id",
            "=",
            "t2",
            ".",
            "winner_id",
            "where",
            "t2",
            ".",
            "tourney_name",
            "=",
            "value",
            "intersect",
            "select",
            "t1",
            ".",
            "country_code",
            ",",
            "t1",
            ".",
            "first_name",
            "from",
            "players",
            "as",
            "t1",
            "join",
            "matches",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "player_id",
            "=",
            "t2",
            ".",
            "winner_id",
            "where",
            "t2",
            ".",
            "tourney_name",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            32,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": {
                "except": null,
                "from": {
                    "conds": [
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    1,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                32,
                                false
                            ],
                            null
                        ]
                    ],
                    "table_units": [
                        [
                            "table_unit",
                            0
                        ],
                        [
                            "table_unit",
                            1
                        ]
                    ]
                },
                "groupby": [],
                "having": [],
                "intersect": null,
                "limit": null,
                "orderby": [],
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    6,
                                    false
                                ],
                                null
                            ]
                        ],
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    2,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "union": null,
                "where": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                27,
                                false
                            ],
                            null
                        ],
                        "\"Australian Open\"",
                        null
                    ]
                ]
            },
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            27,
                            false
                        ],
                        null
                    ],
                    "\"WTA Championships\"",
                    null
                ]
            ]
        },
        "question": "list first name of player country code of player with tourney name of match equal to value and list first name of player country code of player with tourney name of match equal to value",
        "gold_question": "list country code of player first name of player with tourney name of match equal to value and list country code of player first name of player with tourney name of match equal to value",
        "question_toks": [
            "list",
            "first",
            "name",
            "of",
            "player",
            "country",
            "code",
            "of",
            "player",
            "with",
            "tourney",
            "name",
            "of",
            "match",
            "equal",
            "to",
            "value",
            "and",
            "list",
            "first",
            "name",
            "of",
            "player",
            "country",
            "code",
            "of",
            "player",
            "with",
            "tourney",
            "name",
            "of",
            "match",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "wta_1",
        "query": "SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1",
        "query_toks": [
            "SELECT",
            "first_name",
            ",",
            "country_code",
            "FROM",
            "players",
            "ORDER",
            "BY",
            "birth_date",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "first_name",
            ",",
            "country_code",
            "from",
            "players",
            "order",
            "by",
            "birth_date",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of first name country code of player ordered by birth date descendingly",
        "gold_question": "list top value items of first name country code of player ordered by birth date ascendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "first",
            "name",
            "country",
            "code",
            "of",
            "player",
            "ordered",
            "by",
            "birth",
            "date",
            "descendingly"
        ]
    },
    {
        "db_id": "wta_1",
        "query": "SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1",
        "query_toks": [
            "SELECT",
            "first_name",
            ",",
            "country_code",
            "FROM",
            "players",
            "ORDER",
            "BY",
            "birth_date",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "first_name",
            ",",
            "country_code",
            "from",
            "players",
            "order",
            "by",
            "birth_date",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of first name country code of player ordered by birth date descendingly",
        "gold_question": "list top value items of first name country code of player ordered by birth date ascendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "first",
            "name",
            "country",
            "code",
            "of",
            "player",
            "ordered",
            "by",
            "birth",
            "date",
            "descendingly"
        ]
    },
    {
        "db_id": "wta_1",
        "query": "SELECT first_name ,  last_name FROM players ORDER BY birth_date",
        "query_toks": [
            "SELECT",
            "first_name",
            ",",
            "last_name",
            "FROM",
            "players",
            "ORDER",
            "BY",
            "birth_date"
        ],
        "query_toks_no_value": [
            "select",
            "first_name",
            ",",
            "last_name",
            "from",
            "players",
            "order",
            "by",
            "birth_date"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list first name last name of player ordered by birth date ascendingly",
        "gold_question": "list first name last name of player ordered by birth date ascendingly",
        "question_toks": [
            "list",
            "first",
            "name",
            "last",
            "name",
            "of",
            "player",
            "ordered",
            "by",
            "birth",
            "date",
            "ascendingly"
        ]
    },
    {
        "db_id": "wta_1",
        "query": "SELECT first_name ,  last_name FROM players ORDER BY birth_date",
        "query_toks": [
            "SELECT",
            "first_name",
            ",",
            "last_name",
            "FROM",
            "players",
            "ORDER",
            "BY",
            "birth_date"
        ],
        "query_toks_no_value": [
            "select",
            "first_name",
            ",",
            "last_name",
            "from",
            "players",
            "order",
            "by",
            "birth_date"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list first name last name of player ordered by birth date ascendingly",
        "gold_question": "list first name last name of player ordered by birth date ascendingly",
        "question_toks": [
            "list",
            "first",
            "name",
            "last",
            "name",
            "of",
            "player",
            "ordered",
            "by",
            "birth",
            "date",
            "ascendingly"
        ]
    },
    {
        "db_id": "wta_1",
        "query": "SELECT first_name ,  last_name FROM players WHERE hand  =  'L' ORDER BY birth_date",
        "query_toks": [
            "SELECT",
            "first_name",
            ",",
            "last_name",
            "FROM",
            "players",
            "WHERE",
            "hand",
            "=",
            "'L",
            "'",
            "ORDER",
            "BY",
            "birth_date"
        ],
        "query_toks_no_value": [
            "select",
            "first_name",
            ",",
            "last_name",
            "from",
            "players",
            "where",
            "hand",
            "=",
            "value",
            "order",
            "by",
            "birth_date"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ],
                    "\"L\"",
                    null
                ]
            ]
        },
        "question": "list first name last name of player with hand equal to value ordered by birth date ascendingly",
        "gold_question": "list first name last name of player with hand equal to value ordered by birth date ascendingly",
        "question_toks": [
            "list",
            "first",
            "name",
            "last",
            "name",
            "of",
            "player",
            "with",
            "hand",
            "equal",
            "to",
            "value",
            "ordered",
            "by",
            "birth",
            "date",
            "ascendingly"
        ]
    },
    {
        "db_id": "wta_1",
        "query": "SELECT first_name ,  last_name FROM players WHERE hand  =  'L' ORDER BY birth_date",
        "query_toks": [
            "SELECT",
            "first_name",
            ",",
            "last_name",
            "FROM",
            "players",
            "WHERE",
            "hand",
            "=",
            "'L",
            "'",
            "ORDER",
            "BY",
            "birth_date"
        ],
        "query_toks_no_value": [
            "select",
            "first_name",
            ",",
            "last_name",
            "from",
            "players",
            "where",
            "hand",
            "=",
            "value",
            "order",
            "by",
            "birth_date"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ],
                    "\"L\"",
                    null
                ]
            ]
        },
        "question": "list first name last name of player with hand equal to value ordered by birth date ascendingly",
        "gold_question": "list first name last name of player with hand equal to value ordered by birth date ascendingly",
        "question_toks": [
            "list",
            "first",
            "name",
            "last",
            "name",
            "of",
            "player",
            "with",
            "hand",
            "equal",
            "to",
            "value",
            "ordered",
            "by",
            "birth",
            "date",
            "ascendingly"
        ]
    },
    {
        "db_id": "wta_1",
        "query": "SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T1.country_code",
            ",",
            "T1.first_name",
            "FROM",
            "players",
            "AS",
            "T1",
            "JOIN",
            "rankings",
            "AS",
            "T2",
            "ON",
            "T1.player_id",
            "=",
            "T2.player_id",
            "ORDER",
            "BY",
            "T2.tours",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "country_code",
            ",",
            "t1",
            ".",
            "first_name",
            "from",
            "players",
            "as",
            "t1",
            "join",
            "rankings",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "player_id",
            "=",
            "t2",
            ".",
            "player_id",
            "order",
            "by",
            "t2",
            ".",
            "tours",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            41,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            43,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of first name of player country code of player for each player id of rank ordered by the total number of rank descendingly",
        "gold_question": "list top value items of country code of player first name of player ordered by tour of rank descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "first",
            "name",
            "of",
            "player",
            "country",
            "code",
            "of",
            "player",
            "for",
            "each",
            "player",
            "id",
            "of",
            "rank",
            "ordered",
            "by",
            "the",
            "total",
            "number",
            "of",
            "rank",
            "descendingly"
        ]
    },
    {
        "db_id": "wta_1",
        "query": "SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T1.country_code",
            ",",
            "T1.first_name",
            "FROM",
            "players",
            "AS",
            "T1",
            "JOIN",
            "rankings",
            "AS",
            "T2",
            "ON",
            "T1.player_id",
            "=",
            "T2.player_id",
            "ORDER",
            "BY",
            "T2.tours",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "country_code",
            ",",
            "t1",
            ".",
            "first_name",
            "from",
            "players",
            "as",
            "t1",
            "join",
            "rankings",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "player_id",
            "=",
            "t2",
            ".",
            "player_id",
            "order",
            "by",
            "t2",
            ".",
            "tours",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            41,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            43,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of first name of player country code of player for each player id ordered by the total number of player descendingly",
        "gold_question": "list top value items of country code of player first name of player ordered by tour of rank descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "first",
            "name",
            "of",
            "player",
            "country",
            "code",
            "of",
            "player",
            "for",
            "each",
            "player",
            "id",
            "ordered",
            "by",
            "the",
            "total",
            "number",
            "of",
            "player",
            "descendingly"
        ]
    },
    {
        "db_id": "wta_1",
        "query": "SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "YEAR",
            "FROM",
            "matches",
            "GROUP",
            "BY",
            "YEAR",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "year",
            "from",
            "matches",
            "group",
            "by",
            "year",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    38,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                38,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of year of match for each year ordered by the total number of match descendingly",
        "gold_question": "list top value items of year of match for each year ordered by the total number of match descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "year",
            "of",
            "match",
            "for",
            "each",
            "year",
            "ordered",
            "by",
            "the",
            "total",
            "number",
            "of",
            "match",
            "descendingly"
        ]
    },
    {
        "db_id": "wta_1",
        "query": "SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "YEAR",
            "FROM",
            "matches",
            "GROUP",
            "BY",
            "YEAR",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "year",
            "from",
            "matches",
            "group",
            "by",
            "year",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    38,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                38,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of year of match for each year ordered by the total number of match descendingly",
        "gold_question": "list top value items of year of match for each year ordered by the total number of match descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "year",
            "of",
            "match",
            "for",
            "each",
            "year",
            "ordered",
            "by",
            "the",
            "total",
            "number",
            "of",
            "match",
            "descendingly"
        ]
    },
    {
        "db_id": "wta_1",
        "query": "SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "winner_name",
            ",",
            "winner_rank_points",
            "FROM",
            "matches",
            "GROUP",
            "BY",
            "winner_name",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "winner_name",
            ",",
            "winner_rank_points",
            "from",
            "matches",
            "group",
            "by",
            "winner_name",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    34,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                34,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                36,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of winner name winner rank point of match for each winner id ordered by the total number of match descendingly",
        "gold_question": "list top value items of winner name winner rank point of match for each winner name ordered by the total number of match descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "winner",
            "name",
            "winner",
            "rank",
            "point",
            "of",
            "match",
            "for",
            "each",
            "winner",
            "id",
            "ordered",
            "by",
            "the",
            "total",
            "number",
            "of",
            "match",
            "descendingly"
        ]
    },
    {
        "db_id": "wta_1",
        "query": "SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "winner_name",
            ",",
            "winner_rank_points",
            "FROM",
            "matches",
            "GROUP",
            "BY",
            "winner_name",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "winner_name",
            ",",
            "winner_rank_points",
            "from",
            "matches",
            "group",
            "by",
            "winner_name",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    34,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                34,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                36,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of winner name of match winner rank point for each winner name of match ordered by the total number of match descendingly",
        "gold_question": "list top value items of winner name winner rank point of match for each winner name ordered by the total number of match descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "winner",
            "name",
            "of",
            "match",
            "winner",
            "rank",
            "point",
            "for",
            "each",
            "winner",
            "name",
            "of",
            "match",
            "ordered",
            "by",
            "the",
            "total",
            "number",
            "of",
            "match",
            "descendingly"
        ]
    },
    {
        "db_id": "wta_1",
        "query": "SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "winner_name",
            "FROM",
            "matches",
            "WHERE",
            "tourney_name",
            "=",
            "'Australian",
            "Open",
            "'",
            "ORDER",
            "BY",
            "winner_rank_points",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "winner_name",
            "from",
            "matches",
            "where",
            "tourney_name",
            "=",
            "value",
            "order",
            "by",
            "winner_rank_points",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            36,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                34,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            27,
                            false
                        ],
                        null
                    ],
                    "\"Australian Open\"",
                    null
                ]
            ]
        },
        "question": "list top value items of winner name of match with tourney name equal to value ordered by winner rank point descendingly",
        "gold_question": "list top value items of winner name of match with tourney name equal to value ordered by winner rank point descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "winner",
            "name",
            "of",
            "match",
            "with",
            "tourney",
            "name",
            "equal",
            "to",
            "value",
            "ordered",
            "by",
            "winner",
            "rank",
            "point",
            "descendingly"
        ]
    },
    {
        "db_id": "wta_1",
        "query": "SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "winner_name",
            "FROM",
            "matches",
            "WHERE",
            "tourney_name",
            "=",
            "'Australian",
            "Open",
            "'",
            "ORDER",
            "BY",
            "winner_rank_points",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "winner_name",
            "from",
            "matches",
            "where",
            "tourney_name",
            "=",
            "value",
            "order",
            "by",
            "winner_rank_points",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            36,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                34,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            27,
                            false
                        ],
                        null
                    ],
                    "\"Australian Open\"",
                    null
                ]
            ]
        },
        "question": "list top value items of winner name of match with tourney name equal to value ordered by winner rank point descendingly",
        "gold_question": "list top value items of winner name of match with tourney name equal to value ordered by winner rank point descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "winner",
            "name",
            "of",
            "match",
            "with",
            "tourney",
            "name",
            "equal",
            "to",
            "value",
            "ordered",
            "by",
            "winner",
            "rank",
            "point",
            "descendingly"
        ]
    },
    {
        "db_id": "wta_1",
        "query": "SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "winner_name",
            ",",
            "loser_name",
            "FROM",
            "matches",
            "ORDER",
            "BY",
            "minutes",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "winner_name",
            ",",
            "loser_name",
            "from",
            "matches",
            "order",
            "by",
            "minutes",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            20,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                34,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of loser name winner name of match ordered by minute descendingly",
        "gold_question": "list top value items of winner name loser name of match ordered by minute descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "loser",
            "name",
            "winner",
            "name",
            "of",
            "match",
            "ordered",
            "by",
            "minute",
            "descendingly"
        ]
    },
    {
        "db_id": "wta_1",
        "query": "SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "winner_name",
            ",",
            "loser_name",
            "FROM",
            "matches",
            "ORDER",
            "BY",
            "minutes",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "winner_name",
            ",",
            "loser_name",
            "from",
            "matches",
            "order",
            "by",
            "minutes",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            20,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                34,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of winner name loser name of match ordered by minute descendingly",
        "gold_question": "list top value items of winner name loser name of match ordered by minute descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "winner",
            "name",
            "loser",
            "name",
            "of",
            "match",
            "ordered",
            "by",
            "minute",
            "descendingly"
        ]
    },
    {
        "db_id": "wta_1",
        "query": "SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name",
        "query_toks": [
            "SELECT",
            "avg",
            "(",
            "ranking",
            ")",
            ",",
            "T1.first_name",
            "FROM",
            "players",
            "AS",
            "T1",
            "JOIN",
            "rankings",
            "AS",
            "T2",
            "ON",
            "T1.player_id",
            "=",
            "T2.player_id",
            "GROUP",
            "BY",
            "T1.first_name"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "ranking",
            ")",
            ",",
            "t1",
            ".",
            "first_name",
            "from",
            "players",
            "as",
            "t1",
            "join",
            "rankings",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "player_id",
            "=",
            "t2",
            ".",
            "player_id",
            "group",
            "by",
            "t1",
            ".",
            "first_name"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            41,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    2,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                40,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list first name of player the average of rank of rank for each first name of player",
        "gold_question": "list the average of rank of rank first name of player for each first name of player",
        "question_toks": [
            "list",
            "first",
            "name",
            "of",
            "player",
            "the",
            "average",
            "of",
            "rank",
            "of",
            "rank",
            "for",
            "each",
            "first",
            "name",
            "of",
            "player"
        ]
    },
    {
        "db_id": "wta_1",
        "query": "SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name",
        "query_toks": [
            "SELECT",
            "avg",
            "(",
            "ranking",
            ")",
            ",",
            "T1.first_name",
            "FROM",
            "players",
            "AS",
            "T1",
            "JOIN",
            "rankings",
            "AS",
            "T2",
            "ON",
            "T1.player_id",
            "=",
            "T2.player_id",
            "GROUP",
            "BY",
            "T1.first_name"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "ranking",
            ")",
            ",",
            "t1",
            ".",
            "first_name",
            "from",
            "players",
            "as",
            "t1",
            "join",
            "rankings",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "player_id",
            "=",
            "t2",
            ".",
            "player_id",
            "group",
            "by",
            "t1",
            ".",
            "first_name"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            41,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    2,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                40,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list first name of player the average of rank of rank for each first name of player",
        "gold_question": "list the average of rank of rank first name of player for each first name of player",
        "question_toks": [
            "list",
            "first",
            "name",
            "of",
            "player",
            "the",
            "average",
            "of",
            "rank",
            "of",
            "rank",
            "for",
            "each",
            "first",
            "name",
            "of",
            "player"
        ]
    },
    {
        "db_id": "wta_1",
        "query": "SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name",
        "query_toks": [
            "SELECT",
            "sum",
            "(",
            "ranking_points",
            ")",
            ",",
            "T1.first_name",
            "FROM",
            "players",
            "AS",
            "T1",
            "JOIN",
            "rankings",
            "AS",
            "T2",
            "ON",
            "T1.player_id",
            "=",
            "T2.player_id",
            "GROUP",
            "BY",
            "T1.first_name"
        ],
        "query_toks_no_value": [
            "select",
            "sum",
            "(",
            "ranking_points",
            ")",
            ",",
            "t1",
            ".",
            "first_name",
            "from",
            "players",
            "as",
            "t1",
            "join",
            "rankings",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "player_id",
            "=",
            "t2",
            ".",
            "player_id",
            "group",
            "by",
            "t1",
            ".",
            "first_name"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            41,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    2,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        4,
                        [
                            0,
                            [
                                0,
                                42,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list the sum of ranking point of rank first name of player for each first name of player",
        "gold_question": "list the sum of ranking point of rank first name of player for each first name of player",
        "question_toks": [
            "list",
            "the",
            "sum",
            "of",
            "ranking",
            "point",
            "of",
            "rank",
            "first",
            "name",
            "of",
            "player",
            "for",
            "each",
            "first",
            "name",
            "of",
            "player"
        ]
    },
    {
        "db_id": "wta_1",
        "query": "SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name",
        "query_toks": [
            "SELECT",
            "sum",
            "(",
            "ranking_points",
            ")",
            ",",
            "T1.first_name",
            "FROM",
            "players",
            "AS",
            "T1",
            "JOIN",
            "rankings",
            "AS",
            "T2",
            "ON",
            "T1.player_id",
            "=",
            "T2.player_id",
            "GROUP",
            "BY",
            "T1.first_name"
        ],
        "query_toks_no_value": [
            "select",
            "sum",
            "(",
            "ranking_points",
            ")",
            ",",
            "t1",
            ".",
            "first_name",
            "from",
            "players",
            "as",
            "t1",
            "join",
            "rankings",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "player_id",
            "=",
            "t2",
            ".",
            "player_id",
            "group",
            "by",
            "t1",
            ".",
            "first_name"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            41,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    2,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        4,
                        [
                            0,
                            [
                                0,
                                42,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list first name of player the sum of ranking point of rank for each first name of player",
        "gold_question": "list the sum of ranking point of rank first name of player for each first name of player",
        "question_toks": [
            "list",
            "first",
            "name",
            "of",
            "player",
            "the",
            "sum",
            "of",
            "ranking",
            "point",
            "of",
            "rank",
            "for",
            "each",
            "first",
            "name",
            "of",
            "player"
        ]
    },
    {
        "db_id": "wta_1",
        "query": "SELECT count(*) ,  country_code FROM players GROUP BY country_code",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            ",",
            "country_code",
            "FROM",
            "players",
            "GROUP",
            "BY",
            "country_code"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            ",",
            "country_code",
            "from",
            "players",
            "group",
            "by",
            "country_code"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    6,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list the total number of player country code of player for each country code",
        "gold_question": "list the total number of player country code of player for each country code",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "player",
            "country",
            "code",
            "of",
            "player",
            "for",
            "each",
            "country",
            "code"
        ]
    },
    {
        "db_id": "wta_1",
        "query": "SELECT count(*) ,  country_code FROM players GROUP BY country_code",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            ",",
            "country_code",
            "FROM",
            "players",
            "GROUP",
            "BY",
            "country_code"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            ",",
            "country_code",
            "from",
            "players",
            "group",
            "by",
            "country_code"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    6,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list country code the total number of player for each country code",
        "gold_question": "list the total number of player country code of player for each country code",
        "question_toks": [
            "list",
            "country",
            "code",
            "the",
            "total",
            "number",
            "of",
            "player",
            "for",
            "each",
            "country",
            "code"
        ]
    },
    {
        "db_id": "wta_1",
        "query": "SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "country_code",
            "FROM",
            "players",
            "GROUP",
            "BY",
            "country_code",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "country_code",
            "from",
            "players",
            "group",
            "by",
            "country_code",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    6,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of country code of player for each country code ordered by the total number of player descendingly",
        "gold_question": "list top value items of country code of player for each country code ordered by the total number of player descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "country",
            "code",
            "of",
            "player",
            "for",
            "each",
            "country",
            "code",
            "ordered",
            "by",
            "the",
            "total",
            "number",
            "of",
            "player",
            "descendingly"
        ]
    },
    {
        "db_id": "wta_1",
        "query": "SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "country_code",
            "FROM",
            "players",
            "GROUP",
            "BY",
            "country_code",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "country_code",
            "from",
            "players",
            "group",
            "by",
            "country_code",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    6,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of country code of player for each country code ordered by the total number of player descendingly",
        "gold_question": "list top value items of country code of player for each country code ordered by the total number of player descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "country",
            "code",
            "of",
            "player",
            "for",
            "each",
            "country",
            "code",
            "ordered",
            "by",
            "the",
            "total",
            "number",
            "of",
            "player",
            "descendingly"
        ]
    },
    {
        "db_id": "wta_1",
        "query": "SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50",
        "query_toks": [
            "SELECT",
            "country_code",
            "FROM",
            "players",
            "GROUP",
            "BY",
            "country_code",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "50"
        ],
        "query_toks_no_value": [
            "select",
            "country_code",
            "from",
            "players",
            "group",
            "by",
            "country_code",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    6,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    50.0,
                    null
                ]
            ],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list country code of player for each country code that have the total number of player greater than value",
        "gold_question": "list country code of player for each country code that have the total number of player greater than value",
        "question_toks": [
            "list",
            "country",
            "code",
            "of",
            "player",
            "for",
            "each",
            "country",
            "code",
            "that",
            "have",
            "the",
            "total",
            "number",
            "of",
            "player",
            "greater",
            "than",
            "value"
        ]
    },
    {
        "db_id": "wta_1",
        "query": "SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50",
        "query_toks": [
            "SELECT",
            "country_code",
            "FROM",
            "players",
            "GROUP",
            "BY",
            "country_code",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "50"
        ],
        "query_toks_no_value": [
            "select",
            "country_code",
            "from",
            "players",
            "group",
            "by",
            "country_code",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    6,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    50.0,
                    null
                ]
            ],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list country code of player for each country code that have the total number of player greater than value",
        "gold_question": "list country code of player for each country code that have the total number of player greater than value",
        "question_toks": [
            "list",
            "country",
            "code",
            "of",
            "player",
            "for",
            "each",
            "country",
            "code",
            "that",
            "have",
            "the",
            "total",
            "number",
            "of",
            "player",
            "greater",
            "than",
            "value"
        ]
    },
    {
        "db_id": "wta_1",
        "query": "SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date",
        "query_toks": [
            "SELECT",
            "sum",
            "(",
            "tours",
            ")",
            ",",
            "ranking_date",
            "FROM",
            "rankings",
            "GROUP",
            "BY",
            "ranking_date"
        ],
        "query_toks_no_value": [
            "select",
            "sum",
            "(",
            "tours",
            ")",
            ",",
            "ranking_date",
            "from",
            "rankings",
            "group",
            "by",
            "ranking_date"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    39,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        4,
                        [
                            0,
                            [
                                0,
                                43,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                39,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list ranking date the total number of rank for each ranking date",
        "gold_question": "list the sum of tour ranking date of rank for each ranking date",
        "question_toks": [
            "list",
            "ranking",
            "date",
            "the",
            "total",
            "number",
            "of",
            "rank",
            "for",
            "each",
            "ranking",
            "date"
        ]
    },
    {
        "db_id": "wta_1",
        "query": "SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date",
        "query_toks": [
            "SELECT",
            "sum",
            "(",
            "tours",
            ")",
            ",",
            "ranking_date",
            "FROM",
            "rankings",
            "GROUP",
            "BY",
            "ranking_date"
        ],
        "query_toks_no_value": [
            "select",
            "sum",
            "(",
            "tours",
            ")",
            ",",
            "ranking_date",
            "from",
            "rankings",
            "group",
            "by",
            "ranking_date"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    39,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        4,
                        [
                            0,
                            [
                                0,
                                43,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                39,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list ranking date the sum of tour of rank for each ranking date",
        "gold_question": "list the sum of tour ranking date of rank for each ranking date",
        "question_toks": [
            "list",
            "ranking",
            "date",
            "the",
            "sum",
            "of",
            "tour",
            "of",
            "rank",
            "for",
            "each",
            "ranking",
            "date"
        ]
    },
    {
        "db_id": "wta_1",
        "query": "SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            ",",
            "YEAR",
            "FROM",
            "matches",
            "GROUP",
            "BY",
            "YEAR"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            ",",
            "year",
            "from",
            "matches",
            "group",
            "by",
            "year"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    38,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                38,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list the total number of match year of match for each year",
        "gold_question": "list the total number of match year of match for each year",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "match",
            "year",
            "of",
            "match",
            "for",
            "each",
            "year"
        ]
    },
    {
        "db_id": "wta_1",
        "query": "SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            ",",
            "YEAR",
            "FROM",
            "matches",
            "GROUP",
            "BY",
            "YEAR"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            ",",
            "year",
            "from",
            "matches",
            "group",
            "by",
            "year"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    38,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                38,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list the total number of match year of match for each year",
        "gold_question": "list the total number of match year of match for each year",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "match",
            "year",
            "of",
            "match",
            "for",
            "each",
            "year"
        ]
    },
    {
        "db_id": "wta_1",
        "query": "SELECT DISTINCT winner_name ,  winner_rank FROM matches ORDER BY winner_age LIMIT 3",
        "query_toks": [
            "SELECT",
            "DISTINCT",
            "winner_name",
            ",",
            "winner_rank",
            "FROM",
            "matches",
            "ORDER",
            "BY",
            "winner_age",
            "LIMIT",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "winner_name",
            ",",
            "winner_rank",
            "from",
            "matches",
            "order",
            "by",
            "winner_age",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": 3,
            "orderby": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            28,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                34,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                35,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of winner name winner rank of match ordered by winner age ascendingly",
        "gold_question": "list top value items of winner name winner rank of match ordered by winner age ascendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "winner",
            "name",
            "winner",
            "rank",
            "of",
            "match",
            "ordered",
            "by",
            "winner",
            "age",
            "ascendingly"
        ]
    },
    {
        "db_id": "wta_1",
        "query": "SELECT DISTINCT winner_name ,  winner_rank FROM matches ORDER BY winner_age LIMIT 3",
        "query_toks": [
            "SELECT",
            "DISTINCT",
            "winner_name",
            ",",
            "winner_rank",
            "FROM",
            "matches",
            "ORDER",
            "BY",
            "winner_age",
            "LIMIT",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "winner_name",
            ",",
            "winner_rank",
            "from",
            "matches",
            "order",
            "by",
            "winner_age",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": 3,
            "orderby": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            28,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                34,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                35,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of winner name winner rank of match ordered by winner age ascendingly",
        "gold_question": "list top value items of winner name winner rank of match ordered by winner age ascendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "winner",
            "name",
            "winner",
            "rank",
            "of",
            "match",
            "ordered",
            "by",
            "winner",
            "age",
            "ascendingly"
        ]
    },
    {
        "db_id": "wta_1",
        "query": "SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L'",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "DISTINCT",
            "winner_name",
            ")",
            "FROM",
            "matches",
            "WHERE",
            "tourney_name",
            "=",
            "'WTA",
            "Championships",
            "'",
            "AND",
            "winner_hand",
            "=",
            "'L",
            "'"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "distinct",
            "winner_name",
            ")",
            "from",
            "matches",
            "where",
            "tourney_name",
            "=",
            "value",
            "and",
            "winner_hand",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                34,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            27,
                            false
                        ],
                        null
                    ],
                    "\"WTA Championships\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            30,
                            false
                        ],
                        null
                    ],
                    "\"L\"",
                    null
                ]
            ]
        },
        "question": "list the total number of player with winner hand equal to value and winner hand equal to value",
        "gold_question": "list the number of winner name of match with tourney name equal to value and winner hand equal to value",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "player",
            "with",
            "winner",
            "hand",
            "equal",
            "to",
            "value",
            "and",
            "winner",
            "hand",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "wta_1",
        "query": "SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L'",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "DISTINCT",
            "winner_name",
            ")",
            "FROM",
            "matches",
            "WHERE",
            "tourney_name",
            "=",
            "'WTA",
            "Championships",
            "'",
            "AND",
            "winner_hand",
            "=",
            "'L",
            "'"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "distinct",
            "winner_name",
            ")",
            "from",
            "matches",
            "where",
            "tourney_name",
            "=",
            "value",
            "and",
            "winner_hand",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                34,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            27,
                            false
                        ],
                        null
                    ],
                    "\"WTA Championships\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            30,
                            false
                        ],
                        null
                    ],
                    "\"L\"",
                    null
                ]
            ]
        },
        "question": "list the total number of match with winner hand equal to value",
        "gold_question": "list the number of winner name of match with tourney name equal to value and winner hand equal to value",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "match",
            "with",
            "winner",
            "hand",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "wta_1",
        "query": "SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T1.first_name",
            ",",
            "T1.country_code",
            ",",
            "T1.birth_date",
            "FROM",
            "players",
            "AS",
            "T1",
            "JOIN",
            "matches",
            "AS",
            "T2",
            "ON",
            "T1.player_id",
            "=",
            "T2.winner_id",
            "ORDER",
            "BY",
            "T2.winner_rank_points",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "first_name",
            ",",
            "t1",
            ".",
            "country_code",
            ",",
            "t1",
            ".",
            "birth_date",
            "from",
            "players",
            "as",
            "t1",
            "join",
            "matches",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "player_id",
            "=",
            "t2",
            ".",
            "winner_id",
            "order",
            "by",
            "t2",
            ".",
            "winner_rank_points",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            32,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            36,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of first name of player country code of player birth date of player ordered by winner rank point of match descendingly",
        "gold_question": "list top value items of first name of player country code of player birth date of player ordered by winner rank point of match descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "first",
            "name",
            "of",
            "player",
            "country",
            "code",
            "of",
            "player",
            "birth",
            "date",
            "of",
            "player",
            "ordered",
            "by",
            "winner",
            "rank",
            "point",
            "of",
            "match",
            "descendingly"
        ]
    },
    {
        "db_id": "wta_1",
        "query": "SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T1.first_name",
            ",",
            "T1.country_code",
            ",",
            "T1.birth_date",
            "FROM",
            "players",
            "AS",
            "T1",
            "JOIN",
            "matches",
            "AS",
            "T2",
            "ON",
            "T1.player_id",
            "=",
            "T2.winner_id",
            "ORDER",
            "BY",
            "T2.winner_rank_points",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "first_name",
            ",",
            "t1",
            ".",
            "country_code",
            ",",
            "t1",
            ".",
            "birth_date",
            "from",
            "players",
            "as",
            "t1",
            "join",
            "matches",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "player_id",
            "=",
            "t2",
            ".",
            "winner_id",
            "order",
            "by",
            "t2",
            ".",
            "winner_rank_points",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            32,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            36,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of first name of player country code of player birth date of player ordered by winner rank point of match descendingly",
        "gold_question": "list top value items of first name of player country code of player birth date of player ordered by winner rank point of match descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "first",
            "name",
            "of",
            "player",
            "country",
            "code",
            "of",
            "player",
            "birth",
            "date",
            "of",
            "player",
            "ordered",
            "by",
            "winner",
            "rank",
            "point",
            "of",
            "match",
            "descendingly"
        ]
    },
    {
        "db_id": "wta_1",
        "query": "SELECT count(*) ,  hand FROM players GROUP BY hand",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            ",",
            "hand",
            "FROM",
            "players",
            "GROUP",
            "BY",
            "hand"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            ",",
            "hand",
            "from",
            "players",
            "group",
            "by",
            "hand"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    4,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list hand the total number of player for each hand",
        "gold_question": "list the total number of player hand of player for each hand",
        "question_toks": [
            "list",
            "hand",
            "the",
            "total",
            "number",
            "of",
            "player",
            "for",
            "each",
            "hand"
        ]
    },
    {
        "db_id": "wta_1",
        "query": "SELECT count(*) ,  hand FROM players GROUP BY hand",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            ",",
            "hand",
            "FROM",
            "players",
            "GROUP",
            "BY",
            "hand"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            ",",
            "hand",
            "from",
            "players",
            "group",
            "by",
            "hand"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    4,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list hand the total number of player for each hand",
        "gold_question": "list the total number of player hand of player for each hand",
        "question_toks": [
            "list",
            "hand",
            "the",
            "total",
            "number",
            "of",
            "player",
            "for",
            "each",
            "hand"
        ]
    },
    {
        "db_id": "battle_death",
        "query": "SELECT count(*) FROM ship WHERE disposition_of_ship  =  'Captured'",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "ship",
            "WHERE",
            "disposition_of_ship",
            "=",
            "'Captured",
            "'"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "ship",
            "where",
            "disposition_of_ship",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ],
                    "\"Captured\"",
                    null
                ]
            ]
        },
        "question": "list the total number of ship with disposition of ship equal to value",
        "gold_question": "list the total number of ship with disposition of ship equal to value",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "ship",
            "with",
            "disposition",
            "of",
            "ship",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "battle_death",
        "query": "SELECT name ,  tonnage FROM ship ORDER BY name DESC",
        "query_toks": [
            "SELECT",
            "name",
            ",",
            "tonnage",
            "FROM",
            "ship",
            "ORDER",
            "BY",
            "name",
            "DESC"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "tonnage",
            "from",
            "ship",
            "order",
            "by",
            "name",
            "desc"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list name tonnage of ship ordered by name descendingly",
        "gold_question": "list name tonnage of ship ordered by name descendingly",
        "question_toks": [
            "list",
            "name",
            "tonnage",
            "of",
            "ship",
            "ordered",
            "by",
            "name",
            "descendingly"
        ]
    },
    {
        "db_id": "battle_death",
        "query": "SELECT name ,  date FROM battle",
        "query_toks": [
            "SELECT",
            "name",
            ",",
            "date",
            "FROM",
            "battle"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "date",
            "from",
            "battle"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list name date result of battle",
        "gold_question": "list name date of battle",
        "question_toks": [
            "list",
            "name",
            "date",
            "result",
            "of",
            "battle"
        ]
    },
    {
        "db_id": "battle_death",
        "query": "SELECT max(killed) ,  min(killed) FROM death",
        "query_toks": [
            "SELECT",
            "max",
            "(",
            "killed",
            ")",
            ",",
            "min",
            "(",
            "killed",
            ")",
            "FROM",
            "death"
        ],
        "query_toks_no_value": [
            "select",
            "max",
            "(",
            "killed",
            ")",
            ",",
            "min",
            "(",
            "killed",
            ")",
            "from",
            "death"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                17,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                17,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list caused by ship id the maximum of kill the minimum of kill of death for each caused by ship id",
        "gold_question": "list the maximum of kill the minimum of kill of death",
        "question_toks": [
            "list",
            "caused",
            "by",
            "ship",
            "id",
            "the",
            "maximum",
            "of",
            "kill",
            "the",
            "minimum",
            "of",
            "kill",
            "of",
            "death",
            "for",
            "each",
            "caused",
            "by",
            "ship",
            "id"
        ]
    },
    {
        "db_id": "battle_death",
        "query": "SELECT avg(injured) FROM death",
        "query_toks": [
            "SELECT",
            "avg",
            "(",
            "injured",
            ")",
            "FROM",
            "death"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "injured",
            ")",
            "from",
            "death"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                18,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list the average of injure caused by ship id of death for each caused by ship id",
        "gold_question": "list the average of injure of death",
        "question_toks": [
            "list",
            "the",
            "average",
            "of",
            "injure",
            "caused",
            "by",
            "ship",
            "id",
            "of",
            "death",
            "for",
            "each",
            "caused",
            "by",
            "ship",
            "id"
        ]
    },
    {
        "db_id": "battle_death",
        "query": "SELECT T1.killed ,  T1.injured FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id WHERE T2.tonnage  =  't'",
        "query_toks": [
            "SELECT",
            "T1.killed",
            ",",
            "T1.injured",
            "FROM",
            "death",
            "AS",
            "T1",
            "JOIN",
            "ship",
            "AS",
            "t2",
            "ON",
            "T1.caused_by_ship_id",
            "=",
            "T2.id",
            "WHERE",
            "T2.tonnage",
            "=",
            "'t",
            "'"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "killed",
            ",",
            "t1",
            ".",
            "injured",
            "from",
            "death",
            "as",
            "t1",
            "join",
            "ship",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "caused_by_ship_id",
            "=",
            "t2",
            ".",
            "id",
            "where",
            "t2",
            ".",
            "tonnage",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                17,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                18,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    "\"t\"",
                    null
                ]
            ]
        },
        "question": "list kill of death injure of death with tonnage of ship not equal to value",
        "gold_question": "list kill of death injure of death with tonnage of ship equal to value",
        "question_toks": [
            "list",
            "kill",
            "of",
            "death",
            "injure",
            "of",
            "death",
            "with",
            "tonnage",
            "of",
            "ship",
            "not",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "battle_death",
        "query": "SELECT name ,  RESULT FROM battle WHERE bulgarian_commander != 'Boril'",
        "query_toks": [
            "SELECT",
            "name",
            ",",
            "RESULT",
            "FROM",
            "battle",
            "WHERE",
            "bulgarian_commander",
            "!",
            "=",
            "'Boril",
            "'"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "result",
            "from",
            "battle",
            "where",
            "bulgarian_commander",
            "!",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ],
                    "\"Boril\"",
                    null
                ]
            ]
        },
        "question": "list name result of battle with bulgarian commander not equal to value",
        "gold_question": "list name result of battle with bulgarian commander not equal to value",
        "question_toks": [
            "list",
            "name",
            "result",
            "of",
            "battle",
            "with",
            "bulgarian",
            "commander",
            "not",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "battle_death",
        "query": "SELECT DISTINCT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.ship_type  =  'Brig'",
        "query_toks": [
            "SELECT",
            "DISTINCT",
            "T1.id",
            ",",
            "T1.name",
            "FROM",
            "battle",
            "AS",
            "T1",
            "JOIN",
            "ship",
            "AS",
            "T2",
            "ON",
            "T1.id",
            "=",
            "T2.lost_in_battle",
            "WHERE",
            "T2.ship_type",
            "=",
            "'Brig",
            "'"
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "t1",
            ".",
            "id",
            ",",
            "t1",
            ".",
            "name",
            "from",
            "battle",
            "as",
            "t1",
            "join",
            "ship",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "id",
            "=",
            "t2",
            ".",
            "lost_in_battle",
            "where",
            "t2",
            ".",
            "ship_type",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    "\"Brig\"",
                    null
                ]
            ]
        },
        "question": "list id of battle name of battle with id of battle that is not in ( lost in battle of ship with ship type equal to value )",
        "gold_question": "list id of battle name of battle with ship type equal to value",
        "question_toks": [
            "list",
            "id",
            "of",
            "battle",
            "name",
            "of",
            "battle",
            "with",
            "id",
            "of",
            "battle",
            "that",
            "is",
            "not",
            "in",
            "(",
            "lost",
            "in",
            "battle",
            "of",
            "ship",
            "with",
            "ship",
            "type",
            "equal",
            "to",
            "value",
            ")"
        ]
    },
    {
        "db_id": "battle_death",
        "query": "SELECT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle JOIN death AS T3 ON T2.id  =  T3.caused_by_ship_id GROUP BY T1.id HAVING sum(T3.killed)  >  10",
        "query_toks": [
            "SELECT",
            "T1.id",
            ",",
            "T1.name",
            "FROM",
            "battle",
            "AS",
            "T1",
            "JOIN",
            "ship",
            "AS",
            "T2",
            "ON",
            "T1.id",
            "=",
            "T2.lost_in_battle",
            "JOIN",
            "death",
            "AS",
            "T3",
            "ON",
            "T2.id",
            "=",
            "T3.caused_by_ship_id",
            "GROUP",
            "BY",
            "T1.id",
            "HAVING",
            "sum",
            "(",
            "T3.killed",
            ")",
            ">",
            "10"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "id",
            ",",
            "t1",
            ".",
            "name",
            "from",
            "battle",
            "as",
            "t1",
            "join",
            "ship",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "id",
            "=",
            "t2",
            ".",
            "lost_in_battle",
            "join",
            "death",
            "as",
            "t3",
            "on",
            "t2",
            ".",
            "id",
            "=",
            "t3",
            ".",
            "caused_by_ship_id",
            "group",
            "by",
            "t1",
            ".",
            "id",
            "having",
            "sum",
            "(",
            "t3",
            ".",
            "killed",
            ")",
            ">",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            14,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    1,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            4,
                            17,
                            false
                        ],
                        null
                    ],
                    10.0,
                    null
                ]
            ],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list id of battle name of battle for each id of battle that have the sum of kill of death greater than value",
        "gold_question": "list id of battle name of battle for each id of battle that have the sum of kill of death greater than value",
        "question_toks": [
            "list",
            "id",
            "of",
            "battle",
            "name",
            "of",
            "battle",
            "for",
            "each",
            "id",
            "of",
            "battle",
            "that",
            "have",
            "the",
            "sum",
            "of",
            "kill",
            "of",
            "death",
            "greater",
            "than",
            "value"
        ]
    },
    {
        "db_id": "battle_death",
        "query": "SELECT T2.id ,  T2.name FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id GROUP BY T2.id ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T2.id",
            ",",
            "T2.name",
            "FROM",
            "death",
            "AS",
            "T1",
            "JOIN",
            "ship",
            "AS",
            "t2",
            "ON",
            "T1.caused_by_ship_id",
            "=",
            "T2.id",
            "GROUP",
            "BY",
            "T2.id",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t2",
            ".",
            "id",
            ",",
            "t2",
            ".",
            "name",
            "from",
            "death",
            "as",
            "t1",
            "join",
            "ship",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "caused_by_ship_id",
            "=",
            "t2",
            ".",
            "id",
            "group",
            "by",
            "t2",
            ".",
            "id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    8,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of id of ship name of ship for each id of ship ordered by the sum of injure of death descendingly",
        "gold_question": "list top value items of id of ship name of ship for each id of ship ordered by the total number of ship descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "id",
            "of",
            "ship",
            "name",
            "of",
            "ship",
            "for",
            "each",
            "id",
            "of",
            "ship",
            "ordered",
            "by",
            "the",
            "sum",
            "of",
            "injure",
            "of",
            "death",
            "descendingly"
        ]
    },
    {
        "db_id": "battle_death",
        "query": "SELECT name FROM battle WHERE bulgarian_commander  =  'Kaloyan' AND latin_commander  =  'Baldwin I'",
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "battle",
            "WHERE",
            "bulgarian_commander",
            "=",
            "'Kaloyan",
            "'",
            "AND",
            "latin_commander",
            "=",
            "'Baldwin",
            "I",
            "'"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "battle",
            "where",
            "bulgarian_commander",
            "=",
            "value",
            "and",
            "latin_commander",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ],
                    "\"Kaloyan\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "\"Baldwin I\"",
                    null
                ]
            ]
        },
        "question": "list name of battle with bulgarian commander equal to value and latin commander equal to value",
        "gold_question": "list name of battle with bulgarian commander equal to value and latin commander equal to value",
        "question_toks": [
            "list",
            "name",
            "of",
            "battle",
            "with",
            "bulgarian",
            "commander",
            "equal",
            "to",
            "value",
            "and",
            "latin",
            "commander",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "battle_death",
        "query": "SELECT count(DISTINCT RESULT) FROM battle",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "DISTINCT",
            "RESULT",
            ")",
            "FROM",
            "battle"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "distinct",
            "result",
            ")",
            "from",
            "battle"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                6,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list the number of result of battle",
        "gold_question": "list the number of result of battle",
        "question_toks": [
            "list",
            "the",
            "number",
            "of",
            "result",
            "of",
            "battle"
        ]
    },
    {
        "db_id": "battle_death",
        "query": "SELECT count(*) FROM battle WHERE id NOT IN ( SELECT lost_in_battle FROM ship WHERE tonnage  =  '225' );",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "battle",
            "WHERE",
            "id",
            "NOT",
            "IN",
            "(",
            "SELECT",
            "lost_in_battle",
            "FROM",
            "ship",
            "WHERE",
            "tonnage",
            "=",
            "'225",
            "'",
            ")",
            ";"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "battle",
            "where",
            "id",
            "not",
            "in",
            "(",
            "select",
            "lost_in_battle",
            "from",
            "ship",
            "where",
            "tonnage",
            "=",
            "value",
            ")"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    true,
                    8,
                    [
                        0,
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    1
                                ]
                            ]
                        },
                        "groupby": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderby": [],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            7,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": [
                            [
                                false,
                                2,
                                [
                                    0,
                                    [
                                        0,
                                        10,
                                        false
                                    ],
                                    null
                                ],
                                "\"225\"",
                                null
                            ]
                        ]
                    },
                    null
                ]
            ]
        },
        "question": "list the total number of battle with id that is not in ( lost in battle of ship with tonnage equal to value )",
        "gold_question": "list the total number of battle with id that is not in ( lost in battle of ship with tonnage equal to value )",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "battle",
            "with",
            "id",
            "that",
            "is",
            "not",
            "in",
            "(",
            "lost",
            "in",
            "battle",
            "of",
            "ship",
            "with",
            "tonnage",
            "equal",
            "to",
            "value",
            ")"
        ]
    },
    {
        "db_id": "battle_death",
        "query": "SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'Lettice' INTERSECT SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'HMS Atalanta'",
        "query_toks": [
            "SELECT",
            "T1.name",
            ",",
            "T1.date",
            "FROM",
            "battle",
            "AS",
            "T1",
            "JOIN",
            "ship",
            "AS",
            "T2",
            "ON",
            "T1.id",
            "=",
            "T2.lost_in_battle",
            "WHERE",
            "T2.name",
            "=",
            "'Lettice",
            "'",
            "INTERSECT",
            "SELECT",
            "T1.name",
            ",",
            "T1.date",
            "FROM",
            "battle",
            "AS",
            "T1",
            "JOIN",
            "ship",
            "AS",
            "T2",
            "ON",
            "T1.id",
            "=",
            "T2.lost_in_battle",
            "WHERE",
            "T2.name",
            "=",
            "'HMS",
            "Atalanta",
            "'"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "name",
            ",",
            "t1",
            ".",
            "date",
            "from",
            "battle",
            "as",
            "t1",
            "join",
            "ship",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "id",
            "=",
            "t2",
            ".",
            "lost_in_battle",
            "where",
            "t2",
            ".",
            "name",
            "=",
            "value",
            "intersect",
            "select",
            "t1",
            ".",
            "name",
            ",",
            "t1",
            ".",
            "date",
            "from",
            "battle",
            "as",
            "t1",
            "join",
            "ship",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "id",
            "=",
            "t2",
            ".",
            "lost_in_battle",
            "where",
            "t2",
            ".",
            "name",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": {
                "except": null,
                "from": {
                    "conds": [
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    1,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ],
                    "table_units": [
                        [
                            "table_unit",
                            0
                        ],
                        [
                            "table_unit",
                            1
                        ]
                    ]
                },
                "groupby": [],
                "having": [],
                "intersect": null,
                "limit": null,
                "orderby": [],
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    2,
                                    false
                                ],
                                null
                            ]
                        ],
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    3,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "union": null,
                "where": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ],
                        "\"HMS Atalanta\"",
                        null
                    ]
                ]
            },
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ],
                    "\"Lettice\"",
                    null
                ]
            ]
        },
        "question": "list name of battle date of battle with name of ship equal to value and name of ship equal to value",
        "gold_question": "list name of battle date of battle with name of ship equal to value and list name of battle date of battle with name of ship equal to value",
        "question_toks": [
            "list",
            "name",
            "of",
            "battle",
            "date",
            "of",
            "battle",
            "with",
            "name",
            "of",
            "ship",
            "equal",
            "to",
            "value",
            "and",
            "name",
            "of",
            "ship",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "battle_death",
        "query": "SELECT name ,  RESULT ,  bulgarian_commander FROM battle EXCEPT SELECT T1.name ,  T1.result ,  T1.bulgarian_commander FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location  =  'English Channel'",
        "query_toks": [
            "SELECT",
            "name",
            ",",
            "RESULT",
            ",",
            "bulgarian_commander",
            "FROM",
            "battle",
            "EXCEPT",
            "SELECT",
            "T1.name",
            ",",
            "T1.result",
            ",",
            "T1.bulgarian_commander",
            "FROM",
            "battle",
            "AS",
            "T1",
            "JOIN",
            "ship",
            "AS",
            "T2",
            "ON",
            "T1.id",
            "=",
            "T2.lost_in_battle",
            "WHERE",
            "T2.location",
            "=",
            "'English",
            "Channel",
            "'"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "result",
            ",",
            "bulgarian_commander",
            "from",
            "battle",
            "except",
            "select",
            "t1",
            ".",
            "name",
            ",",
            "t1",
            ".",
            "result",
            ",",
            "t1",
            ".",
            "bulgarian_commander",
            "from",
            "battle",
            "as",
            "t1",
            "join",
            "ship",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "id",
            "=",
            "t2",
            ".",
            "lost_in_battle",
            "where",
            "t2",
            ".",
            "location",
            "=",
            "value"
        ],
        "sql": {
            "except": {
                "except": null,
                "from": {
                    "conds": [
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    1,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ],
                    "table_units": [
                        [
                            "table_unit",
                            0
                        ],
                        [
                            "table_unit",
                            1
                        ]
                    ]
                },
                "groupby": [],
                "having": [],
                "intersect": null,
                "limit": null,
                "orderby": [],
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    2,
                                    false
                                ],
                                null
                            ]
                        ],
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    6,
                                    false
                                ],
                                null
                            ]
                        ],
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    4,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "union": null,
                "where": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ],
                        "\"English Channel\"",
                        null
                    ]
                ]
            },
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list name of battle result of battle bulgarian commander of battle except that list name of battle result of battle bulgarian commander of battle with location of ship equal to value",
        "gold_question": "list name of battle result of battle bulgarian commander of battle except that list name of battle result of battle bulgarian commander of battle with location of ship equal to value",
        "question_toks": [
            "list",
            "name",
            "of",
            "battle",
            "result",
            "of",
            "battle",
            "bulgarian",
            "commander",
            "of",
            "battle",
            "except",
            "that",
            "list",
            "name",
            "of",
            "battle",
            "result",
            "of",
            "battle",
            "bulgarian",
            "commander",
            "of",
            "battle",
            "with",
            "location",
            "of",
            "ship",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "battle_death",
        "query": "SELECT note FROM death WHERE note LIKE '%East%'",
        "query_toks": [
            "SELECT",
            "note",
            "FROM",
            "death",
            "WHERE",
            "note",
            "LIKE",
            "'",
            "%",
            "East",
            "%",
            "'"
        ],
        "query_toks_no_value": [
            "select",
            "note",
            "from",
            "death",
            "where",
            "note",
            "like",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                16,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    9,
                    [
                        0,
                        [
                            0,
                            16,
                            false
                        ],
                        null
                    ],
                    "\"%East%\"",
                    null
                ]
            ]
        },
        "question": "list note of death with note formatted as value",
        "gold_question": "list note of death with note formatted as value",
        "question_toks": [
            "list",
            "note",
            "of",
            "death",
            "with",
            "note",
            "formatted",
            "as",
            "value"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT line_1 ,  line_2 FROM addresses",
        "query_toks": [
            "SELECT",
            "line_1",
            ",",
            "line_2",
            "FROM",
            "addresses"
        ],
        "query_toks_no_value": [
            "select",
            "line_1",
            ",",
            "line_2",
            "from",
            "addresses"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list address id line 2 of address",
        "gold_question": "list line 1 line 2 of address",
        "question_toks": [
            "list",
            "address",
            "id",
            "line",
            "2",
            "of",
            "address"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT line_1 ,  line_2 FROM addresses",
        "query_toks": [
            "SELECT",
            "line_1",
            ",",
            "line_2",
            "FROM",
            "addresses"
        ],
        "query_toks_no_value": [
            "select",
            "line_1",
            ",",
            "line_2",
            "from",
            "addresses"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list line 1 line 2 of address",
        "gold_question": "list line 1 line 2 of address",
        "question_toks": [
            "list",
            "line",
            "1",
            "line",
            "2",
            "of",
            "address"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT count(*) FROM Courses",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "Courses"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "courses"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list the total number of course",
        "gold_question": "list the total number of course",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "course"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT count(*) FROM Courses",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "Courses"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "courses"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list the total number of course",
        "gold_question": "list the total number of course",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "course"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT course_description FROM Courses WHERE course_name  =  'math'",
        "query_toks": [
            "SELECT",
            "course_description",
            "FROM",
            "Courses",
            "WHERE",
            "course_name",
            "=",
            "'math",
            "'"
        ],
        "query_toks_no_value": [
            "select",
            "course_description",
            "from",
            "courses",
            "where",
            "course_name",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    "\"math\"",
                    null
                ]
            ]
        },
        "question": "list course description of course with course name equal to value",
        "gold_question": "list course description of course with course name equal to value",
        "question_toks": [
            "list",
            "course",
            "description",
            "of",
            "course",
            "with",
            "course",
            "name",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT course_description FROM Courses WHERE course_name  =  'math'",
        "query_toks": [
            "SELECT",
            "course_description",
            "FROM",
            "Courses",
            "WHERE",
            "course_name",
            "=",
            "'math",
            "'"
        ],
        "query_toks_no_value": [
            "select",
            "course_description",
            "from",
            "courses",
            "where",
            "course_name",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    "\"math\"",
                    null
                ]
            ]
        },
        "question": "list course description of course with course name equal to value",
        "gold_question": "list course description of course with course name equal to value",
        "question_toks": [
            "list",
            "course",
            "description",
            "of",
            "course",
            "with",
            "course",
            "name",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT zip_postcode FROM Addresses WHERE city  =  'Port Chelsea'",
        "query_toks": [
            "SELECT",
            "zip_postcode",
            "FROM",
            "Addresses",
            "WHERE",
            "city",
            "=",
            "'Port",
            "Chelsea",
            "'"
        ],
        "query_toks_no_value": [
            "select",
            "zip_postcode",
            "from",
            "addresses",
            "where",
            "city",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "\"Port Chelsea\"",
                    null
                ]
            ]
        },
        "question": "list zip postcode of address with city equal to value",
        "gold_question": "list zip postcode of address with city equal to value",
        "question_toks": [
            "list",
            "zip",
            "postcode",
            "of",
            "address",
            "with",
            "city",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT zip_postcode FROM Addresses WHERE city  =  'Port Chelsea'",
        "query_toks": [
            "SELECT",
            "zip_postcode",
            "FROM",
            "Addresses",
            "WHERE",
            "city",
            "=",
            "'Port",
            "Chelsea",
            "'"
        ],
        "query_toks_no_value": [
            "select",
            "zip_postcode",
            "from",
            "addresses",
            "where",
            "city",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "\"Port Chelsea\"",
                    null
                ]
            ]
        },
        "question": "list zip postcode of address with city equal to value",
        "gold_question": "list zip postcode of address with city equal to value",
        "question_toks": [
            "list",
            "zip",
            "postcode",
            "of",
            "address",
            "with",
            "city",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT T2.department_name ,  T1.department_id FROM Degree_Programs AS T1 JOIN Departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T2.department_name",
            ",",
            "T1.department_id",
            "FROM",
            "Degree_Programs",
            "AS",
            "T1",
            "JOIN",
            "Departments",
            "AS",
            "T2",
            "ON",
            "T1.department_id",
            "=",
            "T2.department_id",
            "GROUP",
            "BY",
            "T1.department_id",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t2",
            ".",
            "department_name",
            ",",
            "t1",
            ".",
            "department_id",
            "from",
            "degree_programs",
            "as",
            "t1",
            "join",
            "departments",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "department_id",
            "=",
            "t2",
            ".",
            "department_id",
            "group",
            "by",
            "t1",
            ".",
            "department_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                19,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            14,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    19,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                19,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of department name department id of degree program for each department id of degree program ordered by the total number of degree program descendingly",
        "gold_question": "list top value items of department name of department department id of degree program for each department id of degree program ordered by the total number of degree program descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "department",
            "name",
            "department",
            "id",
            "of",
            "degree",
            "program",
            "for",
            "each",
            "department",
            "id",
            "of",
            "degree",
            "program",
            "ordered",
            "by",
            "the",
            "total",
            "number",
            "of",
            "degree",
            "program",
            "descendingly"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "select t2.department_name ,  t1.department_id from degree_programs as t1 join departments as t2 on t1.department_id  =  t2.department_id group by t1.department_id order by count(*) desc limit 1",
        "query_toks": [
            "select",
            "t2.department_name",
            ",",
            "t1.department_id",
            "from",
            "degree_programs",
            "as",
            "t1",
            "join",
            "departments",
            "as",
            "t2",
            "on",
            "t1.department_id",
            "=",
            "t2.department_id",
            "group",
            "by",
            "t1.department_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t2",
            ".",
            "department_name",
            ",",
            "t1",
            ".",
            "department_id",
            "from",
            "degree_programs",
            "as",
            "t1",
            "join",
            "departments",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "department_id",
            "=",
            "t2",
            ".",
            "department_id",
            "group",
            "by",
            "t1",
            ".",
            "department_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                19,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            14,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    19,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                19,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of department name department id of degree program for each department id of degree program ordered by the total number of degree program descendingly",
        "gold_question": "list top value items of department name of department department id of degree program for each department id of degree program ordered by the total number of degree program descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "department",
            "name",
            "department",
            "id",
            "of",
            "degree",
            "program",
            "for",
            "each",
            "department",
            "id",
            "of",
            "degree",
            "program",
            "ordered",
            "by",
            "the",
            "total",
            "number",
            "of",
            "degree",
            "program",
            "descendingly"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT count(DISTINCT department_id) FROM Degree_Programs",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "DISTINCT",
            "department_id",
            ")",
            "FROM",
            "Degree_Programs"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "distinct",
            "department_id",
            ")",
            "from",
            "degree_programs"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                19,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list the number of department id of degree program",
        "gold_question": "list the number of department id of degree program",
        "question_toks": [
            "list",
            "the",
            "number",
            "of",
            "department",
            "id",
            "of",
            "degree",
            "program"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT count(DISTINCT department_id) FROM Degree_Programs",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "DISTINCT",
            "department_id",
            ")",
            "FROM",
            "Degree_Programs"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "distinct",
            "department_id",
            ")",
            "from",
            "degree_programs"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                19,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list the number of department id of degree program",
        "gold_question": "list the number of department id of degree program",
        "question_toks": [
            "list",
            "the",
            "number",
            "of",
            "department",
            "id",
            "of",
            "degree",
            "program"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "DISTINCT",
            "degree_summary_name",
            ")",
            "FROM",
            "Degree_Programs"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "distinct",
            "degree_summary_name",
            ")",
            "from",
            "degree_programs"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                20,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list the number of degree summary name of degree program",
        "gold_question": "list the number of degree summary name of degree program",
        "question_toks": [
            "list",
            "the",
            "number",
            "of",
            "degree",
            "summary",
            "name",
            "of",
            "degree",
            "program"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "DISTINCT",
            "degree_summary_name",
            ")",
            "FROM",
            "Degree_Programs"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "distinct",
            "degree_summary_name",
            ")",
            "from",
            "degree_programs"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                20,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list the number of degree program id of degree program",
        "gold_question": "list the number of degree summary name of degree program",
        "question_toks": [
            "list",
            "the",
            "number",
            "of",
            "degree",
            "program",
            "id",
            "of",
            "degree",
            "program"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  'engineer'",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "Departments",
            "AS",
            "T1",
            "JOIN",
            "Degree_Programs",
            "AS",
            "T2",
            "ON",
            "T1.department_id",
            "=",
            "T2.department_id",
            "WHERE",
            "T1.department_name",
            "=",
            "'engineer",
            "'"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "departments",
            "as",
            "t1",
            "join",
            "degree_programs",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "department_id",
            "=",
            "t2",
            ".",
            "department_id",
            "where",
            "t1",
            ".",
            "department_name",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            19,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            15,
                            false
                        ],
                        null
                    ],
                    "\"engineer\"",
                    null
                ]
            ]
        },
        "question": "list the total number of department with department name equal to value",
        "gold_question": "list the total number of department with department name of department equal to value",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "department",
            "with",
            "department",
            "name",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  'engineer'",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "Departments",
            "AS",
            "T1",
            "JOIN",
            "Degree_Programs",
            "AS",
            "T2",
            "ON",
            "T1.department_id",
            "=",
            "T2.department_id",
            "WHERE",
            "T1.department_name",
            "=",
            "'engineer",
            "'"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "departments",
            "as",
            "t1",
            "join",
            "degree_programs",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "department_id",
            "=",
            "t2",
            ".",
            "department_id",
            "where",
            "t1",
            ".",
            "department_name",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            19,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            15,
                            false
                        ],
                        null
                    ],
                    "\"engineer\"",
                    null
                ]
            ]
        },
        "question": "list the total number of department with department name equal to value",
        "gold_question": "list the total number of department with department name of department equal to value",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "department",
            "with",
            "department",
            "name",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT section_name ,  section_description FROM Sections",
        "query_toks": [
            "SELECT",
            "section_name",
            ",",
            "section_description",
            "FROM",
            "Sections"
        ],
        "query_toks_no_value": [
            "select",
            "section_name",
            ",",
            "section_description",
            "from",
            "sections"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                25,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                26,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list section name section description of section",
        "gold_question": "list section name section description of section",
        "question_toks": [
            "list",
            "section",
            "name",
            "section",
            "description",
            "of",
            "section"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT section_name ,  section_description FROM Sections",
        "query_toks": [
            "SELECT",
            "section_name",
            ",",
            "section_description",
            "FROM",
            "Sections"
        ],
        "query_toks_no_value": [
            "select",
            "section_name",
            ",",
            "section_description",
            "from",
            "sections"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                25,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                26,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list section name section description of section",
        "gold_question": "list section name section description of section",
        "question_toks": [
            "list",
            "section",
            "name",
            "section",
            "description",
            "of",
            "section"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2",
        "query_toks": [
            "SELECT",
            "T1.course_name",
            ",",
            "T1.course_id",
            "FROM",
            "Courses",
            "AS",
            "T1",
            "JOIN",
            "Sections",
            "AS",
            "T2",
            "ON",
            "T1.course_id",
            "=",
            "T2.course_id",
            "GROUP",
            "BY",
            "T1.course_id",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            "<",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "course_name",
            ",",
            "t1",
            ".",
            "course_id",
            "from",
            "courses",
            "as",
            "t1",
            "join",
            "sections",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "course_id",
            "=",
            "t2",
            ".",
            "course_id",
            "group",
            "by",
            "t1",
            ".",
            "course_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            "<",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            24,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    10,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    6,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list course name of course course id of section for each course id of section that have the total number of section less than or equal to value",
        "gold_question": "list course name of course course id of course for each course id of course that have the total number of course less than or equal to value",
        "question_toks": [
            "list",
            "course",
            "name",
            "of",
            "course",
            "course",
            "id",
            "of",
            "section",
            "for",
            "each",
            "course",
            "id",
            "of",
            "section",
            "that",
            "have",
            "the",
            "total",
            "number",
            "of",
            "section",
            "less",
            "than",
            "or",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2",
        "query_toks": [
            "SELECT",
            "T1.course_name",
            ",",
            "T1.course_id",
            "FROM",
            "Courses",
            "AS",
            "T1",
            "JOIN",
            "Sections",
            "AS",
            "T2",
            "ON",
            "T1.course_id",
            "=",
            "T2.course_id",
            "GROUP",
            "BY",
            "T1.course_id",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            "<",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "course_name",
            ",",
            "t1",
            ".",
            "course_id",
            "from",
            "courses",
            "as",
            "t1",
            "join",
            "sections",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "course_id",
            "=",
            "t2",
            ".",
            "course_id",
            "group",
            "by",
            "t1",
            ".",
            "course_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            "<",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            24,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    10,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    6,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list course name of course course id of section for each course id of section that have the total number of section less than value",
        "gold_question": "list course name of course course id of course for each course id of course that have the total number of course less than or equal to value",
        "question_toks": [
            "list",
            "course",
            "name",
            "of",
            "course",
            "course",
            "id",
            "of",
            "section",
            "for",
            "each",
            "course",
            "id",
            "of",
            "section",
            "that",
            "have",
            "the",
            "total",
            "number",
            "of",
            "section",
            "less",
            "than",
            "value"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT section_name FROM Sections ORDER BY section_name DESC",
        "query_toks": [
            "SELECT",
            "section_name",
            "FROM",
            "Sections",
            "ORDER",
            "BY",
            "section_name",
            "DESC"
        ],
        "query_toks_no_value": [
            "select",
            "section_name",
            "from",
            "sections",
            "order",
            "by",
            "section_name",
            "desc"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            25,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                25,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list section name of section ordered by section name descendingly",
        "gold_question": "list section name of section ordered by section name descendingly",
        "question_toks": [
            "list",
            "section",
            "name",
            "of",
            "section",
            "ordered",
            "by",
            "section",
            "name",
            "descendingly"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT section_name FROM Sections ORDER BY section_name DESC",
        "query_toks": [
            "SELECT",
            "section_name",
            "FROM",
            "Sections",
            "ORDER",
            "BY",
            "section_name",
            "DESC"
        ],
        "query_toks_no_value": [
            "select",
            "section_name",
            "from",
            "sections",
            "order",
            "by",
            "section_name",
            "desc"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            25,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                25,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list section name of section ordered by section name descendingly",
        "gold_question": "list section name of section ordered by section name descendingly",
        "question_toks": [
            "list",
            "section",
            "name",
            "of",
            "section",
            "ordered",
            "by",
            "section",
            "name",
            "descendingly"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T1.semester_name",
            ",",
            "T1.semester_id",
            "FROM",
            "Semesters",
            "AS",
            "T1",
            "JOIN",
            "Student_Enrolment",
            "AS",
            "T2",
            "ON",
            "T1.semester_id",
            "=",
            "T2.semester_id",
            "GROUP",
            "BY",
            "T1.semester_id",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "semester_name",
            ",",
            "t1",
            ".",
            "semester_id",
            "from",
            "semesters",
            "as",
            "t1",
            "join",
            "student_enrolment",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "semester_id",
            "=",
            "t2",
            ".",
            "semester_id",
            "group",
            "by",
            "t1",
            ".",
            "semester_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                28,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            46,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        5
                    ],
                    [
                        "table_unit",
                        7
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    28,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                29,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                28,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of semester name of semester semester id of student enrolment for each semester id of student enrolment ordered by the total number of student enrolment descendingly",
        "gold_question": "list top value items of semester name of semester semester id of semester for each semester id of semester ordered by the total number of semester descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "semester",
            "name",
            "of",
            "semester",
            "semester",
            "id",
            "of",
            "student",
            "enrolment",
            "for",
            "each",
            "semester",
            "id",
            "of",
            "student",
            "enrolment",
            "ordered",
            "by",
            "the",
            "total",
            "number",
            "of",
            "student",
            "enrolment",
            "descendingly"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T1.semester_name",
            ",",
            "T1.semester_id",
            "FROM",
            "Semesters",
            "AS",
            "T1",
            "JOIN",
            "Student_Enrolment",
            "AS",
            "T2",
            "ON",
            "T1.semester_id",
            "=",
            "T2.semester_id",
            "GROUP",
            "BY",
            "T1.semester_id",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "semester_name",
            ",",
            "t1",
            ".",
            "semester_id",
            "from",
            "semesters",
            "as",
            "t1",
            "join",
            "student_enrolment",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "semester_id",
            "=",
            "t2",
            ".",
            "semester_id",
            "group",
            "by",
            "t1",
            ".",
            "semester_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                28,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            46,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        5
                    ],
                    [
                        "table_unit",
                        7
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    28,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                29,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                28,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of semester name of semester semester id of student enrolment for each semester id of student enrolment ordered by the total number of student enrolment descendingly",
        "gold_question": "list top value items of semester name of semester semester id of semester for each semester id of semester ordered by the total number of semester descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "semester",
            "name",
            "of",
            "semester",
            "semester",
            "id",
            "of",
            "student",
            "enrolment",
            "for",
            "each",
            "semester",
            "id",
            "of",
            "student",
            "enrolment",
            "ordered",
            "by",
            "the",
            "total",
            "number",
            "of",
            "student",
            "enrolment",
            "descendingly"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'",
        "query_toks": [
            "SELECT",
            "department_description",
            "FROM",
            "Departments",
            "WHERE",
            "department_name",
            "LIKE",
            "'",
            "%",
            "computer",
            "%",
            "'"
        ],
        "query_toks_no_value": [
            "select",
            "department_description",
            "from",
            "departments",
            "where",
            "department_name",
            "like",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                16,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    9,
                    [
                        0,
                        [
                            0,
                            15,
                            false
                        ],
                        null
                    ],
                    "\"%computer%\"",
                    null
                ]
            ]
        },
        "question": "list department description of department with department name formatted as value",
        "gold_question": "list department description of department with department name formatted as value",
        "question_toks": [
            "list",
            "department",
            "description",
            "of",
            "department",
            "with",
            "department",
            "name",
            "formatted",
            "as",
            "value"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'",
        "query_toks": [
            "SELECT",
            "department_description",
            "FROM",
            "Departments",
            "WHERE",
            "department_name",
            "LIKE",
            "'",
            "%",
            "computer",
            "%",
            "'"
        ],
        "query_toks_no_value": [
            "select",
            "department_description",
            "from",
            "departments",
            "where",
            "department_name",
            "like",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                16,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    9,
                    [
                        0,
                        [
                            0,
                            15,
                            false
                        ],
                        null
                    ],
                    "\"%computer%\"",
                    null
                ]
            ]
        },
        "question": "list department description of department with department name formatted as value",
        "gold_question": "list department description of department with department name formatted as value",
        "question_toks": [
            "list",
            "department",
            "description",
            "of",
            "department",
            "with",
            "department",
            "name",
            "formatted",
            "as",
            "value"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2",
        "query_toks": [
            "SELECT",
            "T1.first_name",
            ",",
            "T1.middle_name",
            ",",
            "T1.last_name",
            ",",
            "T1.student_id",
            "FROM",
            "Students",
            "AS",
            "T1",
            "JOIN",
            "Student_Enrolment",
            "AS",
            "T2",
            "ON",
            "T1.student_id",
            "=",
            "T2.student_id",
            "GROUP",
            "BY",
            "T1.student_id",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "first_name",
            ",",
            "t1",
            ".",
            "middle_name",
            ",",
            "t1",
            ".",
            "last_name",
            ",",
            "t1",
            ".",
            "student_id",
            "from",
            "students",
            "as",
            "t1",
            "join",
            "student_enrolment",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "student_id",
            "=",
            "t2",
            ".",
            "student_id",
            "group",
            "by",
            "t1",
            ".",
            "student_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                32,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            47,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ],
                    [
                        "table_unit",
                        7
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    32,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                35,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                36,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                37,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                32,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list first name of student middle name of student last name of student degree program id of student enrolment for each student enrolment id of student enrolment that have the total number of student enrolment equal to value",
        "gold_question": "list first name of student middle name of student last name of student student id of student for each student id of student that have the total number of student equal to value",
        "question_toks": [
            "list",
            "first",
            "name",
            "of",
            "student",
            "middle",
            "name",
            "of",
            "student",
            "last",
            "name",
            "of",
            "student",
            "degree",
            "program",
            "id",
            "of",
            "student",
            "enrolment",
            "for",
            "each",
            "student",
            "enrolment",
            "id",
            "of",
            "student",
            "enrolment",
            "that",
            "have",
            "the",
            "total",
            "number",
            "of",
            "student",
            "enrolment",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2",
        "query_toks": [
            "SELECT",
            "T1.first_name",
            ",",
            "T1.middle_name",
            ",",
            "T1.last_name",
            ",",
            "T1.student_id",
            "FROM",
            "Students",
            "AS",
            "T1",
            "JOIN",
            "Student_Enrolment",
            "AS",
            "T2",
            "ON",
            "T1.student_id",
            "=",
            "T2.student_id",
            "GROUP",
            "BY",
            "T1.student_id",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "first_name",
            ",",
            "t1",
            ".",
            "middle_name",
            ",",
            "t1",
            ".",
            "last_name",
            ",",
            "t1",
            ".",
            "student_id",
            "from",
            "students",
            "as",
            "t1",
            "join",
            "student_enrolment",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "student_id",
            "=",
            "t2",
            ".",
            "student_id",
            "group",
            "by",
            "t1",
            ".",
            "student_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                32,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            47,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ],
                    [
                        "table_unit",
                        7
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    32,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                35,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                36,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                37,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                32,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list first name of student middle name of student last name of student student id of student enrolment for each student enrolment id of student enrolment that have the total number of student enrolment equal to value",
        "gold_question": "list first name of student middle name of student last name of student student id of student for each student id of student that have the total number of student equal to value",
        "question_toks": [
            "list",
            "first",
            "name",
            "of",
            "student",
            "middle",
            "name",
            "of",
            "student",
            "last",
            "name",
            "of",
            "student",
            "student",
            "id",
            "of",
            "student",
            "enrolment",
            "for",
            "each",
            "student",
            "enrolment",
            "id",
            "of",
            "student",
            "enrolment",
            "that",
            "have",
            "the",
            "total",
            "number",
            "of",
            "student",
            "enrolment",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor'",
        "query_toks": [
            "SELECT",
            "DISTINCT",
            "T1.first_name",
            ",",
            "T1.middle_name",
            ",",
            "T1.last_name",
            "FROM",
            "Students",
            "AS",
            "T1",
            "JOIN",
            "Student_Enrolment",
            "AS",
            "T2",
            "ON",
            "T1.student_id",
            "=",
            "T2.student_id",
            "JOIN",
            "Degree_Programs",
            "AS",
            "T3",
            "ON",
            "T2.degree_program_id",
            "=",
            "T3.degree_program_id",
            "WHERE",
            "T3.degree_summary_name",
            "=",
            "'Bachelor",
            "'"
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "t1",
            ".",
            "first_name",
            ",",
            "t1",
            ".",
            "middle_name",
            ",",
            "t1",
            ".",
            "last_name",
            "from",
            "students",
            "as",
            "t1",
            "join",
            "student_enrolment",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "student_id",
            "=",
            "t2",
            ".",
            "student_id",
            "join",
            "degree_programs",
            "as",
            "t3",
            "on",
            "t2",
            ".",
            "degree_program_id",
            "=",
            "t3",
            ".",
            "degree_program_id",
            "where",
            "t3",
            ".",
            "degree_summary_name",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                32,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            47,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                45,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            18,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ],
                    [
                        "table_unit",
                        7
                    ],
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                35,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                36,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                37,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            20,
                            false
                        ],
                        null
                    ],
                    "\"Bachelor\"",
                    null
                ]
            ]
        },
        "question": "list first name of student middle name of student last name of student with degree summary name of degree program equal to value",
        "gold_question": "list first name of student middle name of student last name of student with degree summary name of degree program equal to value",
        "question_toks": [
            "list",
            "first",
            "name",
            "of",
            "student",
            "middle",
            "name",
            "of",
            "student",
            "last",
            "name",
            "of",
            "student",
            "with",
            "degree",
            "summary",
            "name",
            "of",
            "degree",
            "program",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor'",
        "query_toks": [
            "SELECT",
            "DISTINCT",
            "T1.first_name",
            ",",
            "T1.middle_name",
            ",",
            "T1.last_name",
            "FROM",
            "Students",
            "AS",
            "T1",
            "JOIN",
            "Student_Enrolment",
            "AS",
            "T2",
            "ON",
            "T1.student_id",
            "=",
            "T2.student_id",
            "JOIN",
            "Degree_Programs",
            "AS",
            "T3",
            "ON",
            "T2.degree_program_id",
            "=",
            "T3.degree_program_id",
            "WHERE",
            "T3.degree_summary_name",
            "=",
            "'Bachelor",
            "'"
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "t1",
            ".",
            "first_name",
            ",",
            "t1",
            ".",
            "middle_name",
            ",",
            "t1",
            ".",
            "last_name",
            "from",
            "students",
            "as",
            "t1",
            "join",
            "student_enrolment",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "student_id",
            "=",
            "t2",
            ".",
            "student_id",
            "join",
            "degree_programs",
            "as",
            "t3",
            "on",
            "t2",
            ".",
            "degree_program_id",
            "=",
            "t3",
            ".",
            "degree_program_id",
            "where",
            "t3",
            ".",
            "degree_summary_name",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                32,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            47,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                45,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            18,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ],
                    [
                        "table_unit",
                        7
                    ],
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                35,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                36,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                37,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            20,
                            false
                        ],
                        null
                    ],
                    "\"Bachelor\"",
                    null
                ]
            ]
        },
        "question": "list first name of student middle name of student last name of student with course name of course equal to value",
        "gold_question": "list first name of student middle name of student last name of student with degree summary name of degree program equal to value",
        "question_toks": [
            "list",
            "first",
            "name",
            "of",
            "student",
            "middle",
            "name",
            "of",
            "student",
            "last",
            "name",
            "of",
            "student",
            "with",
            "course",
            "name",
            "of",
            "course",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T1.degree_summary_name",
            "FROM",
            "Degree_Programs",
            "AS",
            "T1",
            "JOIN",
            "Student_Enrolment",
            "AS",
            "T2",
            "ON",
            "T1.degree_program_id",
            "=",
            "T2.degree_program_id",
            "GROUP",
            "BY",
            "T1.degree_summary_name",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "degree_summary_name",
            "from",
            "degree_programs",
            "as",
            "t1",
            "join",
            "student_enrolment",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "degree_program_id",
            "=",
            "t2",
            ".",
            "degree_program_id",
            "group",
            "by",
            "t1",
            ".",
            "degree_summary_name",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                18,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            45,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ],
                    [
                        "table_unit",
                        7
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    20,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                20,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of degree program id of student enrolment for each degree program id ordered by the total number of student enrolment descendingly",
        "gold_question": "list top value items of degree summary name of degree program for each degree summary name of degree program ordered by the total number of degree program descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "degree",
            "program",
            "id",
            "of",
            "student",
            "enrolment",
            "for",
            "each",
            "degree",
            "program",
            "id",
            "ordered",
            "by",
            "the",
            "total",
            "number",
            "of",
            "student",
            "enrolment",
            "descendingly"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T1.degree_summary_name",
            "FROM",
            "Degree_Programs",
            "AS",
            "T1",
            "JOIN",
            "Student_Enrolment",
            "AS",
            "T2",
            "ON",
            "T1.degree_program_id",
            "=",
            "T2.degree_program_id",
            "GROUP",
            "BY",
            "T1.degree_summary_name",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "degree_summary_name",
            "from",
            "degree_programs",
            "as",
            "t1",
            "join",
            "student_enrolment",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "degree_program_id",
            "=",
            "t2",
            ".",
            "degree_program_id",
            "group",
            "by",
            "t1",
            ".",
            "degree_summary_name",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                18,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            45,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ],
                    [
                        "table_unit",
                        7
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    20,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                20,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of degree summary name of degree program for each degree summary name of degree program ordered by the total number of degree program descendingly",
        "gold_question": "list top value items of degree summary name of degree program for each degree summary name of degree program ordered by the total number of degree program descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "degree",
            "summary",
            "name",
            "of",
            "degree",
            "program",
            "for",
            "each",
            "degree",
            "summary",
            "name",
            "of",
            "degree",
            "program",
            "ordered",
            "by",
            "the",
            "total",
            "number",
            "of",
            "degree",
            "program",
            "descendingly"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T1.degree_program_id",
            ",",
            "T1.degree_summary_name",
            "FROM",
            "Degree_Programs",
            "AS",
            "T1",
            "JOIN",
            "Student_Enrolment",
            "AS",
            "T2",
            "ON",
            "T1.degree_program_id",
            "=",
            "T2.degree_program_id",
            "GROUP",
            "BY",
            "T1.degree_program_id",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "degree_program_id",
            ",",
            "t1",
            ".",
            "degree_summary_name",
            "from",
            "degree_programs",
            "as",
            "t1",
            "join",
            "student_enrolment",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "degree_program_id",
            "=",
            "t2",
            ".",
            "degree_program_id",
            "group",
            "by",
            "t1",
            ".",
            "degree_program_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                18,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            45,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ],
                    [
                        "table_unit",
                        7
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    18,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                18,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                20,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of degree program id of student enrolment degree summary name of degree program for each degree program id of student enrolment ordered by the total number of student enrolment descendingly",
        "gold_question": "list top value items of degree program id of degree program degree summary name of degree program for each degree program id of degree program ordered by the total number of degree program descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "degree",
            "program",
            "id",
            "of",
            "student",
            "enrolment",
            "degree",
            "summary",
            "name",
            "of",
            "degree",
            "program",
            "for",
            "each",
            "degree",
            "program",
            "id",
            "of",
            "student",
            "enrolment",
            "ordered",
            "by",
            "the",
            "total",
            "number",
            "of",
            "student",
            "enrolment",
            "descendingly"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T1.degree_program_id",
            ",",
            "T1.degree_summary_name",
            "FROM",
            "Degree_Programs",
            "AS",
            "T1",
            "JOIN",
            "Student_Enrolment",
            "AS",
            "T2",
            "ON",
            "T1.degree_program_id",
            "=",
            "T2.degree_program_id",
            "GROUP",
            "BY",
            "T1.degree_program_id",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "degree_program_id",
            ",",
            "t1",
            ".",
            "degree_summary_name",
            "from",
            "degree_programs",
            "as",
            "t1",
            "join",
            "student_enrolment",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "degree_program_id",
            "=",
            "t2",
            ".",
            "degree_program_id",
            "group",
            "by",
            "t1",
            ".",
            "degree_program_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                18,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            45,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ],
                    [
                        "table_unit",
                        7
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    18,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                18,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                20,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of degree program id of degree program degree summary description of degree program for each degree program id of student enrolment ordered by the total number of student enrolment descendingly",
        "gold_question": "list top value items of degree program id of degree program degree summary name of degree program for each degree program id of degree program ordered by the total number of degree program descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "degree",
            "program",
            "id",
            "of",
            "degree",
            "program",
            "degree",
            "summary",
            "description",
            "of",
            "degree",
            "program",
            "for",
            "each",
            "degree",
            "program",
            "id",
            "of",
            "student",
            "enrolment",
            "ordered",
            "by",
            "the",
            "total",
            "number",
            "of",
            "student",
            "enrolment",
            "descendingly"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T1.student_id",
            ",",
            "T1.first_name",
            ",",
            "T1.middle_name",
            ",",
            "T1.last_name",
            ",",
            "count",
            "(",
            "*",
            ")",
            ",",
            "T1.student_id",
            "FROM",
            "Students",
            "AS",
            "T1",
            "JOIN",
            "Student_Enrolment",
            "AS",
            "T2",
            "ON",
            "T1.student_id",
            "=",
            "T2.student_id",
            "GROUP",
            "BY",
            "T1.student_id",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "student_id",
            ",",
            "t1",
            ".",
            "first_name",
            ",",
            "t1",
            ".",
            "middle_name",
            ",",
            "t1",
            ".",
            "last_name",
            ",",
            "count",
            "(",
            "*",
            ")",
            ",",
            "t1",
            ".",
            "student_id",
            "from",
            "students",
            "as",
            "t1",
            "join",
            "student_enrolment",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "student_id",
            "=",
            "t2",
            ".",
            "student_id",
            "group",
            "by",
            "t1",
            ".",
            "student_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                32,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            47,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ],
                    [
                        "table_unit",
                        7
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    32,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                32,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                35,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                36,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                37,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                32,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of first name of student middle name of student enrolment course last name of student enrolment course the total number of student enrolment course for each student id ordered by the total number of student descendingly",
        "gold_question": "list top value items of student id of student first name of student middle name of student last name of student enrolment the total number of student enrolment student id of student for each student id of student ordered by the total number of student descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "first",
            "name",
            "of",
            "student",
            "middle",
            "name",
            "of",
            "student",
            "enrolment",
            "course",
            "last",
            "name",
            "of",
            "student",
            "enrolment",
            "course",
            "the",
            "total",
            "number",
            "of",
            "student",
            "enrolment",
            "course",
            "for",
            "each",
            "student",
            "id",
            "ordered",
            "by",
            "the",
            "total",
            "number",
            "of",
            "student",
            "descendingly"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T1.student_id",
            ",",
            "T1.first_name",
            ",",
            "T1.middle_name",
            ",",
            "T1.last_name",
            ",",
            "count",
            "(",
            "*",
            ")",
            ",",
            "T1.student_id",
            "FROM",
            "Students",
            "AS",
            "T1",
            "JOIN",
            "Student_Enrolment",
            "AS",
            "T2",
            "ON",
            "T1.student_id",
            "=",
            "T2.student_id",
            "GROUP",
            "BY",
            "T1.student_id",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "student_id",
            ",",
            "t1",
            ".",
            "first_name",
            ",",
            "t1",
            ".",
            "middle_name",
            ",",
            "t1",
            ".",
            "last_name",
            ",",
            "count",
            "(",
            "*",
            ")",
            ",",
            "t1",
            ".",
            "student_id",
            "from",
            "students",
            "as",
            "t1",
            "join",
            "student_enrolment",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "student_id",
            "=",
            "t2",
            ".",
            "student_id",
            "group",
            "by",
            "t1",
            ".",
            "student_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                32,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            47,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ],
                    [
                        "table_unit",
                        7
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    32,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                32,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                35,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                36,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                37,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                32,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of first name of student middle name of student enrolment course last name of student enrolment course the total number of student enrolment course for each student enrolment id of student enrolment ordered by the total number of student enrolment descendingly",
        "gold_question": "list top value items of student id of student first name of student middle name of student last name of student enrolment the total number of student enrolment student id of student for each student id of student ordered by the total number of student descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "first",
            "name",
            "of",
            "student",
            "middle",
            "name",
            "of",
            "student",
            "enrolment",
            "course",
            "last",
            "name",
            "of",
            "student",
            "enrolment",
            "course",
            "the",
            "total",
            "number",
            "of",
            "student",
            "enrolment",
            "course",
            "for",
            "each",
            "student",
            "enrolment",
            "id",
            "of",
            "student",
            "enrolment",
            "ordered",
            "by",
            "the",
            "total",
            "number",
            "of",
            "student",
            "enrolment",
            "descendingly"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment )",
        "query_toks": [
            "SELECT",
            "semester_name",
            "FROM",
            "Semesters",
            "WHERE",
            "semester_id",
            "NOT",
            "IN",
            "(",
            "SELECT",
            "semester_id",
            "FROM",
            "Student_Enrolment",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "semester_name",
            "from",
            "semesters",
            "where",
            "semester_id",
            "not",
            "in",
            "(",
            "select",
            "semester_id",
            "from",
            "student_enrolment",
            ")"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                29,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    true,
                    8,
                    [
                        0,
                        [
                            0,
                            28,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    7
                                ]
                            ]
                        },
                        "groupby": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderby": [],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            46,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": []
                    },
                    null
                ]
            ]
        },
        "question": "list semester name of semester with semester id that is not in ( semester id of student enrolment )",
        "gold_question": "list semester name of semester with semester id that is not in ( semester id of student enrolment )",
        "question_toks": [
            "list",
            "semester",
            "name",
            "of",
            "semester",
            "with",
            "semester",
            "id",
            "that",
            "is",
            "not",
            "in",
            "(",
            "semester",
            "id",
            "of",
            "student",
            "enrolment",
            ")"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment )",
        "query_toks": [
            "SELECT",
            "semester_name",
            "FROM",
            "Semesters",
            "WHERE",
            "semester_id",
            "NOT",
            "IN",
            "(",
            "SELECT",
            "semester_id",
            "FROM",
            "Student_Enrolment",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "semester_name",
            "from",
            "semesters",
            "where",
            "semester_id",
            "not",
            "in",
            "(",
            "select",
            "semester_id",
            "from",
            "student_enrolment",
            ")"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                29,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    true,
                    8,
                    [
                        0,
                        [
                            0,
                            28,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    7
                                ]
                            ]
                        },
                        "groupby": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderby": [],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            46,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": []
                    },
                    null
                ]
            ]
        },
        "question": "list semester name of semester with semester id that is not in ( semester id of student enrolment )",
        "gold_question": "list semester name of semester with semester id that is not in ( semester id of student enrolment )",
        "question_toks": [
            "list",
            "semester",
            "name",
            "of",
            "semester",
            "with",
            "semester",
            "id",
            "that",
            "is",
            "not",
            "in",
            "(",
            "semester",
            "id",
            "of",
            "student",
            "enrolment",
            ")"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT DISTINCT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id",
        "query_toks": [
            "SELECT",
            "DISTINCT",
            "T1.course_name",
            "FROM",
            "Courses",
            "AS",
            "T1",
            "JOIN",
            "Student_Enrolment_Courses",
            "AS",
            "T2",
            "ON",
            "T1.course_id",
            "=",
            "T2.course_id"
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "t1",
            ".",
            "course_name",
            "from",
            "courses",
            "as",
            "t1",
            "join",
            "student_enrolment_courses",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "course_id",
            "=",
            "t2",
            ".",
            "course_id"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            50,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        8
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list course name of course",
        "gold_question": "list course name of course",
        "question_toks": [
            "list",
            "course",
            "name",
            "of",
            "course"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT DISTINCT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id",
        "query_toks": [
            "SELECT",
            "DISTINCT",
            "T1.course_name",
            "FROM",
            "Courses",
            "AS",
            "T1",
            "JOIN",
            "Student_Enrolment_Courses",
            "AS",
            "T2",
            "ON",
            "T1.course_id",
            "=",
            "T2.course_id"
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "t1",
            ".",
            "course_name",
            "from",
            "courses",
            "as",
            "t1",
            "join",
            "student_enrolment_courses",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "course_id",
            "=",
            "t2",
            ".",
            "course_id"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            50,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        8
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list course name of course",
        "gold_question": "list course name of course",
        "question_toks": [
            "list",
            "course",
            "name",
            "of",
            "course"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T1.course_name",
            "FROM",
            "Courses",
            "AS",
            "T1",
            "JOIN",
            "Student_Enrolment_Courses",
            "AS",
            "T2",
            "ON",
            "T1.course_id",
            "=",
            "T2.course_id",
            "GROUP",
            "BY",
            "T1.course_name",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "course_name",
            "from",
            "courses",
            "as",
            "t1",
            "join",
            "student_enrolment_courses",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "course_id",
            "=",
            "t2",
            ".",
            "course_id",
            "group",
            "by",
            "t1",
            ".",
            "course_name",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            50,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        8
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    11,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of course name of course for each course id of course ordered by the total number of course descendingly",
        "gold_question": "list top value items of course name of course for each course name of course ordered by the total number of course descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "course",
            "name",
            "of",
            "course",
            "for",
            "each",
            "course",
            "id",
            "of",
            "course",
            "ordered",
            "by",
            "the",
            "total",
            "number",
            "of",
            "course",
            "descendingly"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T1.course_name",
            "FROM",
            "Courses",
            "AS",
            "T1",
            "JOIN",
            "Student_Enrolment_Courses",
            "AS",
            "T2",
            "ON",
            "T1.course_id",
            "=",
            "T2.course_id",
            "GROUP",
            "BY",
            "T1.course_name",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "course_name",
            "from",
            "courses",
            "as",
            "t1",
            "join",
            "student_enrolment_courses",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "course_id",
            "=",
            "t2",
            ".",
            "course_id",
            "group",
            "by",
            "t1",
            ".",
            "course_name",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            50,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        8
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    11,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of course name of course for each course id of course ordered by the total number of course descendingly",
        "gold_question": "list top value items of course name of course for each course name of course ordered by the total number of course descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "course",
            "name",
            "of",
            "course",
            "for",
            "each",
            "course",
            "id",
            "of",
            "course",
            "ordered",
            "by",
            "the",
            "total",
            "number",
            "of",
            "course",
            "descendingly"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id",
        "query_toks": [
            "SELECT",
            "T1.last_name",
            "FROM",
            "Students",
            "AS",
            "T1",
            "JOIN",
            "Addresses",
            "AS",
            "T2",
            "ON",
            "T1.current_address_id",
            "=",
            "T2.address_id",
            "WHERE",
            "T2.state_province_county",
            "=",
            "'NorthCarolina",
            "'",
            "EXCEPT",
            "SELECT",
            "DISTINCT",
            "T3.last_name",
            "FROM",
            "Students",
            "AS",
            "T3",
            "JOIN",
            "Student_Enrolment",
            "AS",
            "T4",
            "ON",
            "T3.student_id",
            "=",
            "T4.student_id"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "last_name",
            "from",
            "students",
            "as",
            "t1",
            "join",
            "addresses",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "current_address_id",
            "=",
            "t2",
            ".",
            "address_id",
            "where",
            "t2",
            ".",
            "state_province_county",
            "=",
            "value",
            "except",
            "select",
            "distinct",
            "t3",
            ".",
            "last_name",
            "from",
            "students",
            "as",
            "t3",
            "join",
            "student_enrolment",
            "as",
            "t4",
            "on",
            "t3",
            ".",
            "student_id",
            "=",
            "t4",
            ".",
            "student_id"
        ],
        "sql": {
            "except": {
                "except": null,
                "from": {
                    "conds": [
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    32,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                47,
                                false
                            ],
                            null
                        ]
                    ],
                    "table_units": [
                        [
                            "table_unit",
                            6
                        ],
                        [
                            "table_unit",
                            7
                        ]
                    ]
                },
                "groupby": [],
                "having": [],
                "intersect": null,
                "limit": null,
                "orderby": [],
                "select": [
                    true,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    37,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "union": null,
                "where": []
            },
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                33,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                37,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ],
                    "\"NorthCarolina\"",
                    null
                ]
            ]
        },
        "question": "list last name of student with state province county of address equal to value except that list last name of student with state province county of address equal to value",
        "gold_question": "list last name of student with state province county of address equal to value except that list last name of student",
        "question_toks": [
            "list",
            "last",
            "name",
            "of",
            "student",
            "with",
            "state",
            "province",
            "county",
            "of",
            "address",
            "equal",
            "to",
            "value",
            "except",
            "that",
            "list",
            "last",
            "name",
            "of",
            "student",
            "with",
            "state",
            "province",
            "county",
            "of",
            "address",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id",
        "query_toks": [
            "SELECT",
            "T1.last_name",
            "FROM",
            "Students",
            "AS",
            "T1",
            "JOIN",
            "Addresses",
            "AS",
            "T2",
            "ON",
            "T1.current_address_id",
            "=",
            "T2.address_id",
            "WHERE",
            "T2.state_province_county",
            "=",
            "'NorthCarolina",
            "'",
            "EXCEPT",
            "SELECT",
            "DISTINCT",
            "T3.last_name",
            "FROM",
            "Students",
            "AS",
            "T3",
            "JOIN",
            "Student_Enrolment",
            "AS",
            "T4",
            "ON",
            "T3.student_id",
            "=",
            "T4.student_id"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "last_name",
            "from",
            "students",
            "as",
            "t1",
            "join",
            "addresses",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "current_address_id",
            "=",
            "t2",
            ".",
            "address_id",
            "where",
            "t2",
            ".",
            "state_province_county",
            "=",
            "value",
            "except",
            "select",
            "distinct",
            "t3",
            ".",
            "last_name",
            "from",
            "students",
            "as",
            "t3",
            "join",
            "student_enrolment",
            "as",
            "t4",
            "on",
            "t3",
            ".",
            "student_id",
            "=",
            "t4",
            ".",
            "student_id"
        ],
        "sql": {
            "except": {
                "except": null,
                "from": {
                    "conds": [
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    32,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                47,
                                false
                            ],
                            null
                        ]
                    ],
                    "table_units": [
                        [
                            "table_unit",
                            6
                        ],
                        [
                            "table_unit",
                            7
                        ]
                    ]
                },
                "groupby": [],
                "having": [],
                "intersect": null,
                "limit": null,
                "orderby": [],
                "select": [
                    true,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    37,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "union": null,
                "where": []
            },
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                33,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                37,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ],
                    "\"NorthCarolina\"",
                    null
                ]
            ]
        },
        "question": "list last name of student with state province county of address equal to value except that list last name of student with state province county of address equal to value",
        "gold_question": "list last name of student with state province county of address equal to value except that list last name of student",
        "question_toks": [
            "list",
            "last",
            "name",
            "of",
            "student",
            "with",
            "state",
            "province",
            "county",
            "of",
            "address",
            "equal",
            "to",
            "value",
            "except",
            "that",
            "list",
            "last",
            "name",
            "of",
            "student",
            "with",
            "state",
            "province",
            "county",
            "of",
            "address",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2",
        "query_toks": [
            "SELECT",
            "T2.transcript_date",
            ",",
            "T1.transcript_id",
            "FROM",
            "Transcript_Contents",
            "AS",
            "T1",
            "JOIN",
            "Transcripts",
            "AS",
            "T2",
            "ON",
            "T1.transcript_id",
            "=",
            "T2.transcript_id",
            "GROUP",
            "BY",
            "T1.transcript_id",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "t2",
            ".",
            "transcript_date",
            ",",
            "t1",
            ".",
            "transcript_id",
            "from",
            "transcript_contents",
            "as",
            "t1",
            "join",
            "transcripts",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "transcript_id",
            "=",
            "t2",
            ".",
            "transcript_id",
            "group",
            "by",
            "t1",
            ".",
            "transcript_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                56,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            52,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        10
                    ],
                    [
                        "table_unit",
                        9
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    56,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    5,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                53,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                56,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list transcript id of transcript content transcript id of transcript content for each transcript id of transcript content that have the total number of transcript content greater than or equal to value",
        "gold_question": "list transcript date of transcript transcript id of transcript content for each transcript id of transcript content that have the total number of transcript content greater than or equal to value",
        "question_toks": [
            "list",
            "transcript",
            "id",
            "of",
            "transcript",
            "content",
            "transcript",
            "id",
            "of",
            "transcript",
            "content",
            "for",
            "each",
            "transcript",
            "id",
            "of",
            "transcript",
            "content",
            "that",
            "have",
            "the",
            "total",
            "number",
            "of",
            "transcript",
            "content",
            "greater",
            "than",
            "or",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2",
        "query_toks": [
            "SELECT",
            "T2.transcript_date",
            ",",
            "T1.transcript_id",
            "FROM",
            "Transcript_Contents",
            "AS",
            "T1",
            "JOIN",
            "Transcripts",
            "AS",
            "T2",
            "ON",
            "T1.transcript_id",
            "=",
            "T2.transcript_id",
            "GROUP",
            "BY",
            "T1.transcript_id",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "t2",
            ".",
            "transcript_date",
            ",",
            "t1",
            ".",
            "transcript_id",
            "from",
            "transcript_contents",
            "as",
            "t1",
            "join",
            "transcripts",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "transcript_id",
            "=",
            "t2",
            ".",
            "transcript_id",
            "group",
            "by",
            "t1",
            ".",
            "transcript_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                56,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            52,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        10
                    ],
                    [
                        "table_unit",
                        9
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    56,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    5,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                53,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                56,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list transcript id of transcript transcript id of transcript for each transcript id of transcript that have the total number of transcript greater than or equal to value",
        "gold_question": "list transcript date of transcript transcript id of transcript content for each transcript id of transcript content that have the total number of transcript content greater than or equal to value",
        "question_toks": [
            "list",
            "transcript",
            "id",
            "of",
            "transcript",
            "transcript",
            "id",
            "of",
            "transcript",
            "for",
            "each",
            "transcript",
            "id",
            "of",
            "transcript",
            "that",
            "have",
            "the",
            "total",
            "number",
            "of",
            "transcript",
            "greater",
            "than",
            "or",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT cell_mobile_number FROM Students WHERE first_name  =  'Timmothy' AND last_name  =  'Ward'",
        "query_toks": [
            "SELECT",
            "cell_mobile_number",
            "FROM",
            "Students",
            "WHERE",
            "first_name",
            "=",
            "'Timmothy",
            "'",
            "AND",
            "last_name",
            "=",
            "'Ward",
            "'"
        ],
        "query_toks_no_value": [
            "select",
            "cell_mobile_number",
            "from",
            "students",
            "where",
            "first_name",
            "=",
            "value",
            "and",
            "last_name",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                38,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            35,
                            false
                        ],
                        null
                    ],
                    "\"Timmothy\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            37,
                            false
                        ],
                        null
                    ],
                    "\"Ward\"",
                    null
                ]
            ]
        },
        "question": "list cell mobile number of student with first name equal to value and last name equal to value",
        "gold_question": "list cell mobile number of student with first name equal to value and last name equal to value",
        "question_toks": [
            "list",
            "cell",
            "mobile",
            "number",
            "of",
            "student",
            "with",
            "first",
            "name",
            "equal",
            "to",
            "value",
            "and",
            "last",
            "name",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "select cell_mobile_number from students where first_name  =  'timmothy' and last_name  =  'ward'",
        "query_toks": [
            "select",
            "cell_mobile_number",
            "from",
            "students",
            "where",
            "first_name",
            "=",
            "\"timmothy\"",
            "and",
            "last_name",
            "=",
            "\"ward\""
        ],
        "query_toks_no_value": [
            "select",
            "cell_mobile_number",
            "from",
            "students",
            "where",
            "first_name",
            "=",
            "value",
            "and",
            "last_name",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                38,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            35,
                            false
                        ],
                        null
                    ],
                    "\"timmothy\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            37,
                            false
                        ],
                        null
                    ],
                    "\"ward\"",
                    null
                ]
            ]
        },
        "question": "list cell mobile number of student with first name equal to value and last name equal to value",
        "gold_question": "list cell mobile number of student with first name equal to value and last name equal to value",
        "question_toks": [
            "list",
            "cell",
            "mobile",
            "number",
            "of",
            "student",
            "with",
            "first",
            "name",
            "equal",
            "to",
            "value",
            "and",
            "last",
            "name",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1",
        "query_toks": [
            "SELECT",
            "first_name",
            ",",
            "middle_name",
            ",",
            "last_name",
            "FROM",
            "Students",
            "ORDER",
            "BY",
            "date_first_registered",
            "ASC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "first_name",
            ",",
            "middle_name",
            ",",
            "last_name",
            "from",
            "students",
            "order",
            "by",
            "date_first_registered",
            "asc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            41,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                35,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                36,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                37,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of first name middle name last name of student ordered by date first register ascendingly",
        "gold_question": "list top value items of first name middle name last name of student ordered by date first register ascendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "first",
            "name",
            "middle",
            "name",
            "last",
            "name",
            "of",
            "student",
            "ordered",
            "by",
            "date",
            "first",
            "register",
            "ascendingly"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1",
        "query_toks": [
            "SELECT",
            "first_name",
            ",",
            "middle_name",
            ",",
            "last_name",
            "FROM",
            "Students",
            "ORDER",
            "BY",
            "date_first_registered",
            "ASC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "first_name",
            ",",
            "middle_name",
            ",",
            "last_name",
            "from",
            "students",
            "order",
            "by",
            "date_first_registered",
            "asc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            41,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                35,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                36,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                37,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of first name middle name last name of student ordered by date first register ascendingly",
        "gold_question": "list top value items of first name middle name last name of student ordered by date first register ascendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "first",
            "name",
            "middle",
            "name",
            "last",
            "name",
            "of",
            "student",
            "ordered",
            "by",
            "date",
            "first",
            "register",
            "ascendingly"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1",
        "query_toks": [
            "SELECT",
            "first_name",
            ",",
            "middle_name",
            ",",
            "last_name",
            "FROM",
            "Students",
            "ORDER",
            "BY",
            "date_left",
            "ASC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "first_name",
            ",",
            "middle_name",
            ",",
            "last_name",
            "from",
            "students",
            "order",
            "by",
            "date_left",
            "asc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            42,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                35,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                36,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                37,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of first name middle name last name of student ordered by date left ascendingly",
        "gold_question": "list top value items of first name middle name last name of student ordered by date left ascendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "first",
            "name",
            "middle",
            "name",
            "last",
            "name",
            "of",
            "student",
            "ordered",
            "by",
            "date",
            "left",
            "ascendingly"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1",
        "query_toks": [
            "SELECT",
            "first_name",
            ",",
            "middle_name",
            ",",
            "last_name",
            "FROM",
            "Students",
            "ORDER",
            "BY",
            "date_left",
            "ASC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "first_name",
            ",",
            "middle_name",
            ",",
            "last_name",
            "from",
            "students",
            "order",
            "by",
            "date_left",
            "asc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            42,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                35,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                36,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                37,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of first name middle name last name of student ordered by date first register ascendingly",
        "gold_question": "list top value items of first name middle name last name of student ordered by date left ascendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "first",
            "name",
            "middle",
            "name",
            "last",
            "name",
            "of",
            "student",
            "ordered",
            "by",
            "date",
            "first",
            "register",
            "ascendingly"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT first_name FROM Students WHERE current_address_id != permanent_address_id",
        "query_toks": [
            "SELECT",
            "first_name",
            "FROM",
            "Students",
            "WHERE",
            "current_address_id",
            "!",
            "=",
            "permanent_address_id"
        ],
        "query_toks_no_value": [
            "select",
            "first_name",
            "from",
            "students",
            "where",
            "current_address_id",
            "!",
            "=",
            "permanent_address_id"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                35,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            33,
                            false
                        ],
                        null
                    ],
                    [
                        0,
                        34,
                        false
                    ],
                    null
                ]
            ]
        },
        "question": "list first name permanent address id of student",
        "gold_question": "list first name of student with current address id not equal to value",
        "question_toks": [
            "list",
            "first",
            "name",
            "permanent",
            "address",
            "id",
            "of",
            "student"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT first_name FROM Students WHERE current_address_id != permanent_address_id",
        "query_toks": [
            "SELECT",
            "first_name",
            "FROM",
            "Students",
            "WHERE",
            "current_address_id",
            "!",
            "=",
            "permanent_address_id"
        ],
        "query_toks_no_value": [
            "select",
            "first_name",
            "from",
            "students",
            "where",
            "current_address_id",
            "!",
            "=",
            "permanent_address_id"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                35,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            33,
                            false
                        ],
                        null
                    ],
                    [
                        0,
                        34,
                        false
                    ],
                    null
                ]
            ]
        },
        "question": "list first name permanent address id of student",
        "gold_question": "list first name of student with current address id not equal to value",
        "question_toks": [
            "list",
            "first",
            "name",
            "permanent",
            "address",
            "id",
            "of",
            "student"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T1.address_id",
            ",",
            "T1.line_1",
            ",",
            "T1.line_2",
            "FROM",
            "Addresses",
            "AS",
            "T1",
            "JOIN",
            "Students",
            "AS",
            "T2",
            "ON",
            "T1.address_id",
            "=",
            "T2.current_address_id",
            "GROUP",
            "BY",
            "T1.address_id",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "address_id",
            ",",
            "t1",
            ".",
            "line_1",
            ",",
            "t1",
            ".",
            "line_2",
            "from",
            "addresses",
            "as",
            "t1",
            "join",
            "students",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "address_id",
            "=",
            "t2",
            ".",
            "current_address_id",
            "group",
            "by",
            "t1",
            ".",
            "address_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            33,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    1,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of address id of address line 1 of address line 2 of address for each current address id of student ordered by the total number of student descendingly",
        "gold_question": "list top value items of address id of address line 1 of address line 2 of address for each address id of address ordered by the total number of address descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "address",
            "id",
            "of",
            "address",
            "line",
            "1",
            "of",
            "address",
            "line",
            "2",
            "of",
            "address",
            "for",
            "each",
            "current",
            "address",
            "id",
            "of",
            "student",
            "ordered",
            "by",
            "the",
            "total",
            "number",
            "of",
            "student",
            "descendingly"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T1.address_id",
            ",",
            "T1.line_1",
            ",",
            "T1.line_2",
            "FROM",
            "Addresses",
            "AS",
            "T1",
            "JOIN",
            "Students",
            "AS",
            "T2",
            "ON",
            "T1.address_id",
            "=",
            "T2.current_address_id",
            "GROUP",
            "BY",
            "T1.address_id",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "address_id",
            ",",
            "t1",
            ".",
            "line_1",
            ",",
            "t1",
            ".",
            "line_2",
            "from",
            "addresses",
            "as",
            "t1",
            "join",
            "students",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "address_id",
            "=",
            "t2",
            ".",
            "current_address_id",
            "group",
            "by",
            "t1",
            ".",
            "address_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            33,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    1,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of address id of address line 1 of address line 2 of address for each address id of address ordered by the total number of address descendingly",
        "gold_question": "list top value items of address id of address line 1 of address line 2 of address for each address id of address ordered by the total number of address descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "address",
            "id",
            "of",
            "address",
            "line",
            "1",
            "of",
            "address",
            "line",
            "2",
            "of",
            "address",
            "for",
            "each",
            "address",
            "id",
            "of",
            "address",
            "ordered",
            "by",
            "the",
            "total",
            "number",
            "of",
            "address",
            "descendingly"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT avg(transcript_date) FROM Transcripts",
        "query_toks": [
            "SELECT",
            "avg",
            "(",
            "transcript_date",
            ")",
            "FROM",
            "Transcripts"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "transcript_date",
            ")",
            "from",
            "transcripts"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        9
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                53,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list the average of transcript date of transcript",
        "gold_question": "list the average of transcript date of transcript",
        "question_toks": [
            "list",
            "the",
            "average",
            "of",
            "transcript",
            "date",
            "of",
            "transcript"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT avg(transcript_date) FROM Transcripts",
        "query_toks": [
            "SELECT",
            "avg",
            "(",
            "transcript_date",
            ")",
            "FROM",
            "Transcripts"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "transcript_date",
            ")",
            "from",
            "transcripts"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        9
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                53,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list the average of transcript date of transcript",
        "gold_question": "list the average of transcript date of transcript",
        "question_toks": [
            "list",
            "the",
            "average",
            "of",
            "transcript",
            "date",
            "of",
            "transcript"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1",
        "query_toks": [
            "SELECT",
            "transcript_date",
            ",",
            "other_details",
            "FROM",
            "Transcripts",
            "ORDER",
            "BY",
            "transcript_date",
            "ASC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "transcript_date",
            ",",
            "other_details",
            "from",
            "transcripts",
            "order",
            "by",
            "transcript_date",
            "asc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        9
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            53,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                53,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                54,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of transcript date other detail of transcript ordered by transcript date ascendingly",
        "gold_question": "list top value items of transcript date other detail of transcript ordered by transcript date ascendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "transcript",
            "date",
            "other",
            "detail",
            "of",
            "transcript",
            "ordered",
            "by",
            "transcript",
            "date",
            "ascendingly"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1",
        "query_toks": [
            "SELECT",
            "transcript_date",
            ",",
            "other_details",
            "FROM",
            "Transcripts",
            "ORDER",
            "BY",
            "transcript_date",
            "ASC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "transcript_date",
            ",",
            "other_details",
            "from",
            "transcripts",
            "order",
            "by",
            "transcript_date",
            "asc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        9
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            53,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                53,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                54,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of transcript date other detail of transcript ordered by transcript date ascendingly",
        "gold_question": "list top value items of transcript date other detail of transcript ordered by transcript date ascendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "transcript",
            "date",
            "other",
            "detail",
            "of",
            "transcript",
            "ordered",
            "by",
            "transcript",
            "date",
            "ascendingly"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT count(*) FROM Transcripts",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "Transcripts"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "transcripts"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        9
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list the total number of transcript",
        "gold_question": "list the total number of transcript",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "transcript"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT count(*) FROM Transcripts",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "Transcripts"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "transcripts"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        9
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list the total number of transcript",
        "gold_question": "list the total number of transcript",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "transcript"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "transcript_date",
            "FROM",
            "Transcripts",
            "ORDER",
            "BY",
            "transcript_date",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "transcript_date",
            "from",
            "transcripts",
            "order",
            "by",
            "transcript_date",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        9
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            53,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                53,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of transcript date of transcript ordered by transcript date descendingly",
        "gold_question": "list top value items of transcript date of transcript ordered by transcript date descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "transcript",
            "date",
            "of",
            "transcript",
            "ordered",
            "by",
            "transcript",
            "date",
            "descendingly"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "transcript_date",
            "FROM",
            "Transcripts",
            "ORDER",
            "BY",
            "transcript_date",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "transcript_date",
            "from",
            "transcripts",
            "order",
            "by",
            "transcript_date",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        9
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            53,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                53,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of transcript date of transcript ordered by transcript date descendingly",
        "gold_question": "list top value items of transcript date of transcript ordered by transcript date descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "transcript",
            "date",
            "of",
            "transcript",
            "ordered",
            "by",
            "transcript",
            "date",
            "descendingly"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            ",",
            "student_course_id",
            "FROM",
            "Transcript_Contents",
            "GROUP",
            "BY",
            "student_course_id",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            ",",
            "student_course_id",
            "from",
            "transcript_contents",
            "group",
            "by",
            "student_course_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        10
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    55,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                55,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of transcript id of transcript the total number of transcript content for each transcript id of transcript ordered by the total number of transcript descendingly",
        "gold_question": "list top value items of the total number of transcript content student course id of transcript content for each student course id ordered by the total number of transcript content descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "transcript",
            "id",
            "of",
            "transcript",
            "the",
            "total",
            "number",
            "of",
            "transcript",
            "content",
            "for",
            "each",
            "transcript",
            "id",
            "of",
            "transcript",
            "ordered",
            "by",
            "the",
            "total",
            "number",
            "of",
            "transcript",
            "descendingly"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            ",",
            "student_course_id",
            "FROM",
            "Transcript_Contents",
            "GROUP",
            "BY",
            "student_course_id",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            ",",
            "student_course_id",
            "from",
            "transcript_contents",
            "group",
            "by",
            "student_course_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        10
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    55,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                55,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of student enrolment id the each transcript id of transcript ordered by the total number of transcript descendingly",
        "gold_question": "list top value items of the total number of transcript content student course id of transcript content for each student course id ordered by the total number of transcript content descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "student",
            "enrolment",
            "id",
            "the",
            "each",
            "transcript",
            "id",
            "of",
            "transcript",
            "ordered",
            "by",
            "the",
            "total",
            "number",
            "of",
            "transcript",
            "descendingly"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T2.transcript_date",
            ",",
            "T1.transcript_id",
            "FROM",
            "Transcript_Contents",
            "AS",
            "T1",
            "JOIN",
            "Transcripts",
            "AS",
            "T2",
            "ON",
            "T1.transcript_id",
            "=",
            "T2.transcript_id",
            "GROUP",
            "BY",
            "T1.transcript_id",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "ASC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t2",
            ".",
            "transcript_date",
            ",",
            "t1",
            ".",
            "transcript_id",
            "from",
            "transcript_contents",
            "as",
            "t1",
            "join",
            "transcripts",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "transcript_id",
            "=",
            "t2",
            ".",
            "transcript_id",
            "group",
            "by",
            "t1",
            ".",
            "transcript_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "asc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                56,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            52,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        10
                    ],
                    [
                        "table_unit",
                        9
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    56,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "asc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                53,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                56,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of transcript date of transcript transcript id of transcript for each transcript id of transcript ordered by the total number of transcript ascendingly",
        "gold_question": "list top value items of transcript date of transcript transcript id of transcript content for each transcript id of transcript content ordered by the total number of transcript content ascendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "transcript",
            "date",
            "of",
            "transcript",
            "transcript",
            "id",
            "of",
            "transcript",
            "for",
            "each",
            "transcript",
            "id",
            "of",
            "transcript",
            "ordered",
            "by",
            "the",
            "total",
            "number",
            "of",
            "transcript",
            "ascendingly"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T2.transcript_date",
            ",",
            "T1.transcript_id",
            "FROM",
            "Transcript_Contents",
            "AS",
            "T1",
            "JOIN",
            "Transcripts",
            "AS",
            "T2",
            "ON",
            "T1.transcript_id",
            "=",
            "T2.transcript_id",
            "GROUP",
            "BY",
            "T1.transcript_id",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "ASC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t2",
            ".",
            "transcript_date",
            ",",
            "t1",
            ".",
            "transcript_id",
            "from",
            "transcript_contents",
            "as",
            "t1",
            "join",
            "transcripts",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "transcript_id",
            "=",
            "t2",
            ".",
            "transcript_id",
            "group",
            "by",
            "t1",
            ".",
            "transcript_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "asc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                56,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            52,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        10
                    ],
                    [
                        "table_unit",
                        9
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    56,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "asc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                53,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                56,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of transcript date of transcript transcript id of transcript content for each transcript id of transcript content ordered by the total number of transcript content ascendingly",
        "gold_question": "list top value items of transcript date of transcript transcript id of transcript content for each transcript id of transcript content ordered by the total number of transcript content ascendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "transcript",
            "date",
            "of",
            "transcript",
            "transcript",
            "id",
            "of",
            "transcript",
            "content",
            "for",
            "each",
            "transcript",
            "id",
            "of",
            "transcript",
            "content",
            "ordered",
            "by",
            "the",
            "total",
            "number",
            "of",
            "transcript",
            "content",
            "ascendingly"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor'",
        "query_toks": [
            "SELECT",
            "DISTINCT",
            "T2.semester_id",
            "FROM",
            "Degree_Programs",
            "AS",
            "T1",
            "JOIN",
            "Student_Enrolment",
            "AS",
            "T2",
            "ON",
            "T1.degree_program_id",
            "=",
            "T2.degree_program_id",
            "WHERE",
            "degree_summary_name",
            "=",
            "'Master",
            "'",
            "INTERSECT",
            "SELECT",
            "DISTINCT",
            "T2.semester_id",
            "FROM",
            "Degree_Programs",
            "AS",
            "T1",
            "JOIN",
            "Student_Enrolment",
            "AS",
            "T2",
            "ON",
            "T1.degree_program_id",
            "=",
            "T2.degree_program_id",
            "WHERE",
            "degree_summary_name",
            "=",
            "'Bachelor",
            "'"
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "t2",
            ".",
            "semester_id",
            "from",
            "degree_programs",
            "as",
            "t1",
            "join",
            "student_enrolment",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "degree_program_id",
            "=",
            "t2",
            ".",
            "degree_program_id",
            "where",
            "degree_summary_name",
            "=",
            "value",
            "intersect",
            "select",
            "distinct",
            "t2",
            ".",
            "semester_id",
            "from",
            "degree_programs",
            "as",
            "t1",
            "join",
            "student_enrolment",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "degree_program_id",
            "=",
            "t2",
            ".",
            "degree_program_id",
            "where",
            "degree_summary_name",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                18,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            45,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ],
                    [
                        "table_unit",
                        7
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": {
                "except": null,
                "from": {
                    "conds": [
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    18,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                45,
                                false
                            ],
                            null
                        ]
                    ],
                    "table_units": [
                        [
                            "table_unit",
                            3
                        ],
                        [
                            "table_unit",
                            7
                        ]
                    ]
                },
                "groupby": [],
                "having": [],
                "intersect": null,
                "limit": null,
                "orderby": [],
                "select": [
                    true,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    46,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "union": null,
                "where": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                20,
                                false
                            ],
                            null
                        ],
                        "\"Bachelor\"",
                        null
                    ]
                ]
            },
            "limit": null,
            "orderby": [],
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                46,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            20,
                            false
                        ],
                        null
                    ],
                    "\"Master\"",
                    null
                ]
            ]
        },
        "question": "list semester id of student enrolment with degree summary name equal to value and list semester id of student enrolment with degree summary name equal to value",
        "gold_question": "list semester id of student enrolment with degree summary name of degree program equal to value and list semester id of student enrolment with degree summary name of degree program equal to value",
        "question_toks": [
            "list",
            "semester",
            "id",
            "of",
            "student",
            "enrolment",
            "with",
            "degree",
            "summary",
            "name",
            "equal",
            "to",
            "value",
            "and",
            "list",
            "semester",
            "id",
            "of",
            "student",
            "enrolment",
            "with",
            "degree",
            "summary",
            "name",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor'",
        "query_toks": [
            "SELECT",
            "DISTINCT",
            "T2.semester_id",
            "FROM",
            "Degree_Programs",
            "AS",
            "T1",
            "JOIN",
            "Student_Enrolment",
            "AS",
            "T2",
            "ON",
            "T1.degree_program_id",
            "=",
            "T2.degree_program_id",
            "WHERE",
            "degree_summary_name",
            "=",
            "'Master",
            "'",
            "INTERSECT",
            "SELECT",
            "DISTINCT",
            "T2.semester_id",
            "FROM",
            "Degree_Programs",
            "AS",
            "T1",
            "JOIN",
            "Student_Enrolment",
            "AS",
            "T2",
            "ON",
            "T1.degree_program_id",
            "=",
            "T2.degree_program_id",
            "WHERE",
            "degree_summary_name",
            "=",
            "'Bachelor",
            "'"
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "t2",
            ".",
            "semester_id",
            "from",
            "degree_programs",
            "as",
            "t1",
            "join",
            "student_enrolment",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "degree_program_id",
            "=",
            "t2",
            ".",
            "degree_program_id",
            "where",
            "degree_summary_name",
            "=",
            "value",
            "intersect",
            "select",
            "distinct",
            "t2",
            ".",
            "semester_id",
            "from",
            "degree_programs",
            "as",
            "t1",
            "join",
            "student_enrolment",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "degree_program_id",
            "=",
            "t2",
            ".",
            "degree_program_id",
            "where",
            "degree_summary_name",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                18,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            45,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ],
                    [
                        "table_unit",
                        7
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": {
                "except": null,
                "from": {
                    "conds": [
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    18,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                45,
                                false
                            ],
                            null
                        ]
                    ],
                    "table_units": [
                        [
                            "table_unit",
                            3
                        ],
                        [
                            "table_unit",
                            7
                        ]
                    ]
                },
                "groupby": [],
                "having": [],
                "intersect": null,
                "limit": null,
                "orderby": [],
                "select": [
                    true,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    46,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "union": null,
                "where": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                20,
                                false
                            ],
                            null
                        ],
                        "\"Bachelor\"",
                        null
                    ]
                ]
            },
            "limit": null,
            "orderby": [],
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                46,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            20,
                            false
                        ],
                        null
                    ],
                    "\"Master\"",
                    null
                ]
            ]
        },
        "question": "list semester id of student enrolment with degree summary name of degree program equal to value and list semester id of student enrolment with degree summary name of degree program equal to value",
        "gold_question": "list semester id of student enrolment with degree summary name of degree program equal to value and list semester id of student enrolment with degree summary name of degree program equal to value",
        "question_toks": [
            "list",
            "semester",
            "id",
            "of",
            "student",
            "enrolment",
            "with",
            "degree",
            "summary",
            "name",
            "of",
            "degree",
            "program",
            "equal",
            "to",
            "value",
            "and",
            "list",
            "semester",
            "id",
            "of",
            "student",
            "enrolment",
            "with",
            "degree",
            "summary",
            "name",
            "of",
            "degree",
            "program",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT count(DISTINCT current_address_id) FROM Students",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "DISTINCT",
            "current_address_id",
            ")",
            "FROM",
            "Students"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "distinct",
            "current_address_id",
            ")",
            "from",
            "students"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                33,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list the number of current address id of student",
        "gold_question": "list the number of current address id of student",
        "question_toks": [
            "list",
            "the",
            "number",
            "of",
            "current",
            "address",
            "id",
            "of",
            "student"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT count(DISTINCT current_address_id) FROM Students",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "DISTINCT",
            "current_address_id",
            ")",
            "FROM",
            "Students"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "distinct",
            "current_address_id",
            ")",
            "from",
            "students"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                33,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list current address id of student",
        "gold_question": "list the number of current address id of student",
        "question_toks": [
            "list",
            "current",
            "address",
            "id",
            "of",
            "student"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT other_student_details FROM Students ORDER BY other_student_details DESC",
        "query_toks": [
            "SELECT",
            "other_student_details",
            "FROM",
            "Students",
            "ORDER",
            "BY",
            "other_student_details",
            "DESC"
        ],
        "query_toks_no_value": [
            "select",
            "other_student_details",
            "from",
            "students",
            "order",
            "by",
            "other_student_details",
            "desc"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            43,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                43,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list other student detail of student ordered by other student detail descendingly",
        "gold_question": "list other student detail of student ordered by other student detail descendingly",
        "question_toks": [
            "list",
            "other",
            "student",
            "detail",
            "of",
            "student",
            "ordered",
            "by",
            "other",
            "student",
            "detail",
            "descendingly"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT other_student_details FROM Students ORDER BY other_student_details DESC",
        "query_toks": [
            "SELECT",
            "other_student_details",
            "FROM",
            "Students",
            "ORDER",
            "BY",
            "other_student_details",
            "DESC"
        ],
        "query_toks_no_value": [
            "select",
            "other_student_details",
            "from",
            "students",
            "order",
            "by",
            "other_student_details",
            "desc"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            43,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                43,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list other student detail of student ordered by other student detail descendingly",
        "gold_question": "list other student detail of student ordered by other student detail descendingly",
        "question_toks": [
            "list",
            "other",
            "student",
            "detail",
            "of",
            "student",
            "ordered",
            "by",
            "other",
            "student",
            "detail",
            "descendingly"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT section_description FROM Sections WHERE section_name  =  'h'",
        "query_toks": [
            "SELECT",
            "section_description",
            "FROM",
            "Sections",
            "WHERE",
            "section_name",
            "=",
            "'h",
            "'"
        ],
        "query_toks_no_value": [
            "select",
            "section_description",
            "from",
            "sections",
            "where",
            "section_name",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                26,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            25,
                            false
                        ],
                        null
                    ],
                    "\"h\"",
                    null
                ]
            ]
        },
        "question": "list section description of section with section name equal to value",
        "gold_question": "list section description of section with section name equal to value",
        "question_toks": [
            "list",
            "section",
            "description",
            "of",
            "section",
            "with",
            "section",
            "name",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT section_description FROM Sections WHERE section_name  =  'h'",
        "query_toks": [
            "SELECT",
            "section_description",
            "FROM",
            "Sections",
            "WHERE",
            "section_name",
            "=",
            "'h",
            "'"
        ],
        "query_toks_no_value": [
            "select",
            "section_description",
            "from",
            "sections",
            "where",
            "section_name",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                26,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            25,
                            false
                        ],
                        null
                    ],
                    "\"h\"",
                    null
                ]
            ]
        },
        "question": "list section description of section with section name equal to value",
        "gold_question": "list section description of section with section name equal to value",
        "question_toks": [
            "list",
            "section",
            "description",
            "of",
            "section",
            "with",
            "section",
            "name",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "select t1.first_name from students as t1 join addresses as t2 on t1.permanent_address_id  =  t2.address_id where t2.country  =  'haiti' or t1.cell_mobile_number  =  '09700166582'",
        "query_toks": [
            "select",
            "t1.first_name",
            "from",
            "students",
            "as",
            "t1",
            "join",
            "addresses",
            "as",
            "t2",
            "on",
            "t1.permanent_address_id",
            "=",
            "t2.address_id",
            "where",
            "t2.country",
            "=",
            "\"haiti\"",
            "or",
            "t1.cell_mobile_number",
            "=",
            "\"09700166582\""
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "first_name",
            "from",
            "students",
            "as",
            "t1",
            "join",
            "addresses",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "permanent_address_id",
            "=",
            "t2",
            ".",
            "address_id",
            "where",
            "t2",
            ".",
            "country",
            "=",
            "value",
            "or",
            "t1",
            ".",
            "cell_mobile_number",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                34,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                35,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ],
                    "\"haiti\"",
                    null
                ],
                "or",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            38,
                            false
                        ],
                        null
                    ],
                    "\"09700166582\"",
                    null
                ]
            ]
        },
        "question": "list first name of student with country of address equal to value or cell mobile number of student equal to value",
        "gold_question": "list first name of student with country of address equal to value or cell mobile number of student equal to value",
        "question_toks": [
            "list",
            "first",
            "name",
            "of",
            "student",
            "with",
            "country",
            "of",
            "address",
            "equal",
            "to",
            "value",
            "or",
            "cell",
            "mobile",
            "number",
            "of",
            "student",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "select t1.first_name from students as t1 join addresses as t2 on t1.permanent_address_id  =  t2.address_id where t2.country  =  'haiti' or t1.cell_mobile_number  =  '09700166582'",
        "query_toks": [
            "select",
            "t1.first_name",
            "from",
            "students",
            "as",
            "t1",
            "join",
            "addresses",
            "as",
            "t2",
            "on",
            "t1.permanent_address_id",
            "=",
            "t2.address_id",
            "where",
            "t2.country",
            "=",
            "\"haiti\"",
            "or",
            "t1.cell_mobile_number",
            "=",
            "\"09700166582\""
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "first_name",
            "from",
            "students",
            "as",
            "t1",
            "join",
            "addresses",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "permanent_address_id",
            "=",
            "t2",
            ".",
            "address_id",
            "where",
            "t2",
            ".",
            "country",
            "=",
            "value",
            "or",
            "t1",
            ".",
            "cell_mobile_number",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                34,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                35,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ],
                    "\"haiti\"",
                    null
                ],
                "or",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            38,
                            false
                        ],
                        null
                    ],
                    "\"09700166582\"",
                    null
                ]
            ]
        },
        "question": "list first name of student with city of address equal to value or cell mobile number of student equal to value",
        "gold_question": "list first name of student with country of address equal to value or cell mobile number of student equal to value",
        "question_toks": [
            "list",
            "first",
            "name",
            "of",
            "student",
            "with",
            "city",
            "of",
            "address",
            "equal",
            "to",
            "value",
            "or",
            "cell",
            "mobile",
            "number",
            "of",
            "student",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "tvshow",
        "query": "SELECT Title FROM Cartoon ORDER BY title",
        "query_toks": [
            "SELECT",
            "Title",
            "FROM",
            "Cartoon",
            "ORDER",
            "BY",
            "title"
        ],
        "query_toks_no_value": [
            "select",
            "title",
            "from",
            "cartoon",
            "order",
            "by",
            "title"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            20,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                20,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list title of cartoon ordered by title ascendingly",
        "gold_question": "list title of cartoon ordered by title ascendingly",
        "question_toks": [
            "list",
            "title",
            "of",
            "cartoon",
            "ordered",
            "by",
            "title",
            "ascendingly"
        ]
    },
    {
        "db_id": "tvshow",
        "query": "SELECT Title FROM Cartoon ORDER BY title",
        "query_toks": [
            "SELECT",
            "Title",
            "FROM",
            "Cartoon",
            "ORDER",
            "BY",
            "title"
        ],
        "query_toks_no_value": [
            "select",
            "title",
            "from",
            "cartoon",
            "order",
            "by",
            "title"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            20,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                20,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list title of cartoon ordered by title ascendingly",
        "gold_question": "list title of cartoon ordered by title ascendingly",
        "question_toks": [
            "list",
            "title",
            "of",
            "cartoon",
            "ordered",
            "by",
            "title",
            "ascendingly"
        ]
    },
    {
        "db_id": "tvshow",
        "query": "SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\";",
        "query_toks": [
            "SELECT",
            "Title",
            "FROM",
            "Cartoon",
            "WHERE",
            "Directed_by",
            "=",
            "``",
            "Ben",
            "Jones",
            "''",
            ";"
        ],
        "query_toks_no_value": [
            "select",
            "title",
            "from",
            "cartoon",
            "where",
            "directed_by",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                20,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            21,
                            false
                        ],
                        null
                    ],
                    "\"Ben Jones\"",
                    null
                ]
            ]
        },
        "question": "list title of cartoon with directed by equal to value",
        "gold_question": "list title of cartoon with directed by equal to value",
        "question_toks": [
            "list",
            "title",
            "of",
            "cartoon",
            "with",
            "directed",
            "by",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "tvshow",
        "query": "SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\";",
        "query_toks": [
            "SELECT",
            "Title",
            "FROM",
            "Cartoon",
            "WHERE",
            "Directed_by",
            "=",
            "``",
            "Ben",
            "Jones",
            "''",
            ";"
        ],
        "query_toks_no_value": [
            "select",
            "title",
            "from",
            "cartoon",
            "where",
            "directed_by",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                20,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            21,
                            false
                        ],
                        null
                    ],
                    "\"Ben Jones\"",
                    null
                ]
            ]
        },
        "question": "list title of cartoon with directed by equal to value",
        "gold_question": "list title of cartoon with directed by equal to value",
        "question_toks": [
            "list",
            "title",
            "of",
            "cartoon",
            "with",
            "directed",
            "by",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "tvshow",
        "query": "SELECT count(*) FROM Cartoon WHERE Written_by = \"Joseph Kuhr\";",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "Cartoon",
            "WHERE",
            "Written_by",
            "=",
            "``",
            "Joseph",
            "Kuhr",
            "''",
            ";"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "cartoon",
            "where",
            "written_by",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            22,
                            false
                        ],
                        null
                    ],
                    "\"Joseph Kuhr\"",
                    null
                ]
            ]
        },
        "question": "list the total number of cartoon with written by equal to value",
        "gold_question": "list the total number of cartoon with written by equal to value",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "cartoon",
            "with",
            "written",
            "by",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "tvshow",
        "query": "SELECT count(*) FROM Cartoon WHERE Written_by = \"Joseph Kuhr\";",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "Cartoon",
            "WHERE",
            "Written_by",
            "=",
            "``",
            "Joseph",
            "Kuhr",
            "''",
            ";"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "cartoon",
            "where",
            "written_by",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            22,
                            false
                        ],
                        null
                    ],
                    "\"Joseph Kuhr\"",
                    null
                ]
            ]
        },
        "question": "list the total number of cartoon with written by equal to value",
        "gold_question": "list the total number of cartoon with written by equal to value",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "cartoon",
            "with",
            "written",
            "by",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "tvshow",
        "query": "SELECT title ,  Directed_by FROM Cartoon ORDER BY Original_air_date",
        "query_toks": [
            "SELECT",
            "title",
            ",",
            "Directed_by",
            "FROM",
            "Cartoon",
            "ORDER",
            "BY",
            "Original_air_date"
        ],
        "query_toks_no_value": [
            "select",
            "title",
            ",",
            "directed_by",
            "from",
            "cartoon",
            "order",
            "by",
            "original_air_date"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            23,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                20,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                21,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list title directed by of cartoon ordered by original air date ascendingly",
        "gold_question": "list title directed by of cartoon ordered by original air date ascendingly",
        "question_toks": [
            "list",
            "title",
            "directed",
            "by",
            "of",
            "cartoon",
            "ordered",
            "by",
            "original",
            "air",
            "date",
            "ascendingly"
        ]
    },
    {
        "db_id": "tvshow",
        "query": "SELECT title ,  Directed_by FROM Cartoon ORDER BY Original_air_date",
        "query_toks": [
            "SELECT",
            "title",
            ",",
            "Directed_by",
            "FROM",
            "Cartoon",
            "ORDER",
            "BY",
            "Original_air_date"
        ],
        "query_toks_no_value": [
            "select",
            "title",
            ",",
            "directed_by",
            "from",
            "cartoon",
            "order",
            "by",
            "original_air_date"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            23,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                20,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                21,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list title directed by of cartoon ordered by original air date ascendingly",
        "gold_question": "list title directed by of cartoon ordered by original air date ascendingly",
        "question_toks": [
            "list",
            "title",
            "directed",
            "by",
            "of",
            "cartoon",
            "ordered",
            "by",
            "original",
            "air",
            "date",
            "ascendingly"
        ]
    },
    {
        "db_id": "tvshow",
        "query": "SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\" OR Directed_by = \"Brandon Vietti\";",
        "query_toks": [
            "SELECT",
            "Title",
            "FROM",
            "Cartoon",
            "WHERE",
            "Directed_by",
            "=",
            "``",
            "Ben",
            "Jones",
            "''",
            "OR",
            "Directed_by",
            "=",
            "``",
            "Brandon",
            "Vietti",
            "''",
            ";"
        ],
        "query_toks_no_value": [
            "select",
            "title",
            "from",
            "cartoon",
            "where",
            "directed_by",
            "=",
            "value",
            "or",
            "directed_by",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                20,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            21,
                            false
                        ],
                        null
                    ],
                    "\"Ben Jones\"",
                    null
                ],
                "or",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            21,
                            false
                        ],
                        null
                    ],
                    "\"Brandon Vietti\"",
                    null
                ]
            ]
        },
        "question": "list title of cartoon with directed by equal to value or directed by equal to value",
        "gold_question": "list title of cartoon with directed by equal to value or directed by equal to value",
        "question_toks": [
            "list",
            "title",
            "of",
            "cartoon",
            "with",
            "directed",
            "by",
            "equal",
            "to",
            "value",
            "or",
            "directed",
            "by",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "tvshow",
        "query": "SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\" OR Directed_by = \"Brandon Vietti\";",
        "query_toks": [
            "SELECT",
            "Title",
            "FROM",
            "Cartoon",
            "WHERE",
            "Directed_by",
            "=",
            "``",
            "Ben",
            "Jones",
            "''",
            "OR",
            "Directed_by",
            "=",
            "``",
            "Brandon",
            "Vietti",
            "''",
            ";"
        ],
        "query_toks_no_value": [
            "select",
            "title",
            "from",
            "cartoon",
            "where",
            "directed_by",
            "=",
            "value",
            "or",
            "directed_by",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                20,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            21,
                            false
                        ],
                        null
                    ],
                    "\"Ben Jones\"",
                    null
                ],
                "or",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            21,
                            false
                        ],
                        null
                    ],
                    "\"Brandon Vietti\"",
                    null
                ]
            ]
        },
        "question": "list title of cartoon with directed by equal to value or directed by equal to value",
        "gold_question": "list title of cartoon with directed by equal to value or directed by equal to value",
        "question_toks": [
            "list",
            "title",
            "of",
            "cartoon",
            "with",
            "directed",
            "by",
            "equal",
            "to",
            "value",
            "or",
            "directed",
            "by",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "tvshow",
        "query": "SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1;",
        "query_toks": [
            "SELECT",
            "Country",
            ",",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "TV_Channel",
            "GROUP",
            "BY",
            "Country",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1",
            ";"
        ],
        "query_toks_no_value": [
            "select",
            "country",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "tv_channel",
            "group",
            "by",
            "country",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    3,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of country the total number of tv channel for each country ordered by the total number of tv channel descendingly",
        "gold_question": "list top value items of country the total number of tv channel for each country ordered by the total number of tv channel descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "country",
            "the",
            "total",
            "number",
            "of",
            "tv",
            "channel",
            "for",
            "each",
            "country",
            "ordered",
            "by",
            "the",
            "total",
            "number",
            "of",
            "tv",
            "channel",
            "descendingly"
        ]
    },
    {
        "db_id": "tvshow",
        "query": "SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1;",
        "query_toks": [
            "SELECT",
            "Country",
            ",",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "TV_Channel",
            "GROUP",
            "BY",
            "Country",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1",
            ";"
        ],
        "query_toks_no_value": [
            "select",
            "country",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "tv_channel",
            "group",
            "by",
            "country",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    3,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of country the total number of tv channel for each country ordered by the total number of tv channel descendingly",
        "gold_question": "list top value items of country the total number of tv channel for each country ordered by the total number of tv channel descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "country",
            "the",
            "total",
            "number",
            "of",
            "tv",
            "channel",
            "for",
            "each",
            "country",
            "ordered",
            "by",
            "the",
            "total",
            "number",
            "of",
            "tv",
            "channel",
            "descendingly"
        ]
    },
    {
        "db_id": "tvshow",
        "query": "SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel;",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "DISTINCT",
            "series_name",
            ")",
            ",",
            "count",
            "(",
            "DISTINCT",
            "content",
            ")",
            "FROM",
            "TV_Channel",
            ";"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "distinct",
            "series_name",
            ")",
            ",",
            "count",
            "(",
            "distinct",
            "content",
            ")",
            "from",
            "tv_channel"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                2,
                                true
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                5,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list the number of series name content of tv channel",
        "gold_question": "list the number of series name the number of content of tv channel",
        "question_toks": [
            "list",
            "the",
            "number",
            "of",
            "series",
            "name",
            "content",
            "of",
            "tv",
            "channel"
        ]
    },
    {
        "db_id": "tvshow",
        "query": "SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel;",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "DISTINCT",
            "series_name",
            ")",
            ",",
            "count",
            "(",
            "DISTINCT",
            "content",
            ")",
            "FROM",
            "TV_Channel",
            ";"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "distinct",
            "series_name",
            ")",
            ",",
            "count",
            "(",
            "distinct",
            "content",
            ")",
            "from",
            "tv_channel"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                2,
                                true
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                5,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list the number of series name content of tv channel",
        "gold_question": "list the number of series name the number of content of tv channel",
        "question_toks": [
            "list",
            "the",
            "number",
            "of",
            "series",
            "name",
            "content",
            "of",
            "tv",
            "channel"
        ]
    },
    {
        "db_id": "tvshow",
        "query": "SELECT Content FROM TV_Channel WHERE series_name = \"Sky Radio\";",
        "query_toks": [
            "SELECT",
            "Content",
            "FROM",
            "TV_Channel",
            "WHERE",
            "series_name",
            "=",
            "``",
            "Sky",
            "Radio",
            "''",
            ";"
        ],
        "query_toks_no_value": [
            "select",
            "content",
            "from",
            "tv_channel",
            "where",
            "series_name",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"Sky Radio\"",
                    null
                ]
            ]
        },
        "question": "list content of tv channel with series name equal to value",
        "gold_question": "list content of tv channel with series name equal to value",
        "question_toks": [
            "list",
            "content",
            "of",
            "tv",
            "channel",
            "with",
            "series",
            "name",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "tvshow",
        "query": "SELECT Content FROM TV_Channel WHERE series_name = \"Sky Radio\";",
        "query_toks": [
            "SELECT",
            "Content",
            "FROM",
            "TV_Channel",
            "WHERE",
            "series_name",
            "=",
            "``",
            "Sky",
            "Radio",
            "''",
            ";"
        ],
        "query_toks_no_value": [
            "select",
            "content",
            "from",
            "tv_channel",
            "where",
            "series_name",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"Sky Radio\"",
                    null
                ]
            ]
        },
        "question": "list content of tv channel with series name equal to value",
        "gold_question": "list content of tv channel with series name equal to value",
        "question_toks": [
            "list",
            "content",
            "of",
            "tv",
            "channel",
            "with",
            "series",
            "name",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "tvshow",
        "query": "SELECT Package_Option FROM TV_Channel WHERE series_name = \"Sky Radio\";",
        "query_toks": [
            "SELECT",
            "Package_Option",
            "FROM",
            "TV_Channel",
            "WHERE",
            "series_name",
            "=",
            "``",
            "Sky",
            "Radio",
            "''",
            ";"
        ],
        "query_toks_no_value": [
            "select",
            "package_option",
            "from",
            "tv_channel",
            "where",
            "series_name",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"Sky Radio\"",
                    null
                ]
            ]
        },
        "question": "list package option of tv channel with series name equal to value",
        "gold_question": "list package option of tv channel with series name equal to value",
        "question_toks": [
            "list",
            "package",
            "option",
            "of",
            "tv",
            "channel",
            "with",
            "series",
            "name",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "tvshow",
        "query": "SELECT Package_Option FROM TV_Channel WHERE series_name = \"Sky Radio\";",
        "query_toks": [
            "SELECT",
            "Package_Option",
            "FROM",
            "TV_Channel",
            "WHERE",
            "series_name",
            "=",
            "``",
            "Sky",
            "Radio",
            "''",
            ";"
        ],
        "query_toks_no_value": [
            "select",
            "package_option",
            "from",
            "tv_channel",
            "where",
            "series_name",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"Sky Radio\"",
                    null
                ]
            ]
        },
        "question": "list package option of tv channel with series name equal to value",
        "gold_question": "list package option of tv channel with series name equal to value",
        "question_toks": [
            "list",
            "package",
            "option",
            "of",
            "tv",
            "channel",
            "with",
            "series",
            "name",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "tvshow",
        "query": "SELECT count(*) FROM TV_Channel WHERE LANGUAGE = \"English\";",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "TV_Channel",
            "WHERE",
            "LANGUAGE",
            "=",
            "``",
            "English",
            "''",
            ";"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "tv_channel",
            "where",
            "language",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ],
                    "\"English\"",
                    null
                ]
            ]
        },
        "question": "list the total number of tv channel with language equal to value",
        "gold_question": "list the total number of tv channel with language equal to value",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "tv",
            "channel",
            "with",
            "language",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "tvshow",
        "query": "SELECT count(*) FROM TV_Channel WHERE LANGUAGE = \"English\";",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "TV_Channel",
            "WHERE",
            "LANGUAGE",
            "=",
            "``",
            "English",
            "''",
            ";"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "tv_channel",
            "where",
            "language",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ],
                    "\"English\"",
                    null
                ]
            ]
        },
        "question": "list the total number of tv channel with language equal to value",
        "gold_question": "list the total number of tv channel with language equal to value",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "tv",
            "channel",
            "with",
            "language",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "tvshow",
        "query": "SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1;",
        "query_toks": [
            "SELECT",
            "LANGUAGE",
            ",",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "TV_Channel",
            "GROUP",
            "BY",
            "LANGUAGE",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "ASC",
            "LIMIT",
            "1",
            ";"
        ],
        "query_toks_no_value": [
            "select",
            "language",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "tv_channel",
            "group",
            "by",
            "language",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "asc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    4,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "asc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of language the total number of tv channel for each language ordered by the total number of tv channel ascendingly",
        "gold_question": "list top value items of language the total number of tv channel for each language ordered by the total number of tv channel ascendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "language",
            "the",
            "total",
            "number",
            "of",
            "tv",
            "channel",
            "for",
            "each",
            "language",
            "ordered",
            "by",
            "the",
            "total",
            "number",
            "of",
            "tv",
            "channel",
            "ascendingly"
        ]
    },
    {
        "db_id": "tvshow",
        "query": "SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1;",
        "query_toks": [
            "SELECT",
            "LANGUAGE",
            ",",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "TV_Channel",
            "GROUP",
            "BY",
            "LANGUAGE",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "ASC",
            "LIMIT",
            "1",
            ";"
        ],
        "query_toks_no_value": [
            "select",
            "language",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "tv_channel",
            "group",
            "by",
            "language",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "asc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    4,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "asc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of language the total number of tv channel for each language ordered by the total number of tv channel ascendingly",
        "gold_question": "list top value items of language the total number of tv channel for each language ordered by the total number of tv channel ascendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "language",
            "the",
            "total",
            "number",
            "of",
            "tv",
            "channel",
            "for",
            "each",
            "language",
            "ordered",
            "by",
            "the",
            "total",
            "number",
            "of",
            "tv",
            "channel",
            "ascendingly"
        ]
    },
    {
        "db_id": "tvshow",
        "query": "SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE",
        "query_toks": [
            "SELECT",
            "LANGUAGE",
            ",",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "TV_Channel",
            "GROUP",
            "BY",
            "LANGUAGE"
        ],
        "query_toks_no_value": [
            "select",
            "language",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "tv_channel",
            "group",
            "by",
            "language"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    4,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list language the total number of tv channel for each language",
        "gold_question": "list language the total number of tv channel for each language",
        "question_toks": [
            "list",
            "language",
            "the",
            "total",
            "number",
            "of",
            "tv",
            "channel",
            "for",
            "each",
            "language"
        ]
    },
    {
        "db_id": "tvshow",
        "query": "SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE",
        "query_toks": [
            "SELECT",
            "LANGUAGE",
            ",",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "TV_Channel",
            "GROUP",
            "BY",
            "LANGUAGE"
        ],
        "query_toks_no_value": [
            "select",
            "language",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "tv_channel",
            "group",
            "by",
            "language"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    4,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list language the total number of tv channel for each language",
        "gold_question": "list language the total number of tv channel for each language",
        "question_toks": [
            "list",
            "language",
            "the",
            "total",
            "number",
            "of",
            "tv",
            "channel",
            "for",
            "each",
            "language"
        ]
    },
    {
        "db_id": "tvshow",
        "query": "SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = \"The Rise of the Blue Beetle!\";",
        "query_toks": [
            "SELECT",
            "T1.series_name",
            "FROM",
            "TV_Channel",
            "AS",
            "T1",
            "JOIN",
            "Cartoon",
            "AS",
            "T2",
            "ON",
            "T1.id",
            "=",
            "T2.Channel",
            "WHERE",
            "T2.Title",
            "=",
            "``",
            "The",
            "Rise",
            "of",
            "the",
            "Blue",
            "Beetle",
            "!",
            "``",
            ";"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "series_name",
            "from",
            "tv_channel",
            "as",
            "t1",
            "join",
            "cartoon",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "id",
            "=",
            "t2",
            ".",
            "channel",
            "where",
            "t2",
            ".",
            "title",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            25,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            20,
                            false
                        ],
                        null
                    ],
                    "\"The Rise of the Blue Beetle!\"",
                    null
                ]
            ]
        },
        "question": "list series name of tv channel with title of cartoon equal to value",
        "gold_question": "list series name of tv channel with title of cartoon equal to value",
        "question_toks": [
            "list",
            "series",
            "name",
            "of",
            "tv",
            "channel",
            "with",
            "title",
            "of",
            "cartoon",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "tvshow",
        "query": "SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = \"The Rise of the Blue Beetle!\";",
        "query_toks": [
            "SELECT",
            "T1.series_name",
            "FROM",
            "TV_Channel",
            "AS",
            "T1",
            "JOIN",
            "Cartoon",
            "AS",
            "T2",
            "ON",
            "T1.id",
            "=",
            "T2.Channel",
            "WHERE",
            "T2.Title",
            "=",
            "``",
            "The",
            "Rise",
            "of",
            "the",
            "Blue",
            "Beetle",
            "!",
            "``",
            ";"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "series_name",
            "from",
            "tv_channel",
            "as",
            "t1",
            "join",
            "cartoon",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "id",
            "=",
            "t2",
            ".",
            "channel",
            "where",
            "t2",
            ".",
            "title",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            25,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            20,
                            false
                        ],
                        null
                    ],
                    "\"The Rise of the Blue Beetle!\"",
                    null
                ]
            ]
        },
        "question": "list series name of tv channel with title of cartoon equal to value",
        "gold_question": "list series name of tv channel with title of cartoon equal to value",
        "question_toks": [
            "list",
            "series",
            "name",
            "of",
            "tv",
            "channel",
            "with",
            "title",
            "of",
            "cartoon",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "tvshow",
        "query": "SELECT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = \"Sky Radio\";",
        "query_toks": [
            "SELECT",
            "T2.Title",
            "FROM",
            "TV_Channel",
            "AS",
            "T1",
            "JOIN",
            "Cartoon",
            "AS",
            "T2",
            "ON",
            "T1.id",
            "=",
            "T2.Channel",
            "WHERE",
            "T1.series_name",
            "=",
            "``",
            "Sky",
            "Radio",
            "''",
            ";"
        ],
        "query_toks_no_value": [
            "select",
            "t2",
            ".",
            "title",
            "from",
            "tv_channel",
            "as",
            "t1",
            "join",
            "cartoon",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "id",
            "=",
            "t2",
            ".",
            "channel",
            "where",
            "t1",
            ".",
            "series_name",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            25,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                20,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"Sky Radio\"",
                    null
                ]
            ]
        },
        "question": "list title of cartoon with series name of tv channel equal to value",
        "gold_question": "list title of cartoon with series name of tv channel equal to value",
        "question_toks": [
            "list",
            "title",
            "of",
            "cartoon",
            "with",
            "series",
            "name",
            "of",
            "tv",
            "channel",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "tvshow",
        "query": "SELECT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = \"Sky Radio\";",
        "query_toks": [
            "SELECT",
            "T2.Title",
            "FROM",
            "TV_Channel",
            "AS",
            "T1",
            "JOIN",
            "Cartoon",
            "AS",
            "T2",
            "ON",
            "T1.id",
            "=",
            "T2.Channel",
            "WHERE",
            "T1.series_name",
            "=",
            "``",
            "Sky",
            "Radio",
            "''",
            ";"
        ],
        "query_toks_no_value": [
            "select",
            "t2",
            ".",
            "title",
            "from",
            "tv_channel",
            "as",
            "t1",
            "join",
            "cartoon",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "id",
            "=",
            "t2",
            ".",
            "channel",
            "where",
            "t1",
            ".",
            "series_name",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            25,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                20,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"Sky Radio\"",
                    null
                ]
            ]
        },
        "question": "list title of cartoon with series name of tv channel equal to value",
        "gold_question": "list title of cartoon with series name of tv channel equal to value",
        "question_toks": [
            "list",
            "title",
            "of",
            "cartoon",
            "with",
            "series",
            "name",
            "of",
            "tv",
            "channel",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "tvshow",
        "query": "SELECT Episode FROM TV_series ORDER BY rating",
        "query_toks": [
            "SELECT",
            "Episode",
            "FROM",
            "TV_series",
            "ORDER",
            "BY",
            "rating"
        ],
        "query_toks_no_value": [
            "select",
            "episode",
            "from",
            "tv_series",
            "order",
            "by",
            "rating"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list episode of tv sery ordered by rate ascendingly",
        "gold_question": "list episode of tv sery ordered by rate ascendingly",
        "question_toks": [
            "list",
            "episode",
            "of",
            "tv",
            "sery",
            "ordered",
            "by",
            "rate",
            "ascendingly"
        ]
    },
    {
        "db_id": "tvshow",
        "query": "SELECT Episode FROM TV_series ORDER BY rating",
        "query_toks": [
            "SELECT",
            "Episode",
            "FROM",
            "TV_series",
            "ORDER",
            "BY",
            "rating"
        ],
        "query_toks_no_value": [
            "select",
            "episode",
            "from",
            "tv_series",
            "order",
            "by",
            "rating"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list episode of tv sery ordered by rate ascendingly",
        "gold_question": "list episode of tv sery ordered by rate ascendingly",
        "question_toks": [
            "list",
            "episode",
            "of",
            "tv",
            "sery",
            "ordered",
            "by",
            "rate",
            "ascendingly"
        ]
    },
    {
        "db_id": "tvshow",
        "query": "SELECT Episode ,  Rating FROM TV_series ORDER BY Rating DESC LIMIT 3;",
        "query_toks": [
            "SELECT",
            "Episode",
            ",",
            "Rating",
            "FROM",
            "TV_series",
            "ORDER",
            "BY",
            "Rating",
            "DESC",
            "LIMIT",
            "3",
            ";"
        ],
        "query_toks_no_value": [
            "select",
            "episode",
            ",",
            "rating",
            "from",
            "tv_series",
            "order",
            "by",
            "rating",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": 3,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of episode rate of tv sery ordered by rate descendingly",
        "gold_question": "list top value items of episode rate of tv sery ordered by rate descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "episode",
            "rate",
            "of",
            "tv",
            "sery",
            "ordered",
            "by",
            "rate",
            "descendingly"
        ]
    },
    {
        "db_id": "tvshow",
        "query": "SELECT Episode ,  Rating FROM TV_series ORDER BY Rating DESC LIMIT 3;",
        "query_toks": [
            "SELECT",
            "Episode",
            ",",
            "Rating",
            "FROM",
            "TV_series",
            "ORDER",
            "BY",
            "Rating",
            "DESC",
            "LIMIT",
            "3",
            ";"
        ],
        "query_toks_no_value": [
            "select",
            "episode",
            ",",
            "rating",
            "from",
            "tv_series",
            "order",
            "by",
            "rating",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": 3,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of episode rate of tv sery ordered by rate descendingly",
        "gold_question": "list top value items of episode rate of tv sery ordered by rate descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "episode",
            "rate",
            "of",
            "tv",
            "sery",
            "ordered",
            "by",
            "rate",
            "descendingly"
        ]
    },
    {
        "db_id": "tvshow",
        "query": "SELECT max(SHARE) , min(SHARE) FROM TV_series;",
        "query_toks": [
            "SELECT",
            "max",
            "(",
            "SHARE",
            ")",
            ",",
            "min",
            "(",
            "SHARE",
            ")",
            "FROM",
            "TV_series",
            ";"
        ],
        "query_toks_no_value": [
            "select",
            "max",
            "(",
            "share",
            ")",
            ",",
            "min",
            "(",
            "share",
            ")",
            "from",
            "tv_series"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list the minimum of share the maximum of share of tv sery",
        "gold_question": "list the maximum of share the minimum of share of tv sery",
        "question_toks": [
            "list",
            "the",
            "minimum",
            "of",
            "share",
            "the",
            "maximum",
            "of",
            "share",
            "of",
            "tv",
            "sery"
        ]
    },
    {
        "db_id": "tvshow",
        "query": "SELECT max(SHARE) , min(SHARE) FROM TV_series;",
        "query_toks": [
            "SELECT",
            "max",
            "(",
            "SHARE",
            ")",
            ",",
            "min",
            "(",
            "SHARE",
            ")",
            "FROM",
            "TV_series",
            ";"
        ],
        "query_toks_no_value": [
            "select",
            "max",
            "(",
            "share",
            ")",
            ",",
            "min",
            "(",
            "share",
            ")",
            "from",
            "tv_series"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list the maximum of share the minimum of share of tv sery",
        "gold_question": "list the maximum of share the minimum of share of tv sery",
        "question_toks": [
            "list",
            "the",
            "maximum",
            "of",
            "share",
            "the",
            "minimum",
            "of",
            "share",
            "of",
            "tv",
            "sery"
        ]
    },
    {
        "db_id": "tvshow",
        "query": "SELECT Air_Date FROM TV_series WHERE Episode = \"A Love of a Lifetime\";",
        "query_toks": [
            "SELECT",
            "Air_Date",
            "FROM",
            "TV_series",
            "WHERE",
            "Episode",
            "=",
            "``",
            "A",
            "Love",
            "of",
            "a",
            "Lifetime",
            "''",
            ";"
        ],
        "query_toks_no_value": [
            "select",
            "air_date",
            "from",
            "tv_series",
            "where",
            "episode",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    "\"A Love of a Lifetime\"",
                    null
                ]
            ]
        },
        "question": "list air date of tv sery with episode equal to value",
        "gold_question": "list air date of tv sery with episode equal to value",
        "question_toks": [
            "list",
            "air",
            "date",
            "of",
            "tv",
            "sery",
            "with",
            "episode",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "tvshow",
        "query": "SELECT Air_Date FROM TV_series WHERE Episode = \"A Love of a Lifetime\";",
        "query_toks": [
            "SELECT",
            "Air_Date",
            "FROM",
            "TV_series",
            "WHERE",
            "Episode",
            "=",
            "``",
            "A",
            "Love",
            "of",
            "a",
            "Lifetime",
            "''",
            ";"
        ],
        "query_toks_no_value": [
            "select",
            "air_date",
            "from",
            "tv_series",
            "where",
            "episode",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    "\"A Love of a Lifetime\"",
                    null
                ]
            ]
        },
        "question": "list air date with episode of tv sery equal to value",
        "gold_question": "list air date of tv sery with episode equal to value",
        "question_toks": [
            "list",
            "air",
            "date",
            "with",
            "episode",
            "of",
            "tv",
            "sery",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "tvshow",
        "query": "SELECT Weekly_Rank FROM TV_series WHERE Episode = \"A Love of a Lifetime\";",
        "query_toks": [
            "SELECT",
            "Weekly_Rank",
            "FROM",
            "TV_series",
            "WHERE",
            "Episode",
            "=",
            "``",
            "A",
            "Love",
            "of",
            "a",
            "Lifetime",
            "''",
            ";"
        ],
        "query_toks_no_value": [
            "select",
            "weekly_rank",
            "from",
            "tv_series",
            "where",
            "episode",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                17,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    "\"A Love of a Lifetime\"",
                    null
                ]
            ]
        },
        "question": "list weekly rank of tv sery with episode equal to value",
        "gold_question": "list weekly rank of tv sery with episode equal to value",
        "question_toks": [
            "list",
            "weekly",
            "rank",
            "of",
            "tv",
            "sery",
            "with",
            "episode",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "tvshow",
        "query": "SELECT Weekly_Rank FROM TV_series WHERE Episode = \"A Love of a Lifetime\";",
        "query_toks": [
            "SELECT",
            "Weekly_Rank",
            "FROM",
            "TV_series",
            "WHERE",
            "Episode",
            "=",
            "``",
            "A",
            "Love",
            "of",
            "a",
            "Lifetime",
            "''",
            ";"
        ],
        "query_toks_no_value": [
            "select",
            "weekly_rank",
            "from",
            "tv_series",
            "where",
            "episode",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                17,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    "\"A Love of a Lifetime\"",
                    null
                ]
            ]
        },
        "question": "list weekly rank of tv sery with episode equal to value",
        "gold_question": "list weekly rank of tv sery with episode equal to value",
        "question_toks": [
            "list",
            "weekly",
            "rank",
            "of",
            "tv",
            "sery",
            "with",
            "episode",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "tvshow",
        "query": "SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = \"A Love of a Lifetime\";",
        "query_toks": [
            "SELECT",
            "T1.series_name",
            "FROM",
            "TV_Channel",
            "AS",
            "T1",
            "JOIN",
            "TV_series",
            "AS",
            "T2",
            "ON",
            "T1.id",
            "=",
            "T2.Channel",
            "WHERE",
            "T2.Episode",
            "=",
            "``",
            "A",
            "Love",
            "of",
            "a",
            "Lifetime",
            "''",
            ";"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "series_name",
            "from",
            "tv_channel",
            "as",
            "t1",
            "join",
            "tv_series",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "id",
            "=",
            "t2",
            ".",
            "channel",
            "where",
            "t2",
            ".",
            "episode",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            18,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    "\"A Love of a Lifetime\"",
                    null
                ]
            ]
        },
        "question": "list series name of tv channel with episode of tv sery equal to value",
        "gold_question": "list series name of tv channel with episode of tv sery equal to value",
        "question_toks": [
            "list",
            "series",
            "name",
            "of",
            "tv",
            "channel",
            "with",
            "episode",
            "of",
            "tv",
            "sery",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "tvshow",
        "query": "SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = \"A Love of a Lifetime\";",
        "query_toks": [
            "SELECT",
            "T1.series_name",
            "FROM",
            "TV_Channel",
            "AS",
            "T1",
            "JOIN",
            "TV_series",
            "AS",
            "T2",
            "ON",
            "T1.id",
            "=",
            "T2.Channel",
            "WHERE",
            "T2.Episode",
            "=",
            "``",
            "A",
            "Love",
            "of",
            "a",
            "Lifetime",
            "''",
            ";"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "series_name",
            "from",
            "tv_channel",
            "as",
            "t1",
            "join",
            "tv_series",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "id",
            "=",
            "t2",
            ".",
            "channel",
            "where",
            "t2",
            ".",
            "episode",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            18,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    "\"A Love of a Lifetime\"",
                    null
                ]
            ]
        },
        "question": "list series name of tv channel with episode of tv sery equal to value",
        "gold_question": "list series name of tv channel with episode of tv sery equal to value",
        "question_toks": [
            "list",
            "series",
            "name",
            "of",
            "tv",
            "channel",
            "with",
            "episode",
            "of",
            "tv",
            "sery",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "tvshow",
        "query": "SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = \"Sky Radio\";",
        "query_toks": [
            "SELECT",
            "T2.Episode",
            "FROM",
            "TV_Channel",
            "AS",
            "T1",
            "JOIN",
            "TV_series",
            "AS",
            "T2",
            "ON",
            "T1.id",
            "=",
            "T2.Channel",
            "WHERE",
            "T1.series_name",
            "=",
            "``",
            "Sky",
            "Radio",
            "''",
            ";"
        ],
        "query_toks_no_value": [
            "select",
            "t2",
            ".",
            "episode",
            "from",
            "tv_channel",
            "as",
            "t1",
            "join",
            "tv_series",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "id",
            "=",
            "t2",
            ".",
            "channel",
            "where",
            "t1",
            ".",
            "series_name",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            18,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"Sky Radio\"",
                    null
                ]
            ]
        },
        "question": "list episode of tv sery with series name of tv channel equal to value",
        "gold_question": "list episode of tv sery with series name of tv channel equal to value",
        "question_toks": [
            "list",
            "episode",
            "of",
            "tv",
            "sery",
            "with",
            "series",
            "name",
            "of",
            "tv",
            "channel",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "tvshow",
        "query": "SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = \"Sky Radio\";",
        "query_toks": [
            "SELECT",
            "T2.Episode",
            "FROM",
            "TV_Channel",
            "AS",
            "T1",
            "JOIN",
            "TV_series",
            "AS",
            "T2",
            "ON",
            "T1.id",
            "=",
            "T2.Channel",
            "WHERE",
            "T1.series_name",
            "=",
            "``",
            "Sky",
            "Radio",
            "''",
            ";"
        ],
        "query_toks_no_value": [
            "select",
            "t2",
            ".",
            "episode",
            "from",
            "tv_channel",
            "as",
            "t1",
            "join",
            "tv_series",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "id",
            "=",
            "t2",
            ".",
            "channel",
            "where",
            "t1",
            ".",
            "series_name",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            18,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"Sky Radio\"",
                    null
                ]
            ]
        },
        "question": "list episode of tv sery with series name of tv channel equal to value",
        "gold_question": "list episode of tv sery with series name of tv channel equal to value",
        "question_toks": [
            "list",
            "episode",
            "of",
            "tv",
            "sery",
            "with",
            "series",
            "name",
            "of",
            "tv",
            "channel",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "tvshow",
        "query": "SELECT count(*) ,  Directed_by FROM cartoon GROUP BY Directed_by",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            ",",
            "Directed_by",
            "FROM",
            "cartoon",
            "GROUP",
            "BY",
            "Directed_by"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            ",",
            "directed_by",
            "from",
            "cartoon",
            "group",
            "by",
            "directed_by"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    21,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                21,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list directed by the total number of cartoon for each directed by",
        "gold_question": "list the total number of cartoon directed by of cartoon for each directed by",
        "question_toks": [
            "list",
            "directed",
            "by",
            "the",
            "total",
            "number",
            "of",
            "cartoon",
            "for",
            "each",
            "directed",
            "by"
        ]
    },
    {
        "db_id": "tvshow",
        "query": "SELECT count(*) ,  Directed_by FROM cartoon GROUP BY Directed_by",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            ",",
            "Directed_by",
            "FROM",
            "cartoon",
            "GROUP",
            "BY",
            "Directed_by"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            ",",
            "directed_by",
            "from",
            "cartoon",
            "group",
            "by",
            "directed_by"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    21,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                21,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list directed by the total number of cartoon for each directed by",
        "gold_question": "list the total number of cartoon directed by of cartoon for each directed by",
        "question_toks": [
            "list",
            "directed",
            "by",
            "the",
            "total",
            "number",
            "of",
            "cartoon",
            "for",
            "each",
            "directed",
            "by"
        ]
    },
    {
        "db_id": "tvshow",
        "query": "select production_code ,  channel from cartoon order by original_air_date desc limit 1",
        "query_toks": [
            "select",
            "production_code",
            ",",
            "channel",
            "from",
            "cartoon",
            "order",
            "by",
            "original_air_date",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "production_code",
            ",",
            "channel",
            "from",
            "cartoon",
            "order",
            "by",
            "original_air_date",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            23,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                24,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                25,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of production code channel of cartoon ordered by original air date descendingly",
        "gold_question": "list top value items of production code channel of cartoon ordered by original air date descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "production",
            "code",
            "channel",
            "of",
            "cartoon",
            "ordered",
            "by",
            "original",
            "air",
            "date",
            "descendingly"
        ]
    },
    {
        "db_id": "tvshow",
        "query": "select production_code ,  channel from cartoon order by original_air_date desc limit 1",
        "query_toks": [
            "select",
            "production_code",
            ",",
            "channel",
            "from",
            "cartoon",
            "order",
            "by",
            "original_air_date",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "production_code",
            ",",
            "channel",
            "from",
            "cartoon",
            "order",
            "by",
            "original_air_date",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            23,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                24,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                25,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of production code channel of cartoon ordered by original air date descendingly",
        "gold_question": "list top value items of production code channel of cartoon ordered by original air date descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "production",
            "code",
            "channel",
            "of",
            "cartoon",
            "ordered",
            "by",
            "original",
            "air",
            "date",
            "descendingly"
        ]
    },
    {
        "db_id": "tvshow",
        "query": "SELECT package_option ,  series_name FROM TV_Channel WHERE hight_definition_TV  =  \"yes\"",
        "query_toks": [
            "SELECT",
            "package_option",
            ",",
            "series_name",
            "FROM",
            "TV_Channel",
            "WHERE",
            "hight_definition_TV",
            "=",
            "``",
            "yes",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "package_option",
            ",",
            "series_name",
            "from",
            "tv_channel",
            "where",
            "hight_definition_tv",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ],
                    "\"yes\"",
                    null
                ]
            ]
        },
        "question": "list package option series name of tv channel with hight definition tv equal to ( the maximum of hight definition tv of tv channel )",
        "gold_question": "list package option series name of tv channel with hight definition tv equal to value",
        "question_toks": [
            "list",
            "package",
            "option",
            "series",
            "name",
            "of",
            "tv",
            "channel",
            "with",
            "hight",
            "definition",
            "tv",
            "equal",
            "to",
            "(",
            "the",
            "maximum",
            "of",
            "hight",
            "definition",
            "tv",
            "of",
            "tv",
            "channel",
            ")"
        ]
    },
    {
        "db_id": "tvshow",
        "query": "SELECT package_option ,  series_name FROM TV_Channel WHERE hight_definition_TV  =  \"yes\"",
        "query_toks": [
            "SELECT",
            "package_option",
            ",",
            "series_name",
            "FROM",
            "TV_Channel",
            "WHERE",
            "hight_definition_TV",
            "=",
            "``",
            "yes",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "package_option",
            ",",
            "series_name",
            "from",
            "tv_channel",
            "where",
            "hight_definition_tv",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ],
                    "\"yes\"",
                    null
                ]
            ]
        },
        "question": "list package option series name of tv channel with hight definition tv equal to value",
        "gold_question": "list package option series name of tv channel with hight definition tv equal to value",
        "question_toks": [
            "list",
            "package",
            "option",
            "series",
            "name",
            "of",
            "tv",
            "channel",
            "with",
            "hight",
            "definition",
            "tv",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "tvshow",
        "query": "SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'",
        "query_toks": [
            "SELECT",
            "T1.country",
            "FROM",
            "TV_Channel",
            "AS",
            "T1",
            "JOIN",
            "cartoon",
            "AS",
            "T2",
            "ON",
            "T1.id",
            "=",
            "T2.Channel",
            "WHERE",
            "T2.written_by",
            "=",
            "'Todd",
            "Casey",
            "'"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "country",
            "from",
            "tv_channel",
            "as",
            "t1",
            "join",
            "cartoon",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "id",
            "=",
            "t2",
            ".",
            "channel",
            "where",
            "t2",
            ".",
            "written_by",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            25,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            22,
                            false
                        ],
                        null
                    ],
                    "\"Todd Casey\"",
                    null
                ]
            ]
        },
        "question": "list country of tv channel with written by of cartoon equal to value",
        "gold_question": "list country of tv channel with written by of cartoon equal to value",
        "question_toks": [
            "list",
            "country",
            "of",
            "tv",
            "channel",
            "with",
            "written",
            "by",
            "of",
            "cartoon",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "tvshow",
        "query": "SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'",
        "query_toks": [
            "SELECT",
            "T1.country",
            "FROM",
            "TV_Channel",
            "AS",
            "T1",
            "JOIN",
            "cartoon",
            "AS",
            "T2",
            "ON",
            "T1.id",
            "=",
            "T2.Channel",
            "WHERE",
            "T2.written_by",
            "=",
            "'Todd",
            "Casey",
            "'"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "country",
            "from",
            "tv_channel",
            "as",
            "t1",
            "join",
            "cartoon",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "id",
            "=",
            "t2",
            ".",
            "channel",
            "where",
            "t2",
            ".",
            "written_by",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            25,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            22,
                            false
                        ],
                        null
                    ],
                    "\"Todd Casey\"",
                    null
                ]
            ]
        },
        "question": "list country of tv channel with written by of cartoon equal to value",
        "gold_question": "list country of tv channel with written by of cartoon equal to value",
        "question_toks": [
            "list",
            "country",
            "of",
            "tv",
            "channel",
            "with",
            "written",
            "by",
            "of",
            "cartoon",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "tvshow",
        "query": "SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'",
        "query_toks": [
            "SELECT",
            "country",
            "FROM",
            "TV_Channel",
            "EXCEPT",
            "SELECT",
            "T1.country",
            "FROM",
            "TV_Channel",
            "AS",
            "T1",
            "JOIN",
            "cartoon",
            "AS",
            "T2",
            "ON",
            "T1.id",
            "=",
            "T2.Channel",
            "WHERE",
            "T2.written_by",
            "=",
            "'Todd",
            "Casey",
            "'"
        ],
        "query_toks_no_value": [
            "select",
            "country",
            "from",
            "tv_channel",
            "except",
            "select",
            "t1",
            ".",
            "country",
            "from",
            "tv_channel",
            "as",
            "t1",
            "join",
            "cartoon",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "id",
            "=",
            "t2",
            ".",
            "channel",
            "where",
            "t2",
            ".",
            "written_by",
            "=",
            "value"
        ],
        "sql": {
            "except": {
                "except": null,
                "from": {
                    "conds": [
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    1,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                25,
                                false
                            ],
                            null
                        ]
                    ],
                    "table_units": [
                        [
                            "table_unit",
                            0
                        ],
                        [
                            "table_unit",
                            2
                        ]
                    ]
                },
                "groupby": [],
                "having": [],
                "intersect": null,
                "limit": null,
                "orderby": [],
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    3,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "union": null,
                "where": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                22,
                                false
                            ],
                            null
                        ],
                        "\"Todd Casey\"",
                        null
                    ]
                ]
            },
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list country of tv channel except that list country of tv channel with written by of cartoon equal to value",
        "gold_question": "list country of tv channel except that list country of tv channel with written by of cartoon equal to value",
        "question_toks": [
            "list",
            "country",
            "of",
            "tv",
            "channel",
            "except",
            "that",
            "list",
            "country",
            "of",
            "tv",
            "channel",
            "with",
            "written",
            "by",
            "of",
            "cartoon",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "tvshow",
        "query": "SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'",
        "query_toks": [
            "SELECT",
            "country",
            "FROM",
            "TV_Channel",
            "EXCEPT",
            "SELECT",
            "T1.country",
            "FROM",
            "TV_Channel",
            "AS",
            "T1",
            "JOIN",
            "cartoon",
            "AS",
            "T2",
            "ON",
            "T1.id",
            "=",
            "T2.Channel",
            "WHERE",
            "T2.written_by",
            "=",
            "'Todd",
            "Casey",
            "'"
        ],
        "query_toks_no_value": [
            "select",
            "country",
            "from",
            "tv_channel",
            "except",
            "select",
            "t1",
            ".",
            "country",
            "from",
            "tv_channel",
            "as",
            "t1",
            "join",
            "cartoon",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "id",
            "=",
            "t2",
            ".",
            "channel",
            "where",
            "t2",
            ".",
            "written_by",
            "=",
            "value"
        ],
        "sql": {
            "except": {
                "except": null,
                "from": {
                    "conds": [
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    1,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                25,
                                false
                            ],
                            null
                        ]
                    ],
                    "table_units": [
                        [
                            "table_unit",
                            0
                        ],
                        [
                            "table_unit",
                            2
                        ]
                    ]
                },
                "groupby": [],
                "having": [],
                "intersect": null,
                "limit": null,
                "orderby": [],
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    3,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "union": null,
                "where": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                22,
                                false
                            ],
                            null
                        ],
                        "\"Todd Casey\"",
                        null
                    ]
                ]
            },
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list country of tv channel except that list country of tv channel with written by of cartoon equal to value",
        "gold_question": "list country of tv channel except that list country of tv channel with written by of cartoon equal to value",
        "question_toks": [
            "list",
            "country",
            "of",
            "tv",
            "channel",
            "except",
            "that",
            "list",
            "country",
            "of",
            "tv",
            "channel",
            "with",
            "written",
            "by",
            "of",
            "cartoon",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "tvshow",
        "query": "SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Michael Chang' INTERSECT SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Ben Jones'",
        "query_toks": [
            "SELECT",
            "T1.series_name",
            ",",
            "T1.country",
            "FROM",
            "TV_Channel",
            "AS",
            "T1",
            "JOIN",
            "cartoon",
            "AS",
            "T2",
            "ON",
            "T1.id",
            "=",
            "T2.Channel",
            "WHERE",
            "T2.directed_by",
            "=",
            "'Michael",
            "Chang",
            "'",
            "INTERSECT",
            "SELECT",
            "T1.series_name",
            ",",
            "T1.country",
            "FROM",
            "TV_Channel",
            "AS",
            "T1",
            "JOIN",
            "cartoon",
            "AS",
            "T2",
            "ON",
            "T1.id",
            "=",
            "T2.Channel",
            "WHERE",
            "T2.directed_by",
            "=",
            "'Ben",
            "Jones",
            "'"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "series_name",
            ",",
            "t1",
            ".",
            "country",
            "from",
            "tv_channel",
            "as",
            "t1",
            "join",
            "cartoon",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "id",
            "=",
            "t2",
            ".",
            "channel",
            "where",
            "t2",
            ".",
            "directed_by",
            "=",
            "value",
            "intersect",
            "select",
            "t1",
            ".",
            "series_name",
            ",",
            "t1",
            ".",
            "country",
            "from",
            "tv_channel",
            "as",
            "t1",
            "join",
            "cartoon",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "id",
            "=",
            "t2",
            ".",
            "channel",
            "where",
            "t2",
            ".",
            "directed_by",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            25,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": {
                "except": null,
                "from": {
                    "conds": [
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    1,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                25,
                                false
                            ],
                            null
                        ]
                    ],
                    "table_units": [
                        [
                            "table_unit",
                            0
                        ],
                        [
                            "table_unit",
                            2
                        ]
                    ]
                },
                "groupby": [],
                "having": [],
                "intersect": null,
                "limit": null,
                "orderby": [],
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    2,
                                    false
                                ],
                                null
                            ]
                        ],
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    3,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "union": null,
                "where": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                21,
                                false
                            ],
                            null
                        ],
                        "\"Ben Jones\"",
                        null
                    ]
                ]
            },
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            21,
                            false
                        ],
                        null
                    ],
                    "\"Michael Chang\"",
                    null
                ]
            ]
        },
        "question": "list series name of tv channel country of tv channel with directed by of cartoon equal to value and directed by of cartoon equal to value",
        "gold_question": "list series name of tv channel country of tv channel with directed by of cartoon equal to value and list series name of tv channel country of tv channel with directed by of cartoon equal to value",
        "question_toks": [
            "list",
            "series",
            "name",
            "of",
            "tv",
            "channel",
            "country",
            "of",
            "tv",
            "channel",
            "with",
            "directed",
            "by",
            "of",
            "cartoon",
            "equal",
            "to",
            "value",
            "and",
            "directed",
            "by",
            "of",
            "cartoon",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "tvshow",
        "query": "SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Michael Chang' INTERSECT SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Ben Jones'",
        "query_toks": [
            "SELECT",
            "T1.series_name",
            ",",
            "T1.country",
            "FROM",
            "TV_Channel",
            "AS",
            "T1",
            "JOIN",
            "cartoon",
            "AS",
            "T2",
            "ON",
            "T1.id",
            "=",
            "T2.Channel",
            "WHERE",
            "T2.directed_by",
            "=",
            "'Michael",
            "Chang",
            "'",
            "INTERSECT",
            "SELECT",
            "T1.series_name",
            ",",
            "T1.country",
            "FROM",
            "TV_Channel",
            "AS",
            "T1",
            "JOIN",
            "cartoon",
            "AS",
            "T2",
            "ON",
            "T1.id",
            "=",
            "T2.Channel",
            "WHERE",
            "T2.directed_by",
            "=",
            "'Ben",
            "Jones",
            "'"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "series_name",
            ",",
            "t1",
            ".",
            "country",
            "from",
            "tv_channel",
            "as",
            "t1",
            "join",
            "cartoon",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "id",
            "=",
            "t2",
            ".",
            "channel",
            "where",
            "t2",
            ".",
            "directed_by",
            "=",
            "value",
            "intersect",
            "select",
            "t1",
            ".",
            "series_name",
            ",",
            "t1",
            ".",
            "country",
            "from",
            "tv_channel",
            "as",
            "t1",
            "join",
            "cartoon",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "id",
            "=",
            "t2",
            ".",
            "channel",
            "where",
            "t2",
            ".",
            "directed_by",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            25,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": {
                "except": null,
                "from": {
                    "conds": [
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    1,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                25,
                                false
                            ],
                            null
                        ]
                    ],
                    "table_units": [
                        [
                            "table_unit",
                            0
                        ],
                        [
                            "table_unit",
                            2
                        ]
                    ]
                },
                "groupby": [],
                "having": [],
                "intersect": null,
                "limit": null,
                "orderby": [],
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    2,
                                    false
                                ],
                                null
                            ]
                        ],
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    3,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "union": null,
                "where": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                21,
                                false
                            ],
                            null
                        ],
                        "\"Ben Jones\"",
                        null
                    ]
                ]
            },
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            21,
                            false
                        ],
                        null
                    ],
                    "\"Michael Chang\"",
                    null
                ]
            ]
        },
        "question": "list series name of tv channel country of tv channel with directed by of cartoon equal to value and list series name of tv channel country of tv channel with directed by of cartoon equal to value",
        "gold_question": "list series name of tv channel country of tv channel with directed by of cartoon equal to value and list series name of tv channel country of tv channel with directed by of cartoon equal to value",
        "question_toks": [
            "list",
            "series",
            "name",
            "of",
            "tv",
            "channel",
            "country",
            "of",
            "tv",
            "channel",
            "with",
            "directed",
            "by",
            "of",
            "cartoon",
            "equal",
            "to",
            "value",
            "and",
            "list",
            "series",
            "name",
            "of",
            "tv",
            "channel",
            "country",
            "of",
            "tv",
            "channel",
            "with",
            "directed",
            "by",
            "of",
            "cartoon",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "tvshow",
        "query": "SELECT Pixel_aspect_ratio_PAR ,  country FROM tv_channel WHERE LANGUAGE != 'English'",
        "query_toks": [
            "SELECT",
            "Pixel_aspect_ratio_PAR",
            ",",
            "country",
            "FROM",
            "tv_channel",
            "WHERE",
            "LANGUAGE",
            "!",
            "=",
            "'English",
            "'"
        ],
        "query_toks_no_value": [
            "select",
            "pixel_aspect_ratio_par",
            ",",
            "country",
            "from",
            "tv_channel",
            "where",
            "language",
            "!",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ],
                    "\"English\"",
                    null
                ]
            ]
        },
        "question": "list pixel aspect ratio par country of tv channel with language not equal to value",
        "gold_question": "list pixel aspect ratio par country of tv channel with language not equal to value",
        "question_toks": [
            "list",
            "pixel",
            "aspect",
            "ratio",
            "par",
            "country",
            "of",
            "tv",
            "channel",
            "with",
            "language",
            "not",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "tvshow",
        "query": "SELECT Pixel_aspect_ratio_PAR ,  country FROM tv_channel WHERE LANGUAGE != 'English'",
        "query_toks": [
            "SELECT",
            "Pixel_aspect_ratio_PAR",
            ",",
            "country",
            "FROM",
            "tv_channel",
            "WHERE",
            "LANGUAGE",
            "!",
            "=",
            "'English",
            "'"
        ],
        "query_toks_no_value": [
            "select",
            "pixel_aspect_ratio_par",
            ",",
            "country",
            "from",
            "tv_channel",
            "where",
            "language",
            "!",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ],
                    "\"English\"",
                    null
                ]
            ]
        },
        "question": "list pixel aspect ratio par country of tv channel with language not equal to value",
        "gold_question": "list pixel aspect ratio par country of tv channel with language not equal to value",
        "question_toks": [
            "list",
            "pixel",
            "aspect",
            "ratio",
            "par",
            "country",
            "of",
            "tv",
            "channel",
            "with",
            "language",
            "not",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "tvshow",
        "query": "SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2",
        "query_toks": [
            "SELECT",
            "id",
            "FROM",
            "tv_channel",
            "GROUP",
            "BY",
            "country",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "id",
            "from",
            "tv_channel",
            "group",
            "by",
            "country",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    3,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list id of tv channel for each country that have the total number of tv channel greater than value",
        "gold_question": "list id of tv channel for each country that have the total number of tv channel greater than value",
        "question_toks": [
            "list",
            "id",
            "of",
            "tv",
            "channel",
            "for",
            "each",
            "country",
            "that",
            "have",
            "the",
            "total",
            "number",
            "of",
            "tv",
            "channel",
            "greater",
            "than",
            "value"
        ]
    },
    {
        "db_id": "tvshow",
        "query": "SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2",
        "query_toks": [
            "SELECT",
            "id",
            "FROM",
            "tv_channel",
            "GROUP",
            "BY",
            "country",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "id",
            "from",
            "tv_channel",
            "group",
            "by",
            "country",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    3,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list id of tv channel for each id that have the total number of tv channel greater than value",
        "gold_question": "list id of tv channel for each country that have the total number of tv channel greater than value",
        "question_toks": [
            "list",
            "id",
            "of",
            "tv",
            "channel",
            "for",
            "each",
            "id",
            "that",
            "have",
            "the",
            "total",
            "number",
            "of",
            "tv",
            "channel",
            "greater",
            "than",
            "value"
        ]
    },
    {
        "db_id": "tvshow",
        "query": "SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones'",
        "query_toks": [
            "SELECT",
            "id",
            "FROM",
            "TV_Channel",
            "EXCEPT",
            "SELECT",
            "channel",
            "FROM",
            "cartoon",
            "WHERE",
            "directed_by",
            "=",
            "'Ben",
            "Jones",
            "'"
        ],
        "query_toks_no_value": [
            "select",
            "id",
            "from",
            "tv_channel",
            "except",
            "select",
            "channel",
            "from",
            "cartoon",
            "where",
            "directed_by",
            "=",
            "value"
        ],
        "sql": {
            "except": {
                "except": null,
                "from": {
                    "conds": [],
                    "table_units": [
                        [
                            "table_unit",
                            2
                        ]
                    ]
                },
                "groupby": [],
                "having": [],
                "intersect": null,
                "limit": null,
                "orderby": [],
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    25,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "union": null,
                "where": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                21,
                                false
                            ],
                            null
                        ],
                        "\"Ben Jones\"",
                        null
                    ]
                ]
            },
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list id of tv channel except that list channel of cartoon with directed by equal to value",
        "gold_question": "list id of tv channel except that list channel of cartoon with directed by equal to value",
        "question_toks": [
            "list",
            "id",
            "of",
            "tv",
            "channel",
            "except",
            "that",
            "list",
            "channel",
            "of",
            "cartoon",
            "with",
            "directed",
            "by",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "tvshow",
        "query": "SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones'",
        "query_toks": [
            "SELECT",
            "id",
            "FROM",
            "TV_Channel",
            "EXCEPT",
            "SELECT",
            "channel",
            "FROM",
            "cartoon",
            "WHERE",
            "directed_by",
            "=",
            "'Ben",
            "Jones",
            "'"
        ],
        "query_toks_no_value": [
            "select",
            "id",
            "from",
            "tv_channel",
            "except",
            "select",
            "channel",
            "from",
            "cartoon",
            "where",
            "directed_by",
            "=",
            "value"
        ],
        "sql": {
            "except": {
                "except": null,
                "from": {
                    "conds": [],
                    "table_units": [
                        [
                            "table_unit",
                            2
                        ]
                    ]
                },
                "groupby": [],
                "having": [],
                "intersect": null,
                "limit": null,
                "orderby": [],
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    25,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "union": null,
                "where": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                21,
                                false
                            ],
                            null
                        ],
                        "\"Ben Jones\"",
                        null
                    ]
                ]
            },
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list id of tv channel except that list id of tv channel with directed by of cartoon equal to value",
        "gold_question": "list id of tv channel except that list channel of cartoon with directed by equal to value",
        "question_toks": [
            "list",
            "id",
            "of",
            "tv",
            "channel",
            "except",
            "that",
            "list",
            "id",
            "of",
            "tv",
            "channel",
            "with",
            "directed",
            "by",
            "of",
            "cartoon",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "tvshow",
        "query": "SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones')",
        "query_toks": [
            "SELECT",
            "package_option",
            "FROM",
            "TV_Channel",
            "WHERE",
            "id",
            "NOT",
            "IN",
            "(",
            "SELECT",
            "channel",
            "FROM",
            "cartoon",
            "WHERE",
            "directed_by",
            "=",
            "'Ben",
            "Jones",
            "'",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "package_option",
            "from",
            "tv_channel",
            "where",
            "id",
            "not",
            "in",
            "(",
            "select",
            "channel",
            "from",
            "cartoon",
            "where",
            "directed_by",
            "=",
            "value",
            ")"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    true,
                    8,
                    [
                        0,
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    2
                                ]
                            ]
                        },
                        "groupby": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderby": [],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            25,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": [
                            [
                                false,
                                2,
                                [
                                    0,
                                    [
                                        0,
                                        21,
                                        false
                                    ],
                                    null
                                ],
                                "\"Ben Jones\"",
                                null
                            ]
                        ]
                    },
                    null
                ]
            ]
        },
        "question": "list package option of tv channel except that list package option of tv channel with directed by of cartoon equal to value",
        "gold_question": "list package option of tv channel with id that is not in ( channel of cartoon with directed by equal to value )",
        "question_toks": [
            "list",
            "package",
            "option",
            "of",
            "tv",
            "channel",
            "except",
            "that",
            "list",
            "package",
            "option",
            "of",
            "tv",
            "channel",
            "with",
            "directed",
            "by",
            "of",
            "cartoon",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "tvshow",
        "query": "SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones')",
        "query_toks": [
            "SELECT",
            "package_option",
            "FROM",
            "TV_Channel",
            "WHERE",
            "id",
            "NOT",
            "IN",
            "(",
            "SELECT",
            "channel",
            "FROM",
            "cartoon",
            "WHERE",
            "directed_by",
            "=",
            "'Ben",
            "Jones",
            "'",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "package_option",
            "from",
            "tv_channel",
            "where",
            "id",
            "not",
            "in",
            "(",
            "select",
            "channel",
            "from",
            "cartoon",
            "where",
            "directed_by",
            "=",
            "value",
            ")"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    true,
                    8,
                    [
                        0,
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    2
                                ]
                            ]
                        },
                        "groupby": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderby": [],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            25,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": [
                            [
                                false,
                                2,
                                [
                                    0,
                                    [
                                        0,
                                        21,
                                        false
                                    ],
                                    null
                                ],
                                "\"Ben Jones\"",
                                null
                            ]
                        ]
                    },
                    null
                ]
            ]
        },
        "question": "list package option of tv channel except that list package option of tv channel with directed by of cartoon equal to value",
        "gold_question": "list package option of tv channel with id that is not in ( channel of cartoon with directed by equal to value )",
        "question_toks": [
            "list",
            "package",
            "option",
            "of",
            "tv",
            "channel",
            "except",
            "that",
            "list",
            "package",
            "option",
            "of",
            "tv",
            "channel",
            "with",
            "directed",
            "by",
            "of",
            "cartoon",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "poker_player",
        "query": "SELECT count(*) FROM poker_player",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "poker_player"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "poker_player"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list the total number of poker player",
        "gold_question": "list the total number of poker player",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "poker",
            "player"
        ]
    },
    {
        "db_id": "poker_player",
        "query": "SELECT count(*) FROM poker_player",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "poker_player"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "poker_player"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list the total number of poker player",
        "gold_question": "list the total number of poker player",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "poker",
            "player"
        ]
    },
    {
        "db_id": "poker_player",
        "query": "SELECT Earnings FROM poker_player ORDER BY Earnings DESC",
        "query_toks": [
            "SELECT",
            "Earnings",
            "FROM",
            "poker_player",
            "ORDER",
            "BY",
            "Earnings",
            "DESC"
        ],
        "query_toks_no_value": [
            "select",
            "earnings",
            "from",
            "poker_player",
            "order",
            "by",
            "earnings",
            "desc"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list earning of poker player ordered by earning descendingly",
        "gold_question": "list earning of poker player ordered by earning descendingly",
        "question_toks": [
            "list",
            "earning",
            "of",
            "poker",
            "player",
            "ordered",
            "by",
            "earning",
            "descendingly"
        ]
    },
    {
        "db_id": "poker_player",
        "query": "SELECT Earnings FROM poker_player ORDER BY Earnings DESC",
        "query_toks": [
            "SELECT",
            "Earnings",
            "FROM",
            "poker_player",
            "ORDER",
            "BY",
            "Earnings",
            "DESC"
        ],
        "query_toks_no_value": [
            "select",
            "earnings",
            "from",
            "poker_player",
            "order",
            "by",
            "earnings",
            "desc"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list earning of poker player ordered by earning descendingly",
        "gold_question": "list earning of poker player ordered by earning descendingly",
        "question_toks": [
            "list",
            "earning",
            "of",
            "poker",
            "player",
            "ordered",
            "by",
            "earning",
            "descendingly"
        ]
    },
    {
        "db_id": "poker_player",
        "query": "SELECT Final_Table_Made ,  Best_Finish FROM poker_player",
        "query_toks": [
            "SELECT",
            "Final_Table_Made",
            ",",
            "Best_Finish",
            "FROM",
            "poker_player"
        ],
        "query_toks_no_value": [
            "select",
            "final_table_made",
            ",",
            "best_finish",
            "from",
            "poker_player"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list final table made best finish of poker player",
        "gold_question": "list final table made best finish of poker player",
        "question_toks": [
            "list",
            "final",
            "table",
            "made",
            "best",
            "finish",
            "of",
            "poker",
            "player"
        ]
    },
    {
        "db_id": "poker_player",
        "query": "SELECT Final_Table_Made ,  Best_Finish FROM poker_player",
        "query_toks": [
            "SELECT",
            "Final_Table_Made",
            ",",
            "Best_Finish",
            "FROM",
            "poker_player"
        ],
        "query_toks_no_value": [
            "select",
            "final_table_made",
            ",",
            "best_finish",
            "from",
            "poker_player"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list final table made best finish of poker player",
        "gold_question": "list final table made best finish of poker player",
        "question_toks": [
            "list",
            "final",
            "table",
            "made",
            "best",
            "finish",
            "of",
            "poker",
            "player"
        ]
    },
    {
        "db_id": "poker_player",
        "query": "SELECT avg(Earnings) FROM poker_player",
        "query_toks": [
            "SELECT",
            "avg",
            "(",
            "Earnings",
            ")",
            "FROM",
            "poker_player"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "earnings",
            ")",
            "from",
            "poker_player"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list the average of earning of poker player",
        "gold_question": "list the average of earning of poker player",
        "question_toks": [
            "list",
            "the",
            "average",
            "of",
            "earning",
            "of",
            "poker",
            "player"
        ]
    },
    {
        "db_id": "poker_player",
        "query": "SELECT avg(Earnings) FROM poker_player",
        "query_toks": [
            "SELECT",
            "avg",
            "(",
            "Earnings",
            ")",
            "FROM",
            "poker_player"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "earnings",
            ")",
            "from",
            "poker_player"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list the average of earning of poker player",
        "gold_question": "list the average of earning of poker player",
        "question_toks": [
            "list",
            "the",
            "average",
            "of",
            "earning",
            "of",
            "poker",
            "player"
        ]
    },
    {
        "db_id": "poker_player",
        "query": "SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "Money_Rank",
            "FROM",
            "poker_player",
            "ORDER",
            "BY",
            "Earnings",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "money_rank",
            "from",
            "poker_player",
            "order",
            "by",
            "earnings",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of money rank of poker player ordered by earning descendingly",
        "gold_question": "list top value items of money rank of poker player ordered by earning descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "money",
            "rank",
            "of",
            "poker",
            "player",
            "ordered",
            "by",
            "earning",
            "descendingly"
        ]
    },
    {
        "db_id": "poker_player",
        "query": "SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "Money_Rank",
            "FROM",
            "poker_player",
            "ORDER",
            "BY",
            "Earnings",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "money_rank",
            "from",
            "poker_player",
            "order",
            "by",
            "earnings",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of money rank of poker player ordered by earning descendingly",
        "gold_question": "list top value items of money rank of poker player ordered by earning descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "money",
            "rank",
            "of",
            "poker",
            "player",
            "ordered",
            "by",
            "earning",
            "descendingly"
        ]
    },
    {
        "db_id": "poker_player",
        "query": "SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000",
        "query_toks": [
            "SELECT",
            "max",
            "(",
            "Final_Table_Made",
            ")",
            "FROM",
            "poker_player",
            "WHERE",
            "Earnings",
            "<",
            "200000"
        ],
        "query_toks_no_value": [
            "select",
            "max",
            "(",
            "final_table_made",
            ")",
            "from",
            "poker_player",
            "where",
            "earnings",
            "<",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    4,
                    [
                        0,
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ],
                    200000.0,
                    null
                ]
            ]
        },
        "question": "list the maximum of final table made of poker player with earning less than value",
        "gold_question": "list the maximum of final table made of poker player with earning less than value",
        "question_toks": [
            "list",
            "the",
            "maximum",
            "of",
            "final",
            "table",
            "made",
            "of",
            "poker",
            "player",
            "with",
            "earning",
            "less",
            "than",
            "value"
        ]
    },
    {
        "db_id": "poker_player",
        "query": "SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000",
        "query_toks": [
            "SELECT",
            "max",
            "(",
            "Final_Table_Made",
            ")",
            "FROM",
            "poker_player",
            "WHERE",
            "Earnings",
            "<",
            "200000"
        ],
        "query_toks_no_value": [
            "select",
            "max",
            "(",
            "final_table_made",
            ")",
            "from",
            "poker_player",
            "where",
            "earnings",
            "<",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    4,
                    [
                        0,
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ],
                    200000.0,
                    null
                ]
            ]
        },
        "question": "list the maximum of final table made of poker player with earning less than value",
        "gold_question": "list the maximum of final table made of poker player with earning less than value",
        "question_toks": [
            "list",
            "the",
            "maximum",
            "of",
            "final",
            "table",
            "made",
            "of",
            "poker",
            "player",
            "with",
            "earning",
            "less",
            "than",
            "value"
        ]
    },
    {
        "db_id": "poker_player",
        "query": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID",
        "query_toks": [
            "SELECT",
            "T1.Name",
            "FROM",
            "people",
            "AS",
            "T1",
            "JOIN",
            "poker_player",
            "AS",
            "T2",
            "ON",
            "T1.People_ID",
            "=",
            "T2.People_ID"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "name",
            "from",
            "people",
            "as",
            "t1",
            "join",
            "poker_player",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "people_id",
            "=",
            "t2",
            ".",
            "people_id"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list name of people",
        "gold_question": "list name of people",
        "question_toks": [
            "list",
            "name",
            "of",
            "people"
        ]
    },
    {
        "db_id": "poker_player",
        "query": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID",
        "query_toks": [
            "SELECT",
            "T1.Name",
            "FROM",
            "people",
            "AS",
            "T1",
            "JOIN",
            "poker_player",
            "AS",
            "T2",
            "ON",
            "T1.People_ID",
            "=",
            "T2.People_ID"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "name",
            "from",
            "people",
            "as",
            "t1",
            "join",
            "poker_player",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "people_id",
            "=",
            "t2",
            ".",
            "people_id"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list name of people",
        "gold_question": "list name of people",
        "question_toks": [
            "list",
            "name",
            "of",
            "people"
        ]
    },
    {
        "db_id": "poker_player",
        "query": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Earnings  >  300000",
        "query_toks": [
            "SELECT",
            "T1.Name",
            "FROM",
            "people",
            "AS",
            "T1",
            "JOIN",
            "poker_player",
            "AS",
            "T2",
            "ON",
            "T1.People_ID",
            "=",
            "T2.People_ID",
            "WHERE",
            "T2.Earnings",
            ">",
            "300000"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "name",
            "from",
            "people",
            "as",
            "t1",
            "join",
            "poker_player",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "people_id",
            "=",
            "t2",
            ".",
            "people_id",
            "where",
            "t2",
            ".",
            "earnings",
            ">",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ],
                    300000.0,
                    null
                ]
            ]
        },
        "question": "list name of people with earning of poker player greater than value",
        "gold_question": "list name of people with earning of poker player greater than value",
        "question_toks": [
            "list",
            "name",
            "of",
            "people",
            "with",
            "earning",
            "of",
            "poker",
            "player",
            "greater",
            "than",
            "value"
        ]
    },
    {
        "db_id": "poker_player",
        "query": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Earnings  >  300000",
        "query_toks": [
            "SELECT",
            "T1.Name",
            "FROM",
            "people",
            "AS",
            "T1",
            "JOIN",
            "poker_player",
            "AS",
            "T2",
            "ON",
            "T1.People_ID",
            "=",
            "T2.People_ID",
            "WHERE",
            "T2.Earnings",
            ">",
            "300000"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "name",
            "from",
            "people",
            "as",
            "t1",
            "join",
            "poker_player",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "people_id",
            "=",
            "t2",
            ".",
            "people_id",
            "where",
            "t2",
            ".",
            "earnings",
            ">",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ],
                    300000.0,
                    null
                ]
            ]
        },
        "question": "list name of people with earning of poker player greater than value",
        "gold_question": "list name of people with earning of poker player greater than value",
        "question_toks": [
            "list",
            "name",
            "of",
            "people",
            "with",
            "earning",
            "of",
            "poker",
            "player",
            "greater",
            "than",
            "value"
        ]
    },
    {
        "db_id": "poker_player",
        "query": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Final_Table_Made",
        "query_toks": [
            "SELECT",
            "T1.Name",
            "FROM",
            "people",
            "AS",
            "T1",
            "JOIN",
            "poker_player",
            "AS",
            "T2",
            "ON",
            "T1.People_ID",
            "=",
            "T2.People_ID",
            "ORDER",
            "BY",
            "T2.Final_Table_Made"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "name",
            "from",
            "people",
            "as",
            "t1",
            "join",
            "poker_player",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "people_id",
            "=",
            "t2",
            ".",
            "people_id",
            "order",
            "by",
            "t2",
            ".",
            "final_table_made"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list name of people ordered by final table made of poker player ascendingly",
        "gold_question": "list name of people ordered by final table made of poker player ascendingly",
        "question_toks": [
            "list",
            "name",
            "of",
            "people",
            "ordered",
            "by",
            "final",
            "table",
            "made",
            "of",
            "poker",
            "player",
            "ascendingly"
        ]
    },
    {
        "db_id": "poker_player",
        "query": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Final_Table_Made",
        "query_toks": [
            "SELECT",
            "T1.Name",
            "FROM",
            "people",
            "AS",
            "T1",
            "JOIN",
            "poker_player",
            "AS",
            "T2",
            "ON",
            "T1.People_ID",
            "=",
            "T2.People_ID",
            "ORDER",
            "BY",
            "T2.Final_Table_Made"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "name",
            "from",
            "people",
            "as",
            "t1",
            "join",
            "poker_player",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "people_id",
            "=",
            "t2",
            ".",
            "people_id",
            "order",
            "by",
            "t2",
            ".",
            "final_table_made"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list name of people ordered by final table made of poker player ascendingly",
        "gold_question": "list name of people ordered by final table made of poker player ascendingly",
        "question_toks": [
            "list",
            "name",
            "of",
            "people",
            "ordered",
            "by",
            "final",
            "table",
            "made",
            "of",
            "poker",
            "player",
            "ascendingly"
        ]
    },
    {
        "db_id": "poker_player",
        "query": "SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T1.Birth_Date",
            "FROM",
            "people",
            "AS",
            "T1",
            "JOIN",
            "poker_player",
            "AS",
            "T2",
            "ON",
            "T1.People_ID",
            "=",
            "T2.People_ID",
            "ORDER",
            "BY",
            "T2.Earnings",
            "ASC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "birth_date",
            "from",
            "people",
            "as",
            "t1",
            "join",
            "poker_player",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "people_id",
            "=",
            "t2",
            ".",
            "people_id",
            "order",
            "by",
            "t2",
            ".",
            "earnings",
            "asc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of birth date of people ordered by earning of poker player ascendingly",
        "gold_question": "list top value items of birth date of people ordered by earning of poker player ascendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "birth",
            "date",
            "of",
            "people",
            "ordered",
            "by",
            "earning",
            "of",
            "poker",
            "player",
            "ascendingly"
        ]
    },
    {
        "db_id": "poker_player",
        "query": "SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T1.Birth_Date",
            "FROM",
            "people",
            "AS",
            "T1",
            "JOIN",
            "poker_player",
            "AS",
            "T2",
            "ON",
            "T1.People_ID",
            "=",
            "T2.People_ID",
            "ORDER",
            "BY",
            "T2.Earnings",
            "ASC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "birth_date",
            "from",
            "people",
            "as",
            "t1",
            "join",
            "poker_player",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "people_id",
            "=",
            "t2",
            ".",
            "people_id",
            "order",
            "by",
            "t2",
            ".",
            "earnings",
            "asc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of birth date of people ordered by earning of poker player ascendingly",
        "gold_question": "list top value items of birth date of people ordered by earning of poker player ascendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "birth",
            "date",
            "of",
            "people",
            "ordered",
            "by",
            "earning",
            "of",
            "poker",
            "player",
            "ascendingly"
        ]
    },
    {
        "db_id": "poker_player",
        "query": "SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T2.Money_Rank",
            "FROM",
            "people",
            "AS",
            "T1",
            "JOIN",
            "poker_player",
            "AS",
            "T2",
            "ON",
            "T1.People_ID",
            "=",
            "T2.People_ID",
            "ORDER",
            "BY",
            "T1.Height",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t2",
            ".",
            "money_rank",
            "from",
            "people",
            "as",
            "t1",
            "join",
            "poker_player",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "people_id",
            "=",
            "t2",
            ".",
            "people_id",
            "order",
            "by",
            "t1",
            ".",
            "height",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of money rank of poker player ordered by height of people descendingly",
        "gold_question": "list top value items of money rank of poker player ordered by height of people descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "money",
            "rank",
            "of",
            "poker",
            "player",
            "ordered",
            "by",
            "height",
            "of",
            "people",
            "descendingly"
        ]
    },
    {
        "db_id": "poker_player",
        "query": "SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T2.Money_Rank",
            "FROM",
            "people",
            "AS",
            "T1",
            "JOIN",
            "poker_player",
            "AS",
            "T2",
            "ON",
            "T1.People_ID",
            "=",
            "T2.People_ID",
            "ORDER",
            "BY",
            "T1.Height",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t2",
            ".",
            "money_rank",
            "from",
            "people",
            "as",
            "t1",
            "join",
            "poker_player",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "people_id",
            "=",
            "t2",
            ".",
            "people_id",
            "order",
            "by",
            "t1",
            ".",
            "height",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of money rank of poker player ordered by height of people descendingly",
        "gold_question": "list top value items of money rank of poker player ordered by height of people descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "money",
            "rank",
            "of",
            "poker",
            "player",
            "ordered",
            "by",
            "height",
            "of",
            "people",
            "descendingly"
        ]
    },
    {
        "db_id": "poker_player",
        "query": "SELECT avg(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  200",
        "query_toks": [
            "SELECT",
            "avg",
            "(",
            "T2.Earnings",
            ")",
            "FROM",
            "people",
            "AS",
            "T1",
            "JOIN",
            "poker_player",
            "AS",
            "T2",
            "ON",
            "T1.People_ID",
            "=",
            "T2.People_ID",
            "WHERE",
            "T1.Height",
            ">",
            "200"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "t2",
            ".",
            "earnings",
            ")",
            "from",
            "people",
            "as",
            "t1",
            "join",
            "poker_player",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "people_id",
            "=",
            "t2",
            ".",
            "people_id",
            "where",
            "t1",
            ".",
            "height",
            ">",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    200.0,
                    null
                ]
            ]
        },
        "question": "list the average of earning of poker player with height of people greater than value",
        "gold_question": "list the average of earning of poker player with height of people greater than value",
        "question_toks": [
            "list",
            "the",
            "average",
            "of",
            "earning",
            "of",
            "poker",
            "player",
            "with",
            "height",
            "of",
            "people",
            "greater",
            "than",
            "value"
        ]
    },
    {
        "db_id": "poker_player",
        "query": "SELECT avg(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  200",
        "query_toks": [
            "SELECT",
            "avg",
            "(",
            "T2.Earnings",
            ")",
            "FROM",
            "people",
            "AS",
            "T1",
            "JOIN",
            "poker_player",
            "AS",
            "T2",
            "ON",
            "T1.People_ID",
            "=",
            "T2.People_ID",
            "WHERE",
            "T1.Height",
            ">",
            "200"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "t2",
            ".",
            "earnings",
            ")",
            "from",
            "people",
            "as",
            "t1",
            "join",
            "poker_player",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "people_id",
            "=",
            "t2",
            ".",
            "people_id",
            "where",
            "t1",
            ".",
            "height",
            ">",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    200.0,
                    null
                ]
            ]
        },
        "question": "list the average of earning of poker player with height of people greater than value",
        "gold_question": "list the average of earning of poker player with height of people greater than value",
        "question_toks": [
            "list",
            "the",
            "average",
            "of",
            "earning",
            "of",
            "poker",
            "player",
            "with",
            "height",
            "of",
            "people",
            "greater",
            "than",
            "value"
        ]
    },
    {
        "db_id": "poker_player",
        "query": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings DESC",
        "query_toks": [
            "SELECT",
            "T1.Name",
            "FROM",
            "people",
            "AS",
            "T1",
            "JOIN",
            "poker_player",
            "AS",
            "T2",
            "ON",
            "T1.People_ID",
            "=",
            "T2.People_ID",
            "ORDER",
            "BY",
            "T2.Earnings",
            "DESC"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "name",
            "from",
            "people",
            "as",
            "t1",
            "join",
            "poker_player",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "people_id",
            "=",
            "t2",
            ".",
            "people_id",
            "order",
            "by",
            "t2",
            ".",
            "earnings",
            "desc"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list name of people ordered by earning of poker player descendingly",
        "gold_question": "list name of people ordered by earning of poker player descendingly",
        "question_toks": [
            "list",
            "name",
            "of",
            "people",
            "ordered",
            "by",
            "earning",
            "of",
            "poker",
            "player",
            "descendingly"
        ]
    },
    {
        "db_id": "poker_player",
        "query": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings DESC",
        "query_toks": [
            "SELECT",
            "T1.Name",
            "FROM",
            "people",
            "AS",
            "T1",
            "JOIN",
            "poker_player",
            "AS",
            "T2",
            "ON",
            "T1.People_ID",
            "=",
            "T2.People_ID",
            "ORDER",
            "BY",
            "T2.Earnings",
            "DESC"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "name",
            "from",
            "people",
            "as",
            "t1",
            "join",
            "poker_player",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "people_id",
            "=",
            "t2",
            ".",
            "people_id",
            "order",
            "by",
            "t2",
            ".",
            "earnings",
            "desc"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list name of people ordered by earning of poker player descendingly",
        "gold_question": "list name of people ordered by earning of poker player descendingly",
        "question_toks": [
            "list",
            "name",
            "of",
            "people",
            "ordered",
            "by",
            "earning",
            "of",
            "poker",
            "player",
            "descendingly"
        ]
    },
    {
        "db_id": "poker_player",
        "query": "SELECT Nationality ,  COUNT(*) FROM people GROUP BY Nationality",
        "query_toks": [
            "SELECT",
            "Nationality",
            ",",
            "COUNT",
            "(",
            "*",
            ")",
            "FROM",
            "people",
            "GROUP",
            "BY",
            "Nationality"
        ],
        "query_toks_no_value": [
            "select",
            "nationality",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "people",
            "group",
            "by",
            "nationality"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    8,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list nationality the total number of people for each nationality",
        "gold_question": "list nationality the total number of people for each nationality",
        "question_toks": [
            "list",
            "nationality",
            "the",
            "total",
            "number",
            "of",
            "people",
            "for",
            "each",
            "nationality"
        ]
    },
    {
        "db_id": "poker_player",
        "query": "SELECT Nationality ,  COUNT(*) FROM people GROUP BY Nationality",
        "query_toks": [
            "SELECT",
            "Nationality",
            ",",
            "COUNT",
            "(",
            "*",
            ")",
            "FROM",
            "people",
            "GROUP",
            "BY",
            "Nationality"
        ],
        "query_toks_no_value": [
            "select",
            "nationality",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "people",
            "group",
            "by",
            "nationality"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    8,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list nationality the total number of people for each nationality",
        "gold_question": "list nationality the total number of people for each nationality",
        "question_toks": [
            "list",
            "nationality",
            "the",
            "total",
            "number",
            "of",
            "people",
            "for",
            "each",
            "nationality"
        ]
    },
    {
        "db_id": "poker_player",
        "query": "SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "Nationality",
            "FROM",
            "people",
            "GROUP",
            "BY",
            "Nationality",
            "ORDER",
            "BY",
            "COUNT",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "nationality",
            "from",
            "people",
            "group",
            "by",
            "nationality",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    8,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of nationality of people for each nationality ordered by the total number of people descendingly",
        "gold_question": "list top value items of nationality of people for each nationality ordered by the total number of people descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "nationality",
            "of",
            "people",
            "for",
            "each",
            "nationality",
            "ordered",
            "by",
            "the",
            "total",
            "number",
            "of",
            "people",
            "descendingly"
        ]
    },
    {
        "db_id": "poker_player",
        "query": "SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "Nationality",
            "FROM",
            "people",
            "GROUP",
            "BY",
            "Nationality",
            "ORDER",
            "BY",
            "COUNT",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "nationality",
            "from",
            "people",
            "group",
            "by",
            "nationality",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    8,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of nationality of people for each nationality ordered by the total number of people descendingly",
        "gold_question": "list top value items of nationality of people for each nationality ordered by the total number of people descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "nationality",
            "of",
            "people",
            "for",
            "each",
            "nationality",
            "ordered",
            "by",
            "the",
            "total",
            "number",
            "of",
            "people",
            "descendingly"
        ]
    },
    {
        "db_id": "poker_player",
        "query": "SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*)  >=  2",
        "query_toks": [
            "SELECT",
            "Nationality",
            "FROM",
            "people",
            "GROUP",
            "BY",
            "Nationality",
            "HAVING",
            "COUNT",
            "(",
            "*",
            ")",
            ">",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "nationality",
            "from",
            "people",
            "group",
            "by",
            "nationality",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    8,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    5,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list nationality of people for each nationality that have the total number of people greater than or equal to value",
        "gold_question": "list nationality of people for each nationality that have the total number of people greater than or equal to value",
        "question_toks": [
            "list",
            "nationality",
            "of",
            "people",
            "for",
            "each",
            "nationality",
            "that",
            "have",
            "the",
            "total",
            "number",
            "of",
            "people",
            "greater",
            "than",
            "or",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "poker_player",
        "query": "SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*)  >=  2",
        "query_toks": [
            "SELECT",
            "Nationality",
            "FROM",
            "people",
            "GROUP",
            "BY",
            "Nationality",
            "HAVING",
            "COUNT",
            "(",
            "*",
            ")",
            ">",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "nationality",
            "from",
            "people",
            "group",
            "by",
            "nationality",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    8,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    5,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list nationality of people for each nationality that have the total number of people greater than or equal to value",
        "gold_question": "list nationality of people for each nationality that have the total number of people greater than or equal to value",
        "question_toks": [
            "list",
            "nationality",
            "of",
            "people",
            "for",
            "each",
            "nationality",
            "that",
            "have",
            "the",
            "total",
            "number",
            "of",
            "people",
            "greater",
            "than",
            "or",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "poker_player",
        "query": "SELECT Name ,  Birth_Date FROM people ORDER BY Name ASC",
        "query_toks": [
            "SELECT",
            "Name",
            ",",
            "Birth_Date",
            "FROM",
            "people",
            "ORDER",
            "BY",
            "Name",
            "ASC"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "birth_date",
            "from",
            "people",
            "order",
            "by",
            "name",
            "asc"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list name birth date of people ordered by name ascendingly",
        "gold_question": "list name birth date of people ordered by name ascendingly",
        "question_toks": [
            "list",
            "name",
            "birth",
            "date",
            "of",
            "people",
            "ordered",
            "by",
            "name",
            "ascendingly"
        ]
    },
    {
        "db_id": "poker_player",
        "query": "SELECT Name ,  Birth_Date FROM people ORDER BY Name ASC",
        "query_toks": [
            "SELECT",
            "Name",
            ",",
            "Birth_Date",
            "FROM",
            "people",
            "ORDER",
            "BY",
            "Name",
            "ASC"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "birth_date",
            "from",
            "people",
            "order",
            "by",
            "name",
            "asc"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list name birth date of people ordered by name ascendingly",
        "gold_question": "list name birth date of people ordered by name ascendingly",
        "question_toks": [
            "list",
            "name",
            "birth",
            "date",
            "of",
            "people",
            "ordered",
            "by",
            "name",
            "ascendingly"
        ]
    },
    {
        "db_id": "poker_player",
        "query": "SELECT Name FROM people WHERE Nationality != \"Russia\"",
        "query_toks": [
            "SELECT",
            "Name",
            "FROM",
            "people",
            "WHERE",
            "Nationality",
            "!",
            "=",
            "``",
            "Russia",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "people",
            "where",
            "nationality",
            "!",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ],
                    "\"Russia\"",
                    null
                ]
            ]
        },
        "question": "list name of people with nationality not equal to value",
        "gold_question": "list name of people with nationality not equal to value",
        "question_toks": [
            "list",
            "name",
            "of",
            "people",
            "with",
            "nationality",
            "not",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "poker_player",
        "query": "SELECT Name FROM people WHERE Nationality != \"Russia\"",
        "query_toks": [
            "SELECT",
            "Name",
            "FROM",
            "people",
            "WHERE",
            "Nationality",
            "!",
            "=",
            "``",
            "Russia",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "people",
            "where",
            "nationality",
            "!",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ],
                    "\"Russia\"",
                    null
                ]
            ]
        },
        "question": "list name of people with nationality not equal to value",
        "gold_question": "list name of people with nationality not equal to value",
        "question_toks": [
            "list",
            "name",
            "of",
            "people",
            "with",
            "nationality",
            "not",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "poker_player",
        "query": "SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)",
        "query_toks": [
            "SELECT",
            "Name",
            "FROM",
            "people",
            "WHERE",
            "People_ID",
            "NOT",
            "IN",
            "(",
            "SELECT",
            "People_ID",
            "FROM",
            "poker_player",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "people",
            "where",
            "people_id",
            "not",
            "in",
            "(",
            "select",
            "people_id",
            "from",
            "poker_player",
            ")"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    true,
                    8,
                    [
                        0,
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    0
                                ]
                            ]
                        },
                        "groupby": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderby": [],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            2,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": []
                    },
                    null
                ]
            ]
        },
        "question": "list name of people with people id that is not in ( people id of poker player )",
        "gold_question": "list name of people with people id that is not in ( people id of poker player )",
        "question_toks": [
            "list",
            "name",
            "of",
            "people",
            "with",
            "people",
            "id",
            "that",
            "is",
            "not",
            "in",
            "(",
            "people",
            "id",
            "of",
            "poker",
            "player",
            ")"
        ]
    },
    {
        "db_id": "poker_player",
        "query": "SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)",
        "query_toks": [
            "SELECT",
            "Name",
            "FROM",
            "people",
            "WHERE",
            "People_ID",
            "NOT",
            "IN",
            "(",
            "SELECT",
            "People_ID",
            "FROM",
            "poker_player",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "people",
            "where",
            "people_id",
            "not",
            "in",
            "(",
            "select",
            "people_id",
            "from",
            "poker_player",
            ")"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    true,
                    8,
                    [
                        0,
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    0
                                ]
                            ]
                        },
                        "groupby": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderby": [],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            2,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": []
                    },
                    null
                ]
            ]
        },
        "question": "list name of people with people id that is not in ( people id of poker player )",
        "gold_question": "list name of people with people id that is not in ( people id of poker player )",
        "question_toks": [
            "list",
            "name",
            "of",
            "people",
            "with",
            "people",
            "id",
            "that",
            "is",
            "not",
            "in",
            "(",
            "people",
            "id",
            "of",
            "poker",
            "player",
            ")"
        ]
    },
    {
        "db_id": "poker_player",
        "query": "SELECT count(DISTINCT Nationality) FROM people",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "DISTINCT",
            "Nationality",
            ")",
            "FROM",
            "people"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "distinct",
            "nationality",
            ")",
            "from",
            "people"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                8,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list the number of nationality of people",
        "gold_question": "list the number of nationality of people",
        "question_toks": [
            "list",
            "the",
            "number",
            "of",
            "nationality",
            "of",
            "people"
        ]
    },
    {
        "db_id": "poker_player",
        "query": "SELECT count(DISTINCT Nationality) FROM people",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "DISTINCT",
            "Nationality",
            ")",
            "FROM",
            "people"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "distinct",
            "nationality",
            ")",
            "from",
            "people"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                8,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list the number of nationality of people",
        "gold_question": "list the number of nationality of people",
        "question_toks": [
            "list",
            "the",
            "number",
            "of",
            "nationality",
            "of",
            "people"
        ]
    },
    {
        "db_id": "voter_1",
        "query": "SELECT count(*) FROM area_code_state",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "area_code_state"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "area_code_state"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list the number of state of area code state",
        "gold_question": "list the total number of area code state",
        "question_toks": [
            "list",
            "the",
            "number",
            "of",
            "state",
            "of",
            "area",
            "code",
            "state"
        ]
    },
    {
        "db_id": "voter_1",
        "query": "SELECT contestant_number ,  contestant_name FROM contestants ORDER BY contestant_name DESC",
        "query_toks": [
            "SELECT",
            "contestant_number",
            ",",
            "contestant_name",
            "FROM",
            "contestants",
            "ORDER",
            "BY",
            "contestant_name",
            "DESC"
        ],
        "query_toks_no_value": [
            "select",
            "contestant_number",
            ",",
            "contestant_name",
            "from",
            "contestants",
            "order",
            "by",
            "contestant_name",
            "desc"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list contestant number contestant name of contestant ordered by contestant name descendingly",
        "gold_question": "list contestant number contestant name of contestant ordered by contestant name descendingly",
        "question_toks": [
            "list",
            "contestant",
            "number",
            "contestant",
            "name",
            "of",
            "contestant",
            "ordered",
            "by",
            "contestant",
            "name",
            "descendingly"
        ]
    },
    {
        "db_id": "voter_1",
        "query": "SELECT vote_id ,  phone_number ,  state FROM votes",
        "query_toks": [
            "SELECT",
            "vote_id",
            ",",
            "phone_number",
            ",",
            "state",
            "FROM",
            "votes"
        ],
        "query_toks_no_value": [
            "select",
            "vote_id",
            ",",
            "phone_number",
            ",",
            "state",
            "from",
            "votes"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list vote id phone number state of vote",
        "gold_question": "list vote id phone number state of vote",
        "question_toks": [
            "list",
            "vote",
            "id",
            "phone",
            "number",
            "state",
            "of",
            "vote"
        ]
    },
    {
        "db_id": "voter_1",
        "query": "SELECT max(area_code) ,  min(area_code) FROM area_code_state",
        "query_toks": [
            "SELECT",
            "max",
            "(",
            "area_code",
            ")",
            ",",
            "min",
            "(",
            "area_code",
            ")",
            "FROM",
            "area_code_state"
        ],
        "query_toks_no_value": [
            "select",
            "max",
            "(",
            "area_code",
            ")",
            ",",
            "min",
            "(",
            "area_code",
            ")",
            "from",
            "area_code_state"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list the maximum of area code the minimum of area code of area code state",
        "gold_question": "list the maximum of area code the minimum of area code of area code state",
        "question_toks": [
            "list",
            "the",
            "maximum",
            "of",
            "area",
            "code",
            "the",
            "minimum",
            "of",
            "area",
            "code",
            "of",
            "area",
            "code",
            "state"
        ]
    },
    {
        "db_id": "voter_1",
        "query": "SELECT max(created) FROM votes WHERE state  =  'CA'",
        "query_toks": [
            "SELECT",
            "max",
            "(",
            "created",
            ")",
            "FROM",
            "votes",
            "WHERE",
            "state",
            "=",
            "'CA",
            "'"
        ],
        "query_toks_no_value": [
            "select",
            "max",
            "(",
            "created",
            ")",
            "from",
            "votes",
            "where",
            "state",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ],
                    "\"CA\"",
                    null
                ]
            ]
        },
        "question": "list the maximum of create of vote with state equal to value",
        "gold_question": "list the maximum of create of vote with state equal to value",
        "question_toks": [
            "list",
            "the",
            "maximum",
            "of",
            "create",
            "of",
            "vote",
            "with",
            "state",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "voter_1",
        "query": "SELECT contestant_name FROM contestants WHERE contestant_name != 'Jessie Alloway'",
        "query_toks": [
            "SELECT",
            "contestant_name",
            "FROM",
            "contestants",
            "WHERE",
            "contestant_name",
            "!",
            "=",
            "'Jessie",
            "Alloway",
            "'"
        ],
        "query_toks_no_value": [
            "select",
            "contestant_name",
            "from",
            "contestants",
            "where",
            "contestant_name",
            "!",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ],
                    "\"Jessie Alloway\"",
                    null
                ]
            ]
        },
        "question": "list contestant name of contestant with contestant name not equal to value",
        "gold_question": "list contestant name of contestant with contestant name not equal to value",
        "question_toks": [
            "list",
            "contestant",
            "name",
            "of",
            "contestant",
            "with",
            "contestant",
            "name",
            "not",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "voter_1",
        "query": "SELECT DISTINCT state ,  created FROM votes",
        "query_toks": [
            "SELECT",
            "DISTINCT",
            "state",
            ",",
            "created",
            "FROM",
            "votes"
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "state",
            ",",
            "created",
            "from",
            "votes"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list state create of vote",
        "gold_question": "list state create of vote",
        "question_toks": [
            "list",
            "state",
            "create",
            "of",
            "vote"
        ]
    },
    {
        "db_id": "voter_1",
        "query": "SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number HAVING count(*)  >=  2",
        "query_toks": [
            "SELECT",
            "T1.contestant_number",
            ",",
            "T1.contestant_name",
            "FROM",
            "contestants",
            "AS",
            "T1",
            "JOIN",
            "votes",
            "AS",
            "T2",
            "ON",
            "T1.contestant_number",
            "=",
            "T2.contestant_number",
            "GROUP",
            "BY",
            "T1.contestant_number",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "contestant_number",
            ",",
            "t1",
            ".",
            "contestant_name",
            "from",
            "contestants",
            "as",
            "t1",
            "join",
            "votes",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "contestant_number",
            "=",
            "t2",
            ".",
            "contestant_number",
            "group",
            "by",
            "t1",
            ".",
            "contestant_number",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    3,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    5,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list contestant number contestant name of contestant for each contestant number of vote that have the total number of vote greater than or equal to value",
        "gold_question": "list contestant number of contestant contestant name of contestant for each contestant number of contestant that have the total number of contestant greater than or equal to value",
        "question_toks": [
            "list",
            "contestant",
            "number",
            "contestant",
            "name",
            "of",
            "contestant",
            "for",
            "each",
            "contestant",
            "number",
            "of",
            "vote",
            "that",
            "have",
            "the",
            "total",
            "number",
            "of",
            "vote",
            "greater",
            "than",
            "or",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "voter_1",
        "query": "SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number ORDER BY count(*) ASC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T1.contestant_number",
            ",",
            "T1.contestant_name",
            "FROM",
            "contestants",
            "AS",
            "T1",
            "JOIN",
            "votes",
            "AS",
            "T2",
            "ON",
            "T1.contestant_number",
            "=",
            "T2.contestant_number",
            "GROUP",
            "BY",
            "T1.contestant_number",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "ASC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "contestant_number",
            ",",
            "t1",
            ".",
            "contestant_name",
            "from",
            "contestants",
            "as",
            "t1",
            "join",
            "votes",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "contestant_number",
            "=",
            "t2",
            ".",
            "contestant_number",
            "group",
            "by",
            "t1",
            ".",
            "contestant_number",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "asc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    3,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "asc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of contestant number contestant name of contestant ordered by vote id of vote ascendingly",
        "gold_question": "list top value items of contestant number of contestant contestant name of contestant for each contestant number of contestant ordered by the total number of contestant ascendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "contestant",
            "number",
            "contestant",
            "name",
            "of",
            "contestant",
            "ordered",
            "by",
            "vote",
            "id",
            "of",
            "vote",
            "ascendingly"
        ]
    },
    {
        "db_id": "voter_1",
        "query": "SELECT count(*) FROM votes WHERE state  =  'NY' OR state  =  'CA'",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "votes",
            "WHERE",
            "state",
            "=",
            "'NY",
            "'",
            "OR",
            "state",
            "=",
            "'CA",
            "'"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "votes",
            "where",
            "state",
            "=",
            "value",
            "or",
            "state",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ],
                    "\"NY\"",
                    null
                ],
                "or",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ],
                    "\"CA\"",
                    null
                ]
            ]
        },
        "question": "list the total number of vote with state equal to value or state equal to value",
        "gold_question": "list the total number of vote with state equal to value or state equal to value",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "vote",
            "with",
            "state",
            "equal",
            "to",
            "value",
            "or",
            "state",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "voter_1",
        "query": "SELECT count(*) FROM contestants WHERE contestant_number NOT IN ( SELECT contestant_number FROM votes )",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "contestants",
            "WHERE",
            "contestant_number",
            "NOT",
            "IN",
            "(",
            "SELECT",
            "contestant_number",
            "FROM",
            "votes",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "contestants",
            "where",
            "contestant_number",
            "not",
            "in",
            "(",
            "select",
            "contestant_number",
            "from",
            "votes",
            ")"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    true,
                    8,
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    2
                                ]
                            ]
                        },
                        "groupby": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderby": [],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            8,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": []
                    },
                    null
                ]
            ]
        },
        "question": "list the total number of contestant with contestant number that is not in ( contestant number of vote )",
        "gold_question": "list the total number of contestant with contestant number that is not in ( contestant number of vote )",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "contestant",
            "with",
            "contestant",
            "number",
            "that",
            "is",
            "not",
            "in",
            "(",
            "contestant",
            "number",
            "of",
            "vote",
            ")"
        ]
    },
    {
        "db_id": "voter_1",
        "query": "SELECT T1.area_code FROM area_code_state AS T1 JOIN votes AS T2 ON T1.state  =  T2.state GROUP BY T1.area_code ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T1.area_code",
            "FROM",
            "area_code_state",
            "AS",
            "T1",
            "JOIN",
            "votes",
            "AS",
            "T2",
            "ON",
            "T1.state",
            "=",
            "T2.state",
            "GROUP",
            "BY",
            "T1.area_code",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "area_code",
            "from",
            "area_code_state",
            "as",
            "t1",
            "join",
            "votes",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "state",
            "=",
            "t2",
            ".",
            "state",
            "group",
            "by",
            "t1",
            ".",
            "area_code",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    1,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of area code of area code state for each area code of area code state ordered by the total number of area code state descendingly",
        "gold_question": "list top value items of area code of area code state for each area code of area code state ordered by the total number of area code state descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "area",
            "code",
            "of",
            "area",
            "code",
            "state",
            "for",
            "each",
            "area",
            "code",
            "of",
            "area",
            "code",
            "state",
            "ordered",
            "by",
            "the",
            "total",
            "number",
            "of",
            "area",
            "code",
            "state",
            "descendingly"
        ]
    },
    {
        "db_id": "voter_1",
        "query": "SELECT T2.created ,  T2.state ,  T2.phone_number FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number WHERE T1.contestant_name  =  'Tabatha Gehling'",
        "query_toks": [
            "SELECT",
            "T2.created",
            ",",
            "T2.state",
            ",",
            "T2.phone_number",
            "FROM",
            "contestants",
            "AS",
            "T1",
            "JOIN",
            "votes",
            "AS",
            "T2",
            "ON",
            "T1.contestant_number",
            "=",
            "T2.contestant_number",
            "WHERE",
            "T1.contestant_name",
            "=",
            "'Tabatha",
            "Gehling",
            "'"
        ],
        "query_toks_no_value": [
            "select",
            "t2",
            ".",
            "created",
            ",",
            "t2",
            ".",
            "state",
            ",",
            "t2",
            ".",
            "phone_number",
            "from",
            "contestants",
            "as",
            "t1",
            "join",
            "votes",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "contestant_number",
            "=",
            "t2",
            ".",
            "contestant_number",
            "where",
            "t1",
            ".",
            "contestant_name",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ],
                    "\"Tabatha Gehling\"",
                    null
                ]
            ]
        },
        "question": "list create of vote state of vote phone number of vote with contestant name of contestant equal to value",
        "gold_question": "list create of vote state of vote phone number of vote with contestant name of contestant equal to value",
        "question_toks": [
            "list",
            "create",
            "of",
            "vote",
            "state",
            "of",
            "vote",
            "phone",
            "number",
            "of",
            "vote",
            "with",
            "contestant",
            "name",
            "of",
            "contestant",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "voter_1",
        "query": "SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Tabatha Gehling' INTERSECT SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Kelly Clauss'",
        "query_toks": [
            "SELECT",
            "T3.area_code",
            "FROM",
            "contestants",
            "AS",
            "T1",
            "JOIN",
            "votes",
            "AS",
            "T2",
            "ON",
            "T1.contestant_number",
            "=",
            "T2.contestant_number",
            "JOIN",
            "area_code_state",
            "AS",
            "T3",
            "ON",
            "T2.state",
            "=",
            "T3.state",
            "WHERE",
            "T1.contestant_name",
            "=",
            "'Tabatha",
            "Gehling",
            "'",
            "INTERSECT",
            "SELECT",
            "T3.area_code",
            "FROM",
            "contestants",
            "AS",
            "T1",
            "JOIN",
            "votes",
            "AS",
            "T2",
            "ON",
            "T1.contestant_number",
            "=",
            "T2.contestant_number",
            "JOIN",
            "area_code_state",
            "AS",
            "T3",
            "ON",
            "T2.state",
            "=",
            "T3.state",
            "WHERE",
            "T1.contestant_name",
            "=",
            "'Kelly",
            "Clauss",
            "'"
        ],
        "query_toks_no_value": [
            "select",
            "t3",
            ".",
            "area_code",
            "from",
            "contestants",
            "as",
            "t1",
            "join",
            "votes",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "contestant_number",
            "=",
            "t2",
            ".",
            "contestant_number",
            "join",
            "area_code_state",
            "as",
            "t3",
            "on",
            "t2",
            ".",
            "state",
            "=",
            "t3",
            ".",
            "state",
            "where",
            "t1",
            ".",
            "contestant_name",
            "=",
            "value",
            "intersect",
            "select",
            "t3",
            ".",
            "area_code",
            "from",
            "contestants",
            "as",
            "t1",
            "join",
            "votes",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "contestant_number",
            "=",
            "t2",
            ".",
            "contestant_number",
            "join",
            "area_code_state",
            "as",
            "t3",
            "on",
            "t2",
            ".",
            "state",
            "=",
            "t3",
            ".",
            "state",
            "where",
            "t1",
            ".",
            "contestant_name",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": {
                "except": null,
                "from": {
                    "conds": [
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    3,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ],
                        "and",
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    7,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    "table_units": [
                        [
                            "table_unit",
                            1
                        ],
                        [
                            "table_unit",
                            2
                        ],
                        [
                            "table_unit",
                            0
                        ]
                    ]
                },
                "groupby": [],
                "having": [],
                "intersect": null,
                "limit": null,
                "orderby": [],
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    1,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "union": null,
                "where": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ],
                        "\"Kelly Clauss\"",
                        null
                    ]
                ]
            },
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ],
                    "\"Tabatha Gehling\"",
                    null
                ]
            ]
        },
        "question": "list area code of area code state with contestant name of contestant equal to value and list area code of area code state with contestant name of contestant equal to value",
        "gold_question": "list area code of area code state with contestant name of contestant equal to value and list area code of area code state with contestant name of contestant equal to value",
        "question_toks": [
            "list",
            "area",
            "code",
            "of",
            "area",
            "code",
            "state",
            "with",
            "contestant",
            "name",
            "of",
            "contestant",
            "equal",
            "to",
            "value",
            "and",
            "list",
            "area",
            "code",
            "of",
            "area",
            "code",
            "state",
            "with",
            "contestant",
            "name",
            "of",
            "contestant",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "voter_1",
        "query": "select contestant_name from contestants where contestant_name like \"%al%\"",
        "query_toks": [
            "select",
            "contestant_name",
            "from",
            "contestants",
            "where",
            "contestant_name",
            "like",
            "\"%al%\""
        ],
        "query_toks_no_value": [
            "select",
            "contestant_name",
            "from",
            "contestants",
            "where",
            "contestant_name",
            "like",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    9,
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ],
                    "\"%al%\"",
                    null
                ]
            ]
        },
        "question": "list contestant name of contestant with contestant name formatted as value",
        "gold_question": "list contestant name of contestant with contestant name formatted as value",
        "question_toks": [
            "list",
            "contestant",
            "name",
            "of",
            "contestant",
            "with",
            "contestant",
            "name",
            "formatted",
            "as",
            "value"
        ]
    },
    {
        "db_id": "world_1",
        "query": "SELECT Name FROM country WHERE IndepYear  >  1950",
        "query_toks": [
            "SELECT",
            "Name",
            "FROM",
            "country",
            "WHERE",
            "IndepYear",
            ">",
            "1950"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "country",
            "where",
            "indepyear",
            ">",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ],
                    1950.0,
                    null
                ]
            ]
        },
        "question": "list name of country with indepdent year greater than value",
        "gold_question": "list name of country with indepdent year greater than value",
        "question_toks": [
            "list",
            "name",
            "of",
            "country",
            "with",
            "indepdent",
            "year",
            "greater",
            "than",
            "value"
        ]
    },
    {
        "db_id": "world_1",
        "query": "SELECT Name FROM country WHERE IndepYear  >  1950",
        "query_toks": [
            "SELECT",
            "Name",
            "FROM",
            "country",
            "WHERE",
            "IndepYear",
            ">",
            "1950"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "country",
            "where",
            "indepyear",
            ">",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ],
                    1950.0,
                    null
                ]
            ]
        },
        "question": "list name of country with indepdent year greater than value",
        "gold_question": "list name of country with indepdent year greater than value",
        "question_toks": [
            "list",
            "name",
            "of",
            "country",
            "with",
            "indepdent",
            "year",
            "greater",
            "than",
            "value"
        ]
    },
    {
        "db_id": "world_1",
        "query": "SELECT count(*) FROM country WHERE GovernmentForm  =  \"Republic\"",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "country",
            "WHERE",
            "GovernmentForm",
            "=",
            "``",
            "Republic",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "country",
            "where",
            "governmentform",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            19,
                            false
                        ],
                        null
                    ],
                    "\"Republic\"",
                    null
                ]
            ]
        },
        "question": "list the total number of country with government form equal to value",
        "gold_question": "list the total number of country with government form equal to value",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "country",
            "with",
            "government",
            "form",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "world_1",
        "query": "SELECT count(*) FROM country WHERE GovernmentForm  =  \"Republic\"",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "country",
            "WHERE",
            "GovernmentForm",
            "=",
            "``",
            "Republic",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "country",
            "where",
            "governmentform",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            19,
                            false
                        ],
                        null
                    ],
                    "\"Republic\"",
                    null
                ]
            ]
        },
        "question": "list the total number of country with government form equal to value",
        "gold_question": "list the total number of country with government form equal to value",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "country",
            "with",
            "government",
            "form",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "world_1",
        "query": "SELECT sum(SurfaceArea) FROM country WHERE Region  =  \"Caribbean\"",
        "query_toks": [
            "SELECT",
            "sum",
            "(",
            "SurfaceArea",
            ")",
            "FROM",
            "country",
            "WHERE",
            "Region",
            "=",
            "``",
            "Caribbean",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "sum",
            "(",
            "surfacearea",
            ")",
            "from",
            "country",
            "where",
            "region",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        4,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    "\"Caribbean\"",
                    null
                ]
            ]
        },
        "question": "list the sum of surface area of country with region equal to value",
        "gold_question": "list the sum of surface area of country with region equal to value",
        "question_toks": [
            "list",
            "the",
            "sum",
            "of",
            "surface",
            "area",
            "of",
            "country",
            "with",
            "region",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "world_1",
        "query": "SELECT sum(SurfaceArea) FROM country WHERE Region  =  \"Caribbean\"",
        "query_toks": [
            "SELECT",
            "sum",
            "(",
            "SurfaceArea",
            ")",
            "FROM",
            "country",
            "WHERE",
            "Region",
            "=",
            "``",
            "Caribbean",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "sum",
            "(",
            "surfacearea",
            ")",
            "from",
            "country",
            "where",
            "region",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        4,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    "\"Caribbean\"",
                    null
                ]
            ]
        },
        "question": "list the sum of surface area of country with continent equal to value",
        "gold_question": "list the sum of surface area of country with region equal to value",
        "question_toks": [
            "list",
            "the",
            "sum",
            "of",
            "surface",
            "area",
            "of",
            "country",
            "with",
            "continent",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "world_1",
        "query": "SELECT Continent FROM country WHERE Name  =  \"Anguilla\"",
        "query_toks": [
            "SELECT",
            "Continent",
            "FROM",
            "country",
            "WHERE",
            "Name",
            "=",
            "``",
            "Anguilla",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "continent",
            "from",
            "country",
            "where",
            "name",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ],
                    "\"Anguilla\"",
                    null
                ]
            ]
        },
        "question": "list continent of country with name equal to value",
        "gold_question": "list continent of country with name equal to value",
        "question_toks": [
            "list",
            "continent",
            "of",
            "country",
            "with",
            "name",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "world_1",
        "query": "SELECT Continent FROM country WHERE Name  =  \"Anguilla\"",
        "query_toks": [
            "SELECT",
            "Continent",
            "FROM",
            "country",
            "WHERE",
            "Name",
            "=",
            "``",
            "Anguilla",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "continent",
            "from",
            "country",
            "where",
            "name",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ],
                    "\"Anguilla\"",
                    null
                ]
            ]
        },
        "question": "list continent of country with name equal to value",
        "gold_question": "list continent of country with name equal to value",
        "question_toks": [
            "list",
            "continent",
            "of",
            "country",
            "with",
            "name",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "world_1",
        "query": "SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  \"Kabul\"",
        "query_toks": [
            "SELECT",
            "Region",
            "FROM",
            "country",
            "AS",
            "T1",
            "JOIN",
            "city",
            "AS",
            "T2",
            "ON",
            "T1.Code",
            "=",
            "T2.CountryCode",
            "WHERE",
            "T2.Name",
            "=",
            "``",
            "Kabul",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "region",
            "from",
            "country",
            "as",
            "t1",
            "join",
            "city",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "code",
            "=",
            "t2",
            ".",
            "countrycode",
            "where",
            "t2",
            ".",
            "name",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"Kabul\"",
                    null
                ]
            ]
        },
        "question": "list region of country with name equal to value",
        "gold_question": "list region of country with name of city equal to value",
        "question_toks": [
            "list",
            "region",
            "of",
            "country",
            "with",
            "name",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "world_1",
        "query": "SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  \"Kabul\"",
        "query_toks": [
            "SELECT",
            "Region",
            "FROM",
            "country",
            "AS",
            "T1",
            "JOIN",
            "city",
            "AS",
            "T2",
            "ON",
            "T1.Code",
            "=",
            "T2.CountryCode",
            "WHERE",
            "T2.Name",
            "=",
            "``",
            "Kabul",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "region",
            "from",
            "country",
            "as",
            "t1",
            "join",
            "city",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "code",
            "=",
            "t2",
            ".",
            "countrycode",
            "where",
            "t2",
            ".",
            "name",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"Kabul\"",
                    null
                ]
            ]
        },
        "question": "list region of country with name equal to value",
        "gold_question": "list region of country with name of city equal to value",
        "question_toks": [
            "list",
            "region",
            "of",
            "country",
            "with",
            "name",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "world_1",
        "query": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Aruba\" ORDER BY Percentage DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T2.Language",
            "FROM",
            "country",
            "AS",
            "T1",
            "JOIN",
            "countrylanguage",
            "AS",
            "T2",
            "ON",
            "T1.Code",
            "=",
            "T2.CountryCode",
            "WHERE",
            "T1.Name",
            "=",
            "``",
            "Aruba",
            "''",
            "ORDER",
            "BY",
            "Percentage",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t2",
            ".",
            "language",
            "from",
            "country",
            "as",
            "t1",
            "join",
            "countrylanguage",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "code",
            "=",
            "t2",
            ".",
            "countrycode",
            "where",
            "t1",
            ".",
            "name",
            "=",
            "value",
            "order",
            "by",
            "percentage",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            23,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            26,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                24,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ],
                    "\"Aruba\"",
                    null
                ]
            ]
        },
        "question": "list top value items of language of countrylanguage with name of country equal to value for each language of countrylanguage ordered by the total number of countrylanguage descendingly",
        "gold_question": "list top value items of language of countrylanguage with name of country equal to value ordered by percentage of countrylanguage descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "language",
            "of",
            "countrylanguage",
            "with",
            "name",
            "of",
            "country",
            "equal",
            "to",
            "value",
            "for",
            "each",
            "language",
            "of",
            "countrylanguage",
            "ordered",
            "by",
            "the",
            "total",
            "number",
            "of",
            "countrylanguage",
            "descendingly"
        ]
    },
    {
        "db_id": "world_1",
        "query": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Aruba\" ORDER BY Percentage DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T2.Language",
            "FROM",
            "country",
            "AS",
            "T1",
            "JOIN",
            "countrylanguage",
            "AS",
            "T2",
            "ON",
            "T1.Code",
            "=",
            "T2.CountryCode",
            "WHERE",
            "T1.Name",
            "=",
            "``",
            "Aruba",
            "''",
            "ORDER",
            "BY",
            "Percentage",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t2",
            ".",
            "language",
            "from",
            "country",
            "as",
            "t1",
            "join",
            "countrylanguage",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "code",
            "=",
            "t2",
            ".",
            "countrycode",
            "where",
            "t1",
            ".",
            "name",
            "=",
            "value",
            "order",
            "by",
            "percentage",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            23,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            26,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                24,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ],
                    "\"Aruba\"",
                    null
                ]
            ]
        },
        "question": "list top value items of language of countrylanguage with name of country equal to value for each language of countrylanguage ordered by the total number of countrylanguage descendingly",
        "gold_question": "list top value items of language of countrylanguage with name of country equal to value ordered by percentage of countrylanguage descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "language",
            "of",
            "countrylanguage",
            "with",
            "name",
            "of",
            "country",
            "equal",
            "to",
            "value",
            "for",
            "each",
            "language",
            "of",
            "countrylanguage",
            "ordered",
            "by",
            "the",
            "total",
            "number",
            "of",
            "countrylanguage",
            "descendingly"
        ]
    },
    {
        "db_id": "world_1",
        "query": "SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  \"Brazil\"",
        "query_toks": [
            "SELECT",
            "Population",
            ",",
            "LifeExpectancy",
            "FROM",
            "country",
            "WHERE",
            "Name",
            "=",
            "``",
            "Brazil",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "population",
            ",",
            "lifeexpectancy",
            "from",
            "country",
            "where",
            "name",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ],
                    "\"Brazil\"",
                    null
                ]
            ]
        },
        "question": "list population life expectancy of country with name equal to value",
        "gold_question": "list population life expectancy of country with name equal to value",
        "question_toks": [
            "list",
            "population",
            "life",
            "expectancy",
            "of",
            "country",
            "with",
            "name",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "world_1",
        "query": "SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  \"Brazil\"",
        "query_toks": [
            "SELECT",
            "Population",
            ",",
            "LifeExpectancy",
            "FROM",
            "country",
            "WHERE",
            "Name",
            "=",
            "``",
            "Brazil",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "population",
            ",",
            "lifeexpectancy",
            "from",
            "country",
            "where",
            "name",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ],
                    "\"Brazil\"",
                    null
                ]
            ]
        },
        "question": "list population life expectancy of country with name equal to value",
        "gold_question": "list population life expectancy of country with name equal to value",
        "question_toks": [
            "list",
            "population",
            "life",
            "expectancy",
            "of",
            "country",
            "with",
            "name",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "world_1",
        "query": "SELECT Population ,  Region FROM country WHERE Name  =  \"Angola\"",
        "query_toks": [
            "SELECT",
            "Population",
            ",",
            "Region",
            "FROM",
            "country",
            "WHERE",
            "Name",
            "=",
            "``",
            "Angola",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "population",
            ",",
            "region",
            "from",
            "country",
            "where",
            "name",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ],
                    "\"Angola\"",
                    null
                ]
            ]
        },
        "question": "list region of country population of country with name equal to value",
        "gold_question": "list population region of country with name equal to value",
        "question_toks": [
            "list",
            "region",
            "of",
            "country",
            "population",
            "of",
            "country",
            "with",
            "name",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "world_1",
        "query": "SELECT Population ,  Region FROM country WHERE Name  =  \"Angola\"",
        "query_toks": [
            "SELECT",
            "Population",
            ",",
            "Region",
            "FROM",
            "country",
            "WHERE",
            "Name",
            "=",
            "``",
            "Angola",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "population",
            ",",
            "region",
            "from",
            "country",
            "where",
            "name",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ],
                    "\"Angola\"",
                    null
                ]
            ]
        },
        "question": "list region of country population of country with name of country equal to value",
        "gold_question": "list population region of country with name equal to value",
        "question_toks": [
            "list",
            "region",
            "of",
            "country",
            "population",
            "of",
            "country",
            "with",
            "name",
            "of",
            "country",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "world_1",
        "query": "SELECT avg(LifeExpectancy) FROM country WHERE Region  =  \"Central Africa\"",
        "query_toks": [
            "SELECT",
            "avg",
            "(",
            "LifeExpectancy",
            ")",
            "FROM",
            "country",
            "WHERE",
            "Region",
            "=",
            "``",
            "Central",
            "Africa",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "lifeexpectancy",
            ")",
            "from",
            "country",
            "where",
            "region",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    "\"Central Africa\"",
                    null
                ]
            ]
        },
        "question": "list the average of life expectancy of country with region equal to value",
        "gold_question": "list the average of life expectancy of country with region equal to value",
        "question_toks": [
            "list",
            "the",
            "average",
            "of",
            "life",
            "expectancy",
            "of",
            "country",
            "with",
            "region",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "world_1",
        "query": "SELECT avg(LifeExpectancy) FROM country WHERE Region  =  \"Central Africa\"",
        "query_toks": [
            "SELECT",
            "avg",
            "(",
            "LifeExpectancy",
            ")",
            "FROM",
            "country",
            "WHERE",
            "Region",
            "=",
            "``",
            "Central",
            "Africa",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "lifeexpectancy",
            ")",
            "from",
            "country",
            "where",
            "region",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    "\"Central Africa\"",
                    null
                ]
            ]
        },
        "question": "list the average of life expectancy of country with region equal to value",
        "gold_question": "list the average of life expectancy of country with region equal to value",
        "question_toks": [
            "list",
            "the",
            "average",
            "of",
            "life",
            "expectancy",
            "of",
            "country",
            "with",
            "region",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "world_1",
        "query": "SELECT Name FROM country WHERE Continent  =  \"Asia\" ORDER BY LifeExpectancy LIMIT 1",
        "query_toks": [
            "SELECT",
            "Name",
            "FROM",
            "country",
            "WHERE",
            "Continent",
            "=",
            "``",
            "Asia",
            "''",
            "ORDER",
            "BY",
            "LifeExpectancy",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "country",
            "where",
            "continent",
            "=",
            "value",
            "order",
            "by",
            "lifeexpectancy",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            15,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    "\"Asia\"",
                    null
                ]
            ]
        },
        "question": "list name of country with continent equal to value ordered by life expectancy ascendingly",
        "gold_question": "list top value items of name of country with continent equal to value ordered by life expectancy ascendingly",
        "question_toks": [
            "list",
            "name",
            "of",
            "country",
            "with",
            "continent",
            "equal",
            "to",
            "value",
            "ordered",
            "by",
            "life",
            "expectancy",
            "ascendingly"
        ]
    },
    {
        "db_id": "world_1",
        "query": "SELECT Name FROM country WHERE Continent  =  \"Asia\" ORDER BY LifeExpectancy LIMIT 1",
        "query_toks": [
            "SELECT",
            "Name",
            "FROM",
            "country",
            "WHERE",
            "Continent",
            "=",
            "``",
            "Asia",
            "''",
            "ORDER",
            "BY",
            "LifeExpectancy",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "country",
            "where",
            "continent",
            "=",
            "value",
            "order",
            "by",
            "lifeexpectancy",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            15,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    "\"Asia\"",
                    null
                ]
            ]
        },
        "question": "list top value items of name of country with region equal to value ordered by life expectancy ascendingly",
        "gold_question": "list top value items of name of country with continent equal to value ordered by life expectancy ascendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "name",
            "of",
            "country",
            "with",
            "region",
            "equal",
            "to",
            "value",
            "ordered",
            "by",
            "life",
            "expectancy",
            "ascendingly"
        ]
    },
    {
        "db_id": "world_1",
        "query": "SELECT sum(Population) ,  max(GNP) FROM country WHERE Continent  =  \"Asia\"",
        "query_toks": [
            "SELECT",
            "sum",
            "(",
            "Population",
            ")",
            ",",
            "max",
            "(",
            "GNP",
            ")",
            "FROM",
            "country",
            "WHERE",
            "Continent",
            "=",
            "``",
            "Asia",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "sum",
            "(",
            "population",
            ")",
            ",",
            "max",
            "(",
            "gnp",
            ")",
            "from",
            "country",
            "where",
            "continent",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        4,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                16,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    "\"Asia\"",
                    null
                ]
            ]
        },
        "question": "list the sum of population the maximum of gnp of country with continent equal to value",
        "gold_question": "list the sum of population the maximum of gnp of country with continent equal to value",
        "question_toks": [
            "list",
            "the",
            "sum",
            "of",
            "population",
            "the",
            "maximum",
            "of",
            "gnp",
            "of",
            "country",
            "with",
            "continent",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "world_1",
        "query": "SELECT sum(Population) ,  max(GNP) FROM country WHERE Continent  =  \"Asia\"",
        "query_toks": [
            "SELECT",
            "sum",
            "(",
            "Population",
            ")",
            ",",
            "max",
            "(",
            "GNP",
            ")",
            "FROM",
            "country",
            "WHERE",
            "Continent",
            "=",
            "``",
            "Asia",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "sum",
            "(",
            "population",
            ")",
            ",",
            "max",
            "(",
            "gnp",
            ")",
            "from",
            "country",
            "where",
            "continent",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        4,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                16,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    "\"Asia\"",
                    null
                ]
            ]
        },
        "question": "list the sum of population the maximum of gnp of country with continent equal to value",
        "gold_question": "list the sum of population the maximum of gnp of country with continent equal to value",
        "question_toks": [
            "list",
            "the",
            "sum",
            "of",
            "population",
            "the",
            "maximum",
            "of",
            "gnp",
            "of",
            "country",
            "with",
            "continent",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "world_1",
        "query": "SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  \"Africa\" AND GovernmentForm  =  \"Republic\"",
        "query_toks": [
            "SELECT",
            "avg",
            "(",
            "LifeExpectancy",
            ")",
            "FROM",
            "country",
            "WHERE",
            "Continent",
            "=",
            "``",
            "Africa",
            "''",
            "AND",
            "GovernmentForm",
            "=",
            "``",
            "Republic",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "lifeexpectancy",
            ")",
            "from",
            "country",
            "where",
            "continent",
            "=",
            "value",
            "and",
            "governmentform",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    "\"Africa\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            19,
                            false
                        ],
                        null
                    ],
                    "\"Republic\"",
                    null
                ]
            ]
        },
        "question": "list the average of life expectancy of country with name equal to value and government form equal to value",
        "gold_question": "list the average of life expectancy of country with continent equal to value and government form equal to value",
        "question_toks": [
            "list",
            "the",
            "average",
            "of",
            "life",
            "expectancy",
            "of",
            "country",
            "with",
            "name",
            "equal",
            "to",
            "value",
            "and",
            "government",
            "form",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "world_1",
        "query": "SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  \"Africa\" AND GovernmentForm  =  \"Republic\"",
        "query_toks": [
            "SELECT",
            "avg",
            "(",
            "LifeExpectancy",
            ")",
            "FROM",
            "country",
            "WHERE",
            "Continent",
            "=",
            "``",
            "Africa",
            "''",
            "AND",
            "GovernmentForm",
            "=",
            "``",
            "Republic",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "lifeexpectancy",
            ")",
            "from",
            "country",
            "where",
            "continent",
            "=",
            "value",
            "and",
            "governmentform",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    "\"Africa\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            19,
                            false
                        ],
                        null
                    ],
                    "\"Republic\"",
                    null
                ]
            ]
        },
        "question": "list the average of life expectancy of country with region equal to value and name equal to value",
        "gold_question": "list the average of life expectancy of country with continent equal to value and government form equal to value",
        "question_toks": [
            "list",
            "the",
            "average",
            "of",
            "life",
            "expectancy",
            "of",
            "country",
            "with",
            "region",
            "equal",
            "to",
            "value",
            "and",
            "name",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "world_1",
        "query": "SELECT sum(SurfaceArea) FROM country WHERE Continent  =  \"Asia\" OR Continent  =  \"Europe\"",
        "query_toks": [
            "SELECT",
            "sum",
            "(",
            "SurfaceArea",
            ")",
            "FROM",
            "country",
            "WHERE",
            "Continent",
            "=",
            "``",
            "Asia",
            "''",
            "OR",
            "Continent",
            "=",
            "``",
            "Europe",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "sum",
            "(",
            "surfacearea",
            ")",
            "from",
            "country",
            "where",
            "continent",
            "=",
            "value",
            "or",
            "continent",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        4,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    "\"Asia\"",
                    null
                ],
                "or",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    "\"Europe\"",
                    null
                ]
            ]
        },
        "question": "list the sum of surface area of country with continent equal to value and region equal to value",
        "gold_question": "list the sum of surface area of country with continent equal to value or continent equal to value",
        "question_toks": [
            "list",
            "the",
            "sum",
            "of",
            "surface",
            "area",
            "of",
            "country",
            "with",
            "continent",
            "equal",
            "to",
            "value",
            "and",
            "region",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "world_1",
        "query": "SELECT sum(SurfaceArea) FROM country WHERE Continent  =  \"Asia\" OR Continent  =  \"Europe\"",
        "query_toks": [
            "SELECT",
            "sum",
            "(",
            "SurfaceArea",
            ")",
            "FROM",
            "country",
            "WHERE",
            "Continent",
            "=",
            "``",
            "Asia",
            "''",
            "OR",
            "Continent",
            "=",
            "``",
            "Europe",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "sum",
            "(",
            "surfacearea",
            ")",
            "from",
            "country",
            "where",
            "continent",
            "=",
            "value",
            "or",
            "continent",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        4,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    "\"Asia\"",
                    null
                ],
                "or",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    "\"Europe\"",
                    null
                ]
            ]
        },
        "question": "list the sum of surface area of country with region equal to value or region equal to value",
        "gold_question": "list the sum of surface area of country with continent equal to value or continent equal to value",
        "question_toks": [
            "list",
            "the",
            "sum",
            "of",
            "surface",
            "area",
            "of",
            "country",
            "with",
            "region",
            "equal",
            "to",
            "value",
            "or",
            "region",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "world_1",
        "query": "SELECT sum(Population) FROM city WHERE District  =  \"Gelderland\"",
        "query_toks": [
            "SELECT",
            "sum",
            "(",
            "Population",
            ")",
            "FROM",
            "city",
            "WHERE",
            "District",
            "=",
            "``",
            "Gelderland",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "sum",
            "(",
            "population",
            ")",
            "from",
            "city",
            "where",
            "district",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        4,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ],
                    "\"Gelderland\"",
                    null
                ]
            ]
        },
        "question": "list population of city with district equal to value",
        "gold_question": "list the sum of population of city with district equal to value",
        "question_toks": [
            "list",
            "population",
            "of",
            "city",
            "with",
            "district",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "world_1",
        "query": "SELECT sum(Population) FROM city WHERE District  =  \"Gelderland\"",
        "query_toks": [
            "SELECT",
            "sum",
            "(",
            "Population",
            ")",
            "FROM",
            "city",
            "WHERE",
            "District",
            "=",
            "``",
            "Gelderland",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "sum",
            "(",
            "population",
            ")",
            "from",
            "city",
            "where",
            "district",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        4,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ],
                    "\"Gelderland\"",
                    null
                ]
            ]
        },
        "question": "list the sum of population of city with district equal to value",
        "gold_question": "list the sum of population of city with district equal to value",
        "question_toks": [
            "list",
            "the",
            "sum",
            "of",
            "population",
            "of",
            "city",
            "with",
            "district",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "world_1",
        "query": "SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  \"US Territory\"",
        "query_toks": [
            "SELECT",
            "avg",
            "(",
            "GNP",
            ")",
            ",",
            "sum",
            "(",
            "population",
            ")",
            "FROM",
            "country",
            "WHERE",
            "GovernmentForm",
            "=",
            "``",
            "US",
            "Territory",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "gnp",
            ")",
            ",",
            "sum",
            "(",
            "population",
            ")",
            "from",
            "country",
            "where",
            "governmentform",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                16,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        4,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            19,
                            false
                        ],
                        null
                    ],
                    "\"US Territory\"",
                    null
                ]
            ]
        },
        "question": "list the average of gnp the sum of population of country with government form equal to value",
        "gold_question": "list the average of gnp the sum of population of country with government form equal to value",
        "question_toks": [
            "list",
            "the",
            "average",
            "of",
            "gnp",
            "the",
            "sum",
            "of",
            "population",
            "of",
            "country",
            "with",
            "government",
            "form",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "world_1",
        "query": "SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  \"US Territory\"",
        "query_toks": [
            "SELECT",
            "avg",
            "(",
            "GNP",
            ")",
            ",",
            "sum",
            "(",
            "population",
            ")",
            "FROM",
            "country",
            "WHERE",
            "GovernmentForm",
            "=",
            "``",
            "US",
            "Territory",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "gnp",
            ")",
            ",",
            "sum",
            "(",
            "population",
            ")",
            "from",
            "country",
            "where",
            "governmentform",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                16,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        4,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            19,
                            false
                        ],
                        null
                    ],
                    "\"US Territory\"",
                    null
                ]
            ]
        },
        "question": "list the average of gnp the sum of population of country with name equal to value",
        "gold_question": "list the average of gnp the sum of population of country with government form equal to value",
        "question_toks": [
            "list",
            "the",
            "average",
            "of",
            "gnp",
            "the",
            "sum",
            "of",
            "population",
            "of",
            "country",
            "with",
            "name",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "world_1",
        "query": "SELECT count(DISTINCT LANGUAGE) FROM countrylanguage",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "DISTINCT",
            "LANGUAGE",
            ")",
            "FROM",
            "countrylanguage"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "distinct",
            "language",
            ")",
            "from",
            "countrylanguage"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                24,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list the number of language of countrylanguage",
        "gold_question": "list the number of language of countrylanguage",
        "question_toks": [
            "list",
            "the",
            "number",
            "of",
            "language",
            "of",
            "countrylanguage"
        ]
    },
    {
        "db_id": "world_1",
        "query": "SELECT count(DISTINCT LANGUAGE) FROM countrylanguage",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "DISTINCT",
            "LANGUAGE",
            ")",
            "FROM",
            "countrylanguage"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "distinct",
            "language",
            ")",
            "from",
            "countrylanguage"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                24,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list the number of language of countrylanguage",
        "gold_question": "list the number of language of countrylanguage",
        "question_toks": [
            "list",
            "the",
            "number",
            "of",
            "language",
            "of",
            "countrylanguage"
        ]
    },
    {
        "db_id": "world_1",
        "query": "SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent  =  \"Africa\"",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "DISTINCT",
            "GovernmentForm",
            ")",
            "FROM",
            "country",
            "WHERE",
            "Continent",
            "=",
            "``",
            "Africa",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "distinct",
            "governmentform",
            ")",
            "from",
            "country",
            "where",
            "continent",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                19,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    "\"Africa\"",
                    null
                ]
            ]
        },
        "question": "list the number of government form of country with continent equal to value",
        "gold_question": "list the number of government form of country with continent equal to value",
        "question_toks": [
            "list",
            "the",
            "number",
            "of",
            "government",
            "form",
            "of",
            "country",
            "with",
            "continent",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "world_1",
        "query": "SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent  =  \"Africa\"",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "DISTINCT",
            "GovernmentForm",
            ")",
            "FROM",
            "country",
            "WHERE",
            "Continent",
            "=",
            "``",
            "Africa",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "distinct",
            "governmentform",
            ")",
            "from",
            "country",
            "where",
            "continent",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                19,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    "\"Africa\"",
                    null
                ]
            ]
        },
        "question": "list the number of government form of country with continent equal to value",
        "gold_question": "list the number of government form of country with continent equal to value",
        "question_toks": [
            "list",
            "the",
            "number",
            "of",
            "government",
            "form",
            "of",
            "country",
            "with",
            "continent",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "world_1",
        "query": "SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Aruba\"",
        "query_toks": [
            "SELECT",
            "COUNT",
            "(",
            "T2.Language",
            ")",
            "FROM",
            "country",
            "AS",
            "T1",
            "JOIN",
            "countrylanguage",
            "AS",
            "T2",
            "ON",
            "T1.Code",
            "=",
            "T2.CountryCode",
            "WHERE",
            "T1.Name",
            "=",
            "``",
            "Aruba",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "t2",
            ".",
            "language",
            ")",
            "from",
            "country",
            "as",
            "t1",
            "join",
            "countrylanguage",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "code",
            "=",
            "t2",
            ".",
            "countrycode",
            "where",
            "t1",
            ".",
            "name",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            23,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                24,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ],
                    "\"Aruba\"",
                    null
                ]
            ]
        },
        "question": "list the number of language of countrylanguage with name of country equal to value",
        "gold_question": "list the number of language of countrylanguage with name of country equal to value",
        "question_toks": [
            "list",
            "the",
            "number",
            "of",
            "language",
            "of",
            "countrylanguage",
            "with",
            "name",
            "of",
            "country",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "world_1",
        "query": "SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Aruba\"",
        "query_toks": [
            "SELECT",
            "COUNT",
            "(",
            "T2.Language",
            ")",
            "FROM",
            "country",
            "AS",
            "T1",
            "JOIN",
            "countrylanguage",
            "AS",
            "T2",
            "ON",
            "T1.Code",
            "=",
            "T2.CountryCode",
            "WHERE",
            "T1.Name",
            "=",
            "``",
            "Aruba",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "t2",
            ".",
            "language",
            ")",
            "from",
            "country",
            "as",
            "t1",
            "join",
            "countrylanguage",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "code",
            "=",
            "t2",
            ".",
            "countrycode",
            "where",
            "t1",
            ".",
            "name",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            23,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                24,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ],
                    "\"Aruba\"",
                    null
                ]
            ]
        },
        "question": "list the number of language of countrylanguage with name of country equal to value",
        "gold_question": "list the number of language of countrylanguage with name of country equal to value",
        "question_toks": [
            "list",
            "the",
            "number",
            "of",
            "language",
            "of",
            "countrylanguage",
            "with",
            "name",
            "of",
            "country",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "world_1",
        "query": "SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Afghanistan\" AND IsOfficial  =  \"T\"",
        "query_toks": [
            "SELECT",
            "COUNT",
            "(",
            "*",
            ")",
            "FROM",
            "country",
            "AS",
            "T1",
            "JOIN",
            "countrylanguage",
            "AS",
            "T2",
            "ON",
            "T1.Code",
            "=",
            "T2.CountryCode",
            "WHERE",
            "T1.Name",
            "=",
            "``",
            "Afghanistan",
            "''",
            "AND",
            "IsOfficial",
            "=",
            "``",
            "T",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "country",
            "as",
            "t1",
            "join",
            "countrylanguage",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "code",
            "=",
            "t2",
            ".",
            "countrycode",
            "where",
            "t1",
            ".",
            "name",
            "=",
            "value",
            "and",
            "isofficial",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            23,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ],
                    "\"Afghanistan\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            25,
                            false
                        ],
                        null
                    ],
                    "\"T\"",
                    null
                ]
            ]
        },
        "question": "list the number of language of countrylanguage with name of country equal to value",
        "gold_question": "list the total number of country with name of country equal to value and is official of countrylanguage equal to value",
        "question_toks": [
            "list",
            "the",
            "number",
            "of",
            "language",
            "of",
            "countrylanguage",
            "with",
            "name",
            "of",
            "country",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "world_1",
        "query": "SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Afghanistan\" AND IsOfficial  =  \"T\"",
        "query_toks": [
            "SELECT",
            "COUNT",
            "(",
            "*",
            ")",
            "FROM",
            "country",
            "AS",
            "T1",
            "JOIN",
            "countrylanguage",
            "AS",
            "T2",
            "ON",
            "T1.Code",
            "=",
            "T2.CountryCode",
            "WHERE",
            "T1.Name",
            "=",
            "``",
            "Afghanistan",
            "''",
            "AND",
            "IsOfficial",
            "=",
            "``",
            "T",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "country",
            "as",
            "t1",
            "join",
            "countrylanguage",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "code",
            "=",
            "t2",
            ".",
            "countrycode",
            "where",
            "t1",
            ".",
            "name",
            "=",
            "value",
            "and",
            "isofficial",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            23,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ],
                    "\"Afghanistan\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            25,
                            false
                        ],
                        null
                    ],
                    "\"T\"",
                    null
                ]
            ]
        },
        "question": "list the number of language of countrylanguage with name of country equal to value",
        "gold_question": "list the total number of country with name of country equal to value and is official of countrylanguage equal to value",
        "question_toks": [
            "list",
            "the",
            "number",
            "of",
            "language",
            "of",
            "countrylanguage",
            "with",
            "name",
            "of",
            "country",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "world_1",
        "query": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T1.Name",
            "FROM",
            "country",
            "AS",
            "T1",
            "JOIN",
            "countrylanguage",
            "AS",
            "T2",
            "ON",
            "T1.Code",
            "=",
            "T2.CountryCode",
            "GROUP",
            "BY",
            "T1.Name",
            "ORDER",
            "BY",
            "COUNT",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "name",
            "from",
            "country",
            "as",
            "t1",
            "join",
            "countrylanguage",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "code",
            "=",
            "t2",
            ".",
            "countrycode",
            "group",
            "by",
            "t1",
            ".",
            "name",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            23,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    9,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of name of country for each name of country ordered by the total number of country descendingly",
        "gold_question": "list top value items of name of country for each name of country ordered by the total number of country descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "name",
            "of",
            "country",
            "for",
            "each",
            "name",
            "of",
            "country",
            "ordered",
            "by",
            "the",
            "total",
            "number",
            "of",
            "country",
            "descendingly"
        ]
    },
    {
        "db_id": "world_1",
        "query": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T1.Name",
            "FROM",
            "country",
            "AS",
            "T1",
            "JOIN",
            "countrylanguage",
            "AS",
            "T2",
            "ON",
            "T1.Code",
            "=",
            "T2.CountryCode",
            "GROUP",
            "BY",
            "T1.Name",
            "ORDER",
            "BY",
            "COUNT",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "name",
            "from",
            "country",
            "as",
            "t1",
            "join",
            "countrylanguage",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "code",
            "=",
            "t2",
            ".",
            "countrycode",
            "group",
            "by",
            "t1",
            ".",
            "name",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            23,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    9,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of name of country for each name of country ordered by the sum of language of countrylanguage descendingly",
        "gold_question": "list top value items of name of country for each name of country ordered by the total number of country descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "name",
            "of",
            "country",
            "for",
            "each",
            "name",
            "of",
            "country",
            "ordered",
            "by",
            "the",
            "sum",
            "of",
            "language",
            "of",
            "countrylanguage",
            "descendingly"
        ]
    },
    {
        "db_id": "world_1",
        "query": "SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T1.Continent",
            "FROM",
            "country",
            "AS",
            "T1",
            "JOIN",
            "countrylanguage",
            "AS",
            "T2",
            "ON",
            "T1.Code",
            "=",
            "T2.CountryCode",
            "GROUP",
            "BY",
            "T1.Continent",
            "ORDER",
            "BY",
            "COUNT",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "continent",
            "from",
            "country",
            "as",
            "t1",
            "join",
            "countrylanguage",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "code",
            "=",
            "t2",
            ".",
            "countrycode",
            "group",
            "by",
            "t1",
            ".",
            "continent",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            23,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    10,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of continent of country for each continent of country ordered by the sum of language of countrylanguage descendingly",
        "gold_question": "list top value items of continent of country for each continent of country ordered by the total number of country descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "continent",
            "of",
            "country",
            "for",
            "each",
            "continent",
            "of",
            "country",
            "ordered",
            "by",
            "the",
            "sum",
            "of",
            "language",
            "of",
            "countrylanguage",
            "descendingly"
        ]
    },
    {
        "db_id": "world_1",
        "query": "SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T1.Continent",
            "FROM",
            "country",
            "AS",
            "T1",
            "JOIN",
            "countrylanguage",
            "AS",
            "T2",
            "ON",
            "T1.Code",
            "=",
            "T2.CountryCode",
            "GROUP",
            "BY",
            "T1.Continent",
            "ORDER",
            "BY",
            "COUNT",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "continent",
            "from",
            "country",
            "as",
            "t1",
            "join",
            "countrylanguage",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "code",
            "=",
            "t2",
            ".",
            "countrycode",
            "group",
            "by",
            "t1",
            ".",
            "continent",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            23,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    10,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of continent of country for each continent of country ordered by the total number of country descendingly",
        "gold_question": "list top value items of continent of country for each continent of country ordered by the total number of country descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "continent",
            "of",
            "country",
            "for",
            "each",
            "continent",
            "of",
            "country",
            "ordered",
            "by",
            "the",
            "total",
            "number",
            "of",
            "country",
            "descendingly"
        ]
    },
    {
        "db_id": "world_1",
        "query": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"French\"",
        "query_toks": [
            "SELECT",
            "T1.Name",
            "FROM",
            "country",
            "AS",
            "T1",
            "JOIN",
            "countrylanguage",
            "AS",
            "T2",
            "ON",
            "T1.Code",
            "=",
            "T2.CountryCode",
            "WHERE",
            "T2.Language",
            "=",
            "``",
            "English",
            "''",
            "INTERSECT",
            "SELECT",
            "T1.Name",
            "FROM",
            "country",
            "AS",
            "T1",
            "JOIN",
            "countrylanguage",
            "AS",
            "T2",
            "ON",
            "T1.Code",
            "=",
            "T2.CountryCode",
            "WHERE",
            "T2.Language",
            "=",
            "``",
            "French",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "name",
            "from",
            "country",
            "as",
            "t1",
            "join",
            "countrylanguage",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "code",
            "=",
            "t2",
            ".",
            "countrycode",
            "where",
            "t2",
            ".",
            "language",
            "=",
            "value",
            "intersect",
            "select",
            "t1",
            ".",
            "name",
            "from",
            "country",
            "as",
            "t1",
            "join",
            "countrylanguage",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "code",
            "=",
            "t2",
            ".",
            "countrycode",
            "where",
            "t2",
            ".",
            "language",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            23,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": {
                "except": null,
                "from": {
                    "conds": [
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    8,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                23,
                                false
                            ],
                            null
                        ]
                    ],
                    "table_units": [
                        [
                            "table_unit",
                            2
                        ],
                        [
                            "table_unit",
                            3
                        ]
                    ]
                },
                "groupby": [],
                "having": [],
                "intersect": null,
                "limit": null,
                "orderby": [],
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    9,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "union": null,
                "where": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                24,
                                false
                            ],
                            null
                        ],
                        "\"French\"",
                        null
                    ]
                ]
            },
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            24,
                            false
                        ],
                        null
                    ],
                    "\"English\"",
                    null
                ]
            ]
        },
        "question": "list name of country with language of countrylanguage equal to value and list name of country with language of countrylanguage equal to value",
        "gold_question": "list name of country with language of countrylanguage equal to value and list name of country with language of countrylanguage equal to value",
        "question_toks": [
            "list",
            "name",
            "of",
            "country",
            "with",
            "language",
            "of",
            "countrylanguage",
            "equal",
            "to",
            "value",
            "and",
            "list",
            "name",
            "of",
            "country",
            "with",
            "language",
            "of",
            "countrylanguage",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "world_1",
        "query": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"French\"",
        "query_toks": [
            "SELECT",
            "T1.Name",
            "FROM",
            "country",
            "AS",
            "T1",
            "JOIN",
            "countrylanguage",
            "AS",
            "T2",
            "ON",
            "T1.Code",
            "=",
            "T2.CountryCode",
            "WHERE",
            "T2.Language",
            "=",
            "``",
            "English",
            "''",
            "INTERSECT",
            "SELECT",
            "T1.Name",
            "FROM",
            "country",
            "AS",
            "T1",
            "JOIN",
            "countrylanguage",
            "AS",
            "T2",
            "ON",
            "T1.Code",
            "=",
            "T2.CountryCode",
            "WHERE",
            "T2.Language",
            "=",
            "``",
            "French",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "name",
            "from",
            "country",
            "as",
            "t1",
            "join",
            "countrylanguage",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "code",
            "=",
            "t2",
            ".",
            "countrycode",
            "where",
            "t2",
            ".",
            "language",
            "=",
            "value",
            "intersect",
            "select",
            "t1",
            ".",
            "name",
            "from",
            "country",
            "as",
            "t1",
            "join",
            "countrylanguage",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "code",
            "=",
            "t2",
            ".",
            "countrycode",
            "where",
            "t2",
            ".",
            "language",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            23,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": {
                "except": null,
                "from": {
                    "conds": [
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    8,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                23,
                                false
                            ],
                            null
                        ]
                    ],
                    "table_units": [
                        [
                            "table_unit",
                            2
                        ],
                        [
                            "table_unit",
                            3
                        ]
                    ]
                },
                "groupby": [],
                "having": [],
                "intersect": null,
                "limit": null,
                "orderby": [],
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    9,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "union": null,
                "where": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                24,
                                false
                            ],
                            null
                        ],
                        "\"French\"",
                        null
                    ]
                ]
            },
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            24,
                            false
                        ],
                        null
                    ],
                    "\"English\"",
                    null
                ]
            ]
        },
        "question": "list name of country with language of countrylanguage equal to value and list name of country with language of countrylanguage equal to value",
        "gold_question": "list name of country with language of countrylanguage equal to value and list name of country with language of countrylanguage equal to value",
        "question_toks": [
            "list",
            "name",
            "of",
            "country",
            "with",
            "language",
            "of",
            "countrylanguage",
            "equal",
            "to",
            "value",
            "and",
            "list",
            "name",
            "of",
            "country",
            "with",
            "language",
            "of",
            "countrylanguage",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "world_1",
        "query": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND T2.IsOfficial  =  \"T\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"French\" AND T2.IsOfficial  =  \"T\"",
        "query_toks": [
            "SELECT",
            "T1.Name",
            "FROM",
            "country",
            "AS",
            "T1",
            "JOIN",
            "countrylanguage",
            "AS",
            "T2",
            "ON",
            "T1.Code",
            "=",
            "T2.CountryCode",
            "WHERE",
            "T2.Language",
            "=",
            "``",
            "English",
            "''",
            "AND",
            "T2.IsOfficial",
            "=",
            "``",
            "T",
            "''",
            "INTERSECT",
            "SELECT",
            "T1.Name",
            "FROM",
            "country",
            "AS",
            "T1",
            "JOIN",
            "countrylanguage",
            "AS",
            "T2",
            "ON",
            "T1.Code",
            "=",
            "T2.CountryCode",
            "WHERE",
            "T2.Language",
            "=",
            "``",
            "French",
            "''",
            "AND",
            "T2.IsOfficial",
            "=",
            "``",
            "T",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "name",
            "from",
            "country",
            "as",
            "t1",
            "join",
            "countrylanguage",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "code",
            "=",
            "t2",
            ".",
            "countrycode",
            "where",
            "t2",
            ".",
            "language",
            "=",
            "value",
            "and",
            "t2",
            ".",
            "isofficial",
            "=",
            "value",
            "intersect",
            "select",
            "t1",
            ".",
            "name",
            "from",
            "country",
            "as",
            "t1",
            "join",
            "countrylanguage",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "code",
            "=",
            "t2",
            ".",
            "countrycode",
            "where",
            "t2",
            ".",
            "language",
            "=",
            "value",
            "and",
            "t2",
            ".",
            "isofficial",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            23,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": {
                "except": null,
                "from": {
                    "conds": [
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    8,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                23,
                                false
                            ],
                            null
                        ]
                    ],
                    "table_units": [
                        [
                            "table_unit",
                            2
                        ],
                        [
                            "table_unit",
                            3
                        ]
                    ]
                },
                "groupby": [],
                "having": [],
                "intersect": null,
                "limit": null,
                "orderby": [],
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    9,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "union": null,
                "where": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                24,
                                false
                            ],
                            null
                        ],
                        "\"French\"",
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                25,
                                false
                            ],
                            null
                        ],
                        "\"T\"",
                        null
                    ]
                ]
            },
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            24,
                            false
                        ],
                        null
                    ],
                    "\"English\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            25,
                            false
                        ],
                        null
                    ],
                    "\"T\"",
                    null
                ]
            ]
        },
        "question": "list name of country with language of countrylanguage equal to value and list name of country with language of countrylanguage equal to value",
        "gold_question": "list name of country with language of countrylanguage equal to value and is official of countrylanguage equal to value and list name of country with language of countrylanguage equal to value and is official of countrylanguage equal to value",
        "question_toks": [
            "list",
            "name",
            "of",
            "country",
            "with",
            "language",
            "of",
            "countrylanguage",
            "equal",
            "to",
            "value",
            "and",
            "list",
            "name",
            "of",
            "country",
            "with",
            "language",
            "of",
            "countrylanguage",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "world_1",
        "query": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND T2.IsOfficial  =  \"T\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"French\" AND T2.IsOfficial  =  \"T\"",
        "query_toks": [
            "SELECT",
            "T1.Name",
            "FROM",
            "country",
            "AS",
            "T1",
            "JOIN",
            "countrylanguage",
            "AS",
            "T2",
            "ON",
            "T1.Code",
            "=",
            "T2.CountryCode",
            "WHERE",
            "T2.Language",
            "=",
            "``",
            "English",
            "''",
            "AND",
            "T2.IsOfficial",
            "=",
            "``",
            "T",
            "''",
            "INTERSECT",
            "SELECT",
            "T1.Name",
            "FROM",
            "country",
            "AS",
            "T1",
            "JOIN",
            "countrylanguage",
            "AS",
            "T2",
            "ON",
            "T1.Code",
            "=",
            "T2.CountryCode",
            "WHERE",
            "T2.Language",
            "=",
            "``",
            "French",
            "''",
            "AND",
            "T2.IsOfficial",
            "=",
            "``",
            "T",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "name",
            "from",
            "country",
            "as",
            "t1",
            "join",
            "countrylanguage",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "code",
            "=",
            "t2",
            ".",
            "countrycode",
            "where",
            "t2",
            ".",
            "language",
            "=",
            "value",
            "and",
            "t2",
            ".",
            "isofficial",
            "=",
            "value",
            "intersect",
            "select",
            "t1",
            ".",
            "name",
            "from",
            "country",
            "as",
            "t1",
            "join",
            "countrylanguage",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "code",
            "=",
            "t2",
            ".",
            "countrycode",
            "where",
            "t2",
            ".",
            "language",
            "=",
            "value",
            "and",
            "t2",
            ".",
            "isofficial",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            23,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": {
                "except": null,
                "from": {
                    "conds": [
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    8,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                23,
                                false
                            ],
                            null
                        ]
                    ],
                    "table_units": [
                        [
                            "table_unit",
                            2
                        ],
                        [
                            "table_unit",
                            3
                        ]
                    ]
                },
                "groupby": [],
                "having": [],
                "intersect": null,
                "limit": null,
                "orderby": [],
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    9,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "union": null,
                "where": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                24,
                                false
                            ],
                            null
                        ],
                        "\"French\"",
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                25,
                                false
                            ],
                            null
                        ],
                        "\"T\"",
                        null
                    ]
                ]
            },
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            24,
                            false
                        ],
                        null
                    ],
                    "\"English\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            25,
                            false
                        ],
                        null
                    ],
                    "\"T\"",
                    null
                ]
            ]
        },
        "question": "list name of country with language of countrylanguage equal to value and list name of country with language of countrylanguage equal to value",
        "gold_question": "list name of country with language of countrylanguage equal to value and is official of countrylanguage equal to value and list name of country with language of countrylanguage equal to value and is official of countrylanguage equal to value",
        "question_toks": [
            "list",
            "name",
            "of",
            "country",
            "with",
            "language",
            "of",
            "countrylanguage",
            "equal",
            "to",
            "value",
            "and",
            "list",
            "name",
            "of",
            "country",
            "with",
            "language",
            "of",
            "countrylanguage",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "world_1",
        "query": "SELECT COUNT( DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Chinese\"",
        "query_toks": [
            "SELECT",
            "COUNT",
            "(",
            "DISTINCT",
            "Continent",
            ")",
            "FROM",
            "country",
            "AS",
            "T1",
            "JOIN",
            "countrylanguage",
            "AS",
            "T2",
            "ON",
            "T1.Code",
            "=",
            "T2.CountryCode",
            "WHERE",
            "T2.Language",
            "=",
            "``",
            "Chinese",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "distinct",
            "continent",
            ")",
            "from",
            "country",
            "as",
            "t1",
            "join",
            "countrylanguage",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "code",
            "=",
            "t2",
            ".",
            "countrycode",
            "where",
            "t2",
            ".",
            "language",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            23,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                10,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            24,
                            false
                        ],
                        null
                    ],
                    "\"Chinese\"",
                    null
                ]
            ]
        },
        "question": "list the number of continent of country with language of countrylanguage equal to value",
        "gold_question": "list the number of continent of country with language of countrylanguage equal to value",
        "question_toks": [
            "list",
            "the",
            "number",
            "of",
            "continent",
            "of",
            "country",
            "with",
            "language",
            "of",
            "countrylanguage",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "world_1",
        "query": "SELECT COUNT( DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Chinese\"",
        "query_toks": [
            "SELECT",
            "COUNT",
            "(",
            "DISTINCT",
            "Continent",
            ")",
            "FROM",
            "country",
            "AS",
            "T1",
            "JOIN",
            "countrylanguage",
            "AS",
            "T2",
            "ON",
            "T1.Code",
            "=",
            "T2.CountryCode",
            "WHERE",
            "T2.Language",
            "=",
            "``",
            "Chinese",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "distinct",
            "continent",
            ")",
            "from",
            "country",
            "as",
            "t1",
            "join",
            "countrylanguage",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "code",
            "=",
            "t2",
            ".",
            "countrycode",
            "where",
            "t2",
            ".",
            "language",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            23,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                10,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            24,
                            false
                        ],
                        null
                    ],
                    "\"Chinese\"",
                    null
                ]
            ]
        },
        "question": "list the number of continent of country with language of countrylanguage equal to value",
        "gold_question": "list the number of continent of country with language of countrylanguage equal to value",
        "question_toks": [
            "list",
            "the",
            "number",
            "of",
            "continent",
            "of",
            "country",
            "with",
            "language",
            "of",
            "countrylanguage",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "world_1",
        "query": "SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" OR T2.Language  =  \"Dutch\"",
        "query_toks": [
            "SELECT",
            "DISTINCT",
            "T1.Region",
            "FROM",
            "country",
            "AS",
            "T1",
            "JOIN",
            "countrylanguage",
            "AS",
            "T2",
            "ON",
            "T1.Code",
            "=",
            "T2.CountryCode",
            "WHERE",
            "T2.Language",
            "=",
            "``",
            "English",
            "''",
            "OR",
            "T2.Language",
            "=",
            "``",
            "Dutch",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "t1",
            ".",
            "region",
            "from",
            "country",
            "as",
            "t1",
            "join",
            "countrylanguage",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "code",
            "=",
            "t2",
            ".",
            "countrycode",
            "where",
            "t2",
            ".",
            "language",
            "=",
            "value",
            "or",
            "t2",
            ".",
            "language",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            23,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            24,
                            false
                        ],
                        null
                    ],
                    "\"English\"",
                    null
                ],
                "or",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            24,
                            false
                        ],
                        null
                    ],
                    "\"Dutch\"",
                    null
                ]
            ]
        },
        "question": "list region of country with language of countrylanguage equal to value or language of countrylanguage equal to value",
        "gold_question": "list region of country with language of countrylanguage equal to value or language of countrylanguage equal to value",
        "question_toks": [
            "list",
            "region",
            "of",
            "country",
            "with",
            "language",
            "of",
            "countrylanguage",
            "equal",
            "to",
            "value",
            "or",
            "language",
            "of",
            "countrylanguage",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "world_1",
        "query": "SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" OR T2.Language  =  \"Dutch\"",
        "query_toks": [
            "SELECT",
            "DISTINCT",
            "T1.Region",
            "FROM",
            "country",
            "AS",
            "T1",
            "JOIN",
            "countrylanguage",
            "AS",
            "T2",
            "ON",
            "T1.Code",
            "=",
            "T2.CountryCode",
            "WHERE",
            "T2.Language",
            "=",
            "``",
            "English",
            "''",
            "OR",
            "T2.Language",
            "=",
            "``",
            "Dutch",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "t1",
            ".",
            "region",
            "from",
            "country",
            "as",
            "t1",
            "join",
            "countrylanguage",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "code",
            "=",
            "t2",
            ".",
            "countrycode",
            "where",
            "t2",
            ".",
            "language",
            "=",
            "value",
            "or",
            "t2",
            ".",
            "language",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            23,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            24,
                            false
                        ],
                        null
                    ],
                    "\"English\"",
                    null
                ],
                "or",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            24,
                            false
                        ],
                        null
                    ],
                    "\"Dutch\"",
                    null
                ]
            ]
        },
        "question": "list region of country with language of countrylanguage equal to value or language of countrylanguage equal to value",
        "gold_question": "list region of country with language of countrylanguage equal to value or language of countrylanguage equal to value",
        "question_toks": [
            "list",
            "region",
            "of",
            "country",
            "with",
            "language",
            "of",
            "countrylanguage",
            "equal",
            "to",
            "value",
            "or",
            "language",
            "of",
            "countrylanguage",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "world_1",
        "query": "select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language  =  \"english\" and isofficial  =  \"t\" union select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language  =  \"dutch\" and isofficial  =  \"t\"",
        "query_toks": [
            "select",
            "t1.name",
            "from",
            "country",
            "as",
            "t1",
            "join",
            "countrylanguage",
            "as",
            "t2",
            "on",
            "t1.code",
            "=",
            "t2.countrycode",
            "where",
            "t2.language",
            "=",
            "\"english\"",
            "and",
            "isofficial",
            "=",
            "\"t\"",
            "union",
            "select",
            "t1.name",
            "from",
            "country",
            "as",
            "t1",
            "join",
            "countrylanguage",
            "as",
            "t2",
            "on",
            "t1.code",
            "=",
            "t2.countrycode",
            "where",
            "t2.language",
            "=",
            "\"dutch\"",
            "and",
            "isofficial",
            "=",
            "\"t\""
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "name",
            "from",
            "country",
            "as",
            "t1",
            "join",
            "countrylanguage",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "code",
            "=",
            "t2",
            ".",
            "countrycode",
            "where",
            "t2",
            ".",
            "language",
            "=",
            "value",
            "and",
            "isofficial",
            "=",
            "value",
            "union",
            "select",
            "t1",
            ".",
            "name",
            "from",
            "country",
            "as",
            "t1",
            "join",
            "countrylanguage",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "code",
            "=",
            "t2",
            ".",
            "countrycode",
            "where",
            "t2",
            ".",
            "language",
            "=",
            "value",
            "and",
            "isofficial",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            23,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": {
                "except": null,
                "from": {
                    "conds": [
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    8,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                23,
                                false
                            ],
                            null
                        ]
                    ],
                    "table_units": [
                        [
                            "table_unit",
                            2
                        ],
                        [
                            "table_unit",
                            3
                        ]
                    ]
                },
                "groupby": [],
                "having": [],
                "intersect": null,
                "limit": null,
                "orderby": [],
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    9,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "union": null,
                "where": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                24,
                                false
                            ],
                            null
                        ],
                        "\"dutch\"",
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                25,
                                false
                            ],
                            null
                        ],
                        "\"t\"",
                        null
                    ]
                ]
            },
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            24,
                            false
                        ],
                        null
                    ],
                    "\"english\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            25,
                            false
                        ],
                        null
                    ],
                    "\"t\"",
                    null
                ]
            ]
        },
        "question": "list name of country with language of countrylanguage equal to value or language of countrylanguage equal to value",
        "gold_question": "list name of country with language of countrylanguage equal to value and is official of countrylanguage equal to value or list name of country with language of countrylanguage equal to value and is official of countrylanguage equal to value",
        "question_toks": [
            "list",
            "name",
            "of",
            "country",
            "with",
            "language",
            "of",
            "countrylanguage",
            "equal",
            "to",
            "value",
            "or",
            "language",
            "of",
            "countrylanguage",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "world_1",
        "query": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  \"Asia\" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T2.Language",
            "FROM",
            "country",
            "AS",
            "T1",
            "JOIN",
            "countrylanguage",
            "AS",
            "T2",
            "ON",
            "T1.Code",
            "=",
            "T2.CountryCode",
            "WHERE",
            "T1.Continent",
            "=",
            "``",
            "Asia",
            "''",
            "GROUP",
            "BY",
            "T2.Language",
            "ORDER",
            "BY",
            "COUNT",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t2",
            ".",
            "language",
            "from",
            "country",
            "as",
            "t1",
            "join",
            "countrylanguage",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "code",
            "=",
            "t2",
            ".",
            "countrycode",
            "where",
            "t1",
            ".",
            "continent",
            "=",
            "value",
            "group",
            "by",
            "t2",
            ".",
            "language",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            23,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    24,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                24,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    "\"Asia\"",
                    null
                ]
            ]
        },
        "question": "list top value items of language of countrylanguage with continent of country equal to value for each language of countrylanguage ordered by the total number of countrylanguage descendingly",
        "gold_question": "list top value items of language of countrylanguage with continent of country equal to value for each language of countrylanguage ordered by the total number of countrylanguage descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "language",
            "of",
            "countrylanguage",
            "with",
            "continent",
            "of",
            "country",
            "equal",
            "to",
            "value",
            "for",
            "each",
            "language",
            "of",
            "countrylanguage",
            "ordered",
            "by",
            "the",
            "total",
            "number",
            "of",
            "countrylanguage",
            "descendingly"
        ]
    },
    {
        "db_id": "world_1",
        "query": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  \"Asia\" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T2.Language",
            "FROM",
            "country",
            "AS",
            "T1",
            "JOIN",
            "countrylanguage",
            "AS",
            "T2",
            "ON",
            "T1.Code",
            "=",
            "T2.CountryCode",
            "WHERE",
            "T1.Continent",
            "=",
            "``",
            "Asia",
            "''",
            "GROUP",
            "BY",
            "T2.Language",
            "ORDER",
            "BY",
            "COUNT",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t2",
            ".",
            "language",
            "from",
            "country",
            "as",
            "t1",
            "join",
            "countrylanguage",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "code",
            "=",
            "t2",
            ".",
            "countrycode",
            "where",
            "t1",
            ".",
            "continent",
            "=",
            "value",
            "group",
            "by",
            "t2",
            ".",
            "language",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            23,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    24,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                24,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    "\"Asia\"",
                    null
                ]
            ]
        },
        "question": "list top value items of language of countrylanguage with continent of country equal to value for each language of countrylanguage ordered by the total number of countrylanguage descendingly",
        "gold_question": "list top value items of language of countrylanguage with continent of country equal to value for each language of countrylanguage ordered by the total number of countrylanguage descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "language",
            "of",
            "countrylanguage",
            "with",
            "continent",
            "of",
            "country",
            "equal",
            "to",
            "value",
            "for",
            "each",
            "language",
            "of",
            "countrylanguage",
            "ordered",
            "by",
            "the",
            "total",
            "number",
            "of",
            "countrylanguage",
            "descendingly"
        ]
    },
    {
        "db_id": "world_1",
        "query": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  \"Republic\" GROUP BY T2.Language HAVING COUNT(*)  =  1",
        "query_toks": [
            "SELECT",
            "T2.Language",
            "FROM",
            "country",
            "AS",
            "T1",
            "JOIN",
            "countrylanguage",
            "AS",
            "T2",
            "ON",
            "T1.Code",
            "=",
            "T2.CountryCode",
            "WHERE",
            "T1.GovernmentForm",
            "=",
            "``",
            "Republic",
            "''",
            "GROUP",
            "BY",
            "T2.Language",
            "HAVING",
            "COUNT",
            "(",
            "*",
            ")",
            "=",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t2",
            ".",
            "language",
            "from",
            "country",
            "as",
            "t1",
            "join",
            "countrylanguage",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "code",
            "=",
            "t2",
            ".",
            "countrycode",
            "where",
            "t1",
            ".",
            "governmentform",
            "=",
            "value",
            "group",
            "by",
            "t2",
            ".",
            "language",
            "having",
            "count",
            "(",
            "*",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            23,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    24,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                24,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            19,
                            false
                        ],
                        null
                    ],
                    "\"Republic\"",
                    null
                ]
            ]
        },
        "question": "list language of countrylanguage with government form of country equal to value for each language of countrylanguage that have the total number of countrylanguage equal to value",
        "gold_question": "list language of countrylanguage with government form of country equal to value for each language of countrylanguage that have the total number of countrylanguage equal to value",
        "question_toks": [
            "list",
            "language",
            "of",
            "countrylanguage",
            "with",
            "government",
            "form",
            "of",
            "country",
            "equal",
            "to",
            "value",
            "for",
            "each",
            "language",
            "of",
            "countrylanguage",
            "that",
            "have",
            "the",
            "total",
            "number",
            "of",
            "countrylanguage",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "world_1",
        "query": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  \"Republic\" GROUP BY T2.Language HAVING COUNT(*)  =  1",
        "query_toks": [
            "SELECT",
            "T2.Language",
            "FROM",
            "country",
            "AS",
            "T1",
            "JOIN",
            "countrylanguage",
            "AS",
            "T2",
            "ON",
            "T1.Code",
            "=",
            "T2.CountryCode",
            "WHERE",
            "T1.GovernmentForm",
            "=",
            "``",
            "Republic",
            "''",
            "GROUP",
            "BY",
            "T2.Language",
            "HAVING",
            "COUNT",
            "(",
            "*",
            ")",
            "=",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t2",
            ".",
            "language",
            "from",
            "country",
            "as",
            "t1",
            "join",
            "countrylanguage",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "code",
            "=",
            "t2",
            ".",
            "countrycode",
            "where",
            "t1",
            ".",
            "governmentform",
            "=",
            "value",
            "group",
            "by",
            "t2",
            ".",
            "language",
            "having",
            "count",
            "(",
            "*",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            23,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    24,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                24,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            19,
                            false
                        ],
                        null
                    ],
                    "\"Republic\"",
                    null
                ]
            ]
        },
        "question": "list language of countrylanguage with government form of country equal to value for each language of countrylanguage that have the total number of countrylanguage equal to value",
        "gold_question": "list language of countrylanguage with government form of country equal to value for each language of countrylanguage that have the total number of countrylanguage equal to value",
        "question_toks": [
            "list",
            "language",
            "of",
            "countrylanguage",
            "with",
            "government",
            "form",
            "of",
            "country",
            "equal",
            "to",
            "value",
            "for",
            "each",
            "language",
            "of",
            "countrylanguage",
            "that",
            "have",
            "the",
            "total",
            "number",
            "of",
            "countrylanguage",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "world_1",
        "query": "SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  \"English\" ORDER BY T1.Population DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T1.Name",
            ",",
            "T1.Population",
            "FROM",
            "city",
            "AS",
            "T1",
            "JOIN",
            "countrylanguage",
            "AS",
            "T2",
            "ON",
            "T1.CountryCode",
            "=",
            "T2.CountryCode",
            "WHERE",
            "T2.Language",
            "=",
            "``",
            "English",
            "''",
            "ORDER",
            "BY",
            "T1.Population",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "name",
            ",",
            "t1",
            ".",
            "population",
            "from",
            "city",
            "as",
            "t1",
            "join",
            "countrylanguage",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "countrycode",
            "=",
            "t2",
            ".",
            "countrycode",
            "where",
            "t2",
            ".",
            "language",
            "=",
            "value",
            "order",
            "by",
            "t1",
            ".",
            "population",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            23,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            24,
                            false
                        ],
                        null
                    ],
                    "\"English\"",
                    null
                ]
            ]
        },
        "question": "list top value items of name with language of countrylanguage equal to value ordered by population of city descendingly",
        "gold_question": "list top value items of name of city population of city with language of countrylanguage equal to value ordered by population of city descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "name",
            "with",
            "language",
            "of",
            "countrylanguage",
            "equal",
            "to",
            "value",
            "ordered",
            "by",
            "population",
            "of",
            "city",
            "descendingly"
        ]
    },
    {
        "db_id": "world_1",
        "query": "SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  \"English\" ORDER BY T1.Population DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T1.Name",
            ",",
            "T1.Population",
            "FROM",
            "city",
            "AS",
            "T1",
            "JOIN",
            "countrylanguage",
            "AS",
            "T2",
            "ON",
            "T1.CountryCode",
            "=",
            "T2.CountryCode",
            "WHERE",
            "T2.Language",
            "=",
            "``",
            "English",
            "''",
            "ORDER",
            "BY",
            "T1.Population",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "name",
            ",",
            "t1",
            ".",
            "population",
            "from",
            "city",
            "as",
            "t1",
            "join",
            "countrylanguage",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "countrycode",
            "=",
            "t2",
            ".",
            "countrycode",
            "where",
            "t2",
            ".",
            "language",
            "=",
            "value",
            "order",
            "by",
            "t1",
            ".",
            "population",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            23,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            24,
                            false
                        ],
                        null
                    ],
                    "\"English\"",
                    null
                ]
            ]
        },
        "question": "list top value items of name with language of countrylanguage equal to value ordered by population of city descendingly",
        "gold_question": "list top value items of name of city population of city with language of countrylanguage equal to value ordered by population of city descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "name",
            "with",
            "language",
            "of",
            "countrylanguage",
            "equal",
            "to",
            "value",
            "ordered",
            "by",
            "population",
            "of",
            "city",
            "descendingly"
        ]
    },
    {
        "db_id": "world_1",
        "query": "SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  \"Asia\" ORDER BY SurfaceArea DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "Name",
            ",",
            "Population",
            ",",
            "LifeExpectancy",
            "FROM",
            "country",
            "WHERE",
            "Continent",
            "=",
            "``",
            "Asia",
            "''",
            "ORDER",
            "BY",
            "SurfaceArea",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "population",
            ",",
            "lifeexpectancy",
            "from",
            "country",
            "where",
            "continent",
            "=",
            "value",
            "order",
            "by",
            "surfacearea",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            12,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    "\"Asia\"",
                    null
                ]
            ]
        },
        "question": "list top value items of name population life expectancy of country with region equal to value ordered by surface area descendingly",
        "gold_question": "list top value items of name population life expectancy of country with continent equal to value ordered by surface area descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "name",
            "population",
            "life",
            "expectancy",
            "of",
            "country",
            "with",
            "region",
            "equal",
            "to",
            "value",
            "ordered",
            "by",
            "surface",
            "area",
            "descendingly"
        ]
    },
    {
        "db_id": "world_1",
        "query": "SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  \"Asia\" ORDER BY SurfaceArea DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "Name",
            ",",
            "Population",
            ",",
            "LifeExpectancy",
            "FROM",
            "country",
            "WHERE",
            "Continent",
            "=",
            "``",
            "Asia",
            "''",
            "ORDER",
            "BY",
            "SurfaceArea",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "population",
            ",",
            "lifeexpectancy",
            "from",
            "country",
            "where",
            "continent",
            "=",
            "value",
            "order",
            "by",
            "surfacearea",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            12,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    "\"Asia\"",
                    null
                ]
            ]
        },
        "question": "list name population life expectancy of country with region equal to value and surface area equal to ( the maximum of surface area of country with region equal to value )",
        "gold_question": "list top value items of name population life expectancy of country with continent equal to value ordered by surface area descendingly",
        "question_toks": [
            "list",
            "name",
            "population",
            "life",
            "expectancy",
            "of",
            "country",
            "with",
            "region",
            "equal",
            "to",
            "value",
            "and",
            "surface",
            "area",
            "equal",
            "to",
            "(",
            "the",
            "maximum",
            "of",
            "surface",
            "area",
            "of",
            "country",
            "with",
            "region",
            "equal",
            "to",
            "value",
            ")"
        ]
    },
    {
        "db_id": "world_1",
        "query": "SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND T2.IsOfficial  =  \"T\")",
        "query_toks": [
            "SELECT",
            "avg",
            "(",
            "LifeExpectancy",
            ")",
            "FROM",
            "country",
            "WHERE",
            "Name",
            "NOT",
            "IN",
            "(",
            "SELECT",
            "T1.Name",
            "FROM",
            "country",
            "AS",
            "T1",
            "JOIN",
            "countrylanguage",
            "AS",
            "T2",
            "ON",
            "T1.Code",
            "=",
            "T2.CountryCode",
            "WHERE",
            "T2.Language",
            "=",
            "``",
            "English",
            "''",
            "AND",
            "T2.IsOfficial",
            "=",
            "``",
            "T",
            "''",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "lifeexpectancy",
            ")",
            "from",
            "country",
            "where",
            "name",
            "not",
            "in",
            "(",
            "select",
            "t1",
            ".",
            "name",
            "from",
            "country",
            "as",
            "t1",
            "join",
            "countrylanguage",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "code",
            "=",
            "t2",
            ".",
            "countrycode",
            "where",
            "t2",
            ".",
            "language",
            "=",
            "value",
            "and",
            "t2",
            ".",
            "isofficial",
            "=",
            "value",
            ")"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    true,
                    8,
                    [
                        0,
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [
                                [
                                    false,
                                    2,
                                    [
                                        0,
                                        [
                                            0,
                                            8,
                                            false
                                        ],
                                        null
                                    ],
                                    [
                                        0,
                                        23,
                                        false
                                    ],
                                    null
                                ]
                            ],
                            "table_units": [
                                [
                                    "table_unit",
                                    2
                                ],
                                [
                                    "table_unit",
                                    3
                                ]
                            ]
                        },
                        "groupby": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderby": [],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            9,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": [
                            [
                                false,
                                2,
                                [
                                    0,
                                    [
                                        0,
                                        24,
                                        false
                                    ],
                                    null
                                ],
                                "\"English\"",
                                null
                            ],
                            "and",
                            [
                                false,
                                2,
                                [
                                    0,
                                    [
                                        0,
                                        25,
                                        false
                                    ],
                                    null
                                ],
                                "\"T\"",
                                null
                            ]
                        ]
                    },
                    null
                ]
            ]
        },
        "question": "list the average of life expectancy of country with name that is not in ( countrycode of countrylanguage with language of countrylanguage equal to value )",
        "gold_question": "list the average of life expectancy of country with name of country that is not in ( name of country with language of countrylanguage equal to value and is official of countrylanguage equal to value )",
        "question_toks": [
            "list",
            "the",
            "average",
            "of",
            "life",
            "expectancy",
            "of",
            "country",
            "with",
            "name",
            "that",
            "is",
            "not",
            "in",
            "(",
            "countrycode",
            "of",
            "countrylanguage",
            "with",
            "language",
            "of",
            "countrylanguage",
            "equal",
            "to",
            "value",
            ")"
        ]
    },
    {
        "db_id": "world_1",
        "query": "SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND T2.IsOfficial  =  \"T\")",
        "query_toks": [
            "SELECT",
            "avg",
            "(",
            "LifeExpectancy",
            ")",
            "FROM",
            "country",
            "WHERE",
            "Name",
            "NOT",
            "IN",
            "(",
            "SELECT",
            "T1.Name",
            "FROM",
            "country",
            "AS",
            "T1",
            "JOIN",
            "countrylanguage",
            "AS",
            "T2",
            "ON",
            "T1.Code",
            "=",
            "T2.CountryCode",
            "WHERE",
            "T2.Language",
            "=",
            "``",
            "English",
            "''",
            "AND",
            "T2.IsOfficial",
            "=",
            "``",
            "T",
            "''",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "lifeexpectancy",
            ")",
            "from",
            "country",
            "where",
            "name",
            "not",
            "in",
            "(",
            "select",
            "t1",
            ".",
            "name",
            "from",
            "country",
            "as",
            "t1",
            "join",
            "countrylanguage",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "code",
            "=",
            "t2",
            ".",
            "countrycode",
            "where",
            "t2",
            ".",
            "language",
            "=",
            "value",
            "and",
            "t2",
            ".",
            "isofficial",
            "=",
            "value",
            ")"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    true,
                    8,
                    [
                        0,
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [
                                [
                                    false,
                                    2,
                                    [
                                        0,
                                        [
                                            0,
                                            8,
                                            false
                                        ],
                                        null
                                    ],
                                    [
                                        0,
                                        23,
                                        false
                                    ],
                                    null
                                ]
                            ],
                            "table_units": [
                                [
                                    "table_unit",
                                    2
                                ],
                                [
                                    "table_unit",
                                    3
                                ]
                            ]
                        },
                        "groupby": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderby": [],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            9,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": [
                            [
                                false,
                                2,
                                [
                                    0,
                                    [
                                        0,
                                        24,
                                        false
                                    ],
                                    null
                                ],
                                "\"English\"",
                                null
                            ],
                            "and",
                            [
                                false,
                                2,
                                [
                                    0,
                                    [
                                        0,
                                        25,
                                        false
                                    ],
                                    null
                                ],
                                "\"T\"",
                                null
                            ]
                        ]
                    },
                    null
                ]
            ]
        },
        "question": "list the average of life expectancy of country with code that is not in ( countrycode of countrylanguage with language of countrylanguage equal to value )",
        "gold_question": "list the average of life expectancy of country with name of country that is not in ( name of country with language of countrylanguage equal to value and is official of countrylanguage equal to value )",
        "question_toks": [
            "list",
            "the",
            "average",
            "of",
            "life",
            "expectancy",
            "of",
            "country",
            "with",
            "code",
            "that",
            "is",
            "not",
            "in",
            "(",
            "countrycode",
            "of",
            "countrylanguage",
            "with",
            "language",
            "of",
            "countrylanguage",
            "equal",
            "to",
            "value",
            ")"
        ]
    },
    {
        "db_id": "world_1",
        "query": "SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\")",
        "query_toks": [
            "SELECT",
            "sum",
            "(",
            "Population",
            ")",
            "FROM",
            "country",
            "WHERE",
            "Name",
            "NOT",
            "IN",
            "(",
            "SELECT",
            "T1.Name",
            "FROM",
            "country",
            "AS",
            "T1",
            "JOIN",
            "countrylanguage",
            "AS",
            "T2",
            "ON",
            "T1.Code",
            "=",
            "T2.CountryCode",
            "WHERE",
            "T2.Language",
            "=",
            "``",
            "English",
            "''",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "sum",
            "(",
            "population",
            ")",
            "from",
            "country",
            "where",
            "name",
            "not",
            "in",
            "(",
            "select",
            "t1",
            ".",
            "name",
            "from",
            "country",
            "as",
            "t1",
            "join",
            "countrylanguage",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "code",
            "=",
            "t2",
            ".",
            "countrycode",
            "where",
            "t2",
            ".",
            "language",
            "=",
            "value",
            ")"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        4,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    true,
                    8,
                    [
                        0,
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [
                                [
                                    false,
                                    2,
                                    [
                                        0,
                                        [
                                            0,
                                            8,
                                            false
                                        ],
                                        null
                                    ],
                                    [
                                        0,
                                        23,
                                        false
                                    ],
                                    null
                                ]
                            ],
                            "table_units": [
                                [
                                    "table_unit",
                                    2
                                ],
                                [
                                    "table_unit",
                                    3
                                ]
                            ]
                        },
                        "groupby": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderby": [],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            9,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": [
                            [
                                false,
                                2,
                                [
                                    0,
                                    [
                                        0,
                                        24,
                                        false
                                    ],
                                    null
                                ],
                                "\"English\"",
                                null
                            ]
                        ]
                    },
                    null
                ]
            ]
        },
        "question": "list the sum of population of country with language of countrylanguage not equal to value",
        "gold_question": "list the sum of population of country with name of country that is not in ( name of country with language of countrylanguage equal to value )",
        "question_toks": [
            "list",
            "the",
            "sum",
            "of",
            "population",
            "of",
            "country",
            "with",
            "language",
            "of",
            "countrylanguage",
            "not",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "world_1",
        "query": "SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\")",
        "query_toks": [
            "SELECT",
            "sum",
            "(",
            "Population",
            ")",
            "FROM",
            "country",
            "WHERE",
            "Name",
            "NOT",
            "IN",
            "(",
            "SELECT",
            "T1.Name",
            "FROM",
            "country",
            "AS",
            "T1",
            "JOIN",
            "countrylanguage",
            "AS",
            "T2",
            "ON",
            "T1.Code",
            "=",
            "T2.CountryCode",
            "WHERE",
            "T2.Language",
            "=",
            "``",
            "English",
            "''",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "sum",
            "(",
            "population",
            ")",
            "from",
            "country",
            "where",
            "name",
            "not",
            "in",
            "(",
            "select",
            "t1",
            ".",
            "name",
            "from",
            "country",
            "as",
            "t1",
            "join",
            "countrylanguage",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "code",
            "=",
            "t2",
            ".",
            "countrycode",
            "where",
            "t2",
            ".",
            "language",
            "=",
            "value",
            ")"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        4,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    true,
                    8,
                    [
                        0,
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [
                                [
                                    false,
                                    2,
                                    [
                                        0,
                                        [
                                            0,
                                            8,
                                            false
                                        ],
                                        null
                                    ],
                                    [
                                        0,
                                        23,
                                        false
                                    ],
                                    null
                                ]
                            ],
                            "table_units": [
                                [
                                    "table_unit",
                                    2
                                ],
                                [
                                    "table_unit",
                                    3
                                ]
                            ]
                        },
                        "groupby": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderby": [],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            9,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": [
                            [
                                false,
                                2,
                                [
                                    0,
                                    [
                                        0,
                                        24,
                                        false
                                    ],
                                    null
                                ],
                                "\"English\"",
                                null
                            ]
                        ]
                    },
                    null
                ]
            ]
        },
        "question": "list the sum of population of country with population of country that is not in ( countrycode of countrylanguage with language of countrylanguage equal to value )",
        "gold_question": "list the sum of population of country with name of country that is not in ( name of country with language of countrylanguage equal to value )",
        "question_toks": [
            "list",
            "the",
            "sum",
            "of",
            "population",
            "of",
            "country",
            "with",
            "population",
            "of",
            "country",
            "that",
            "is",
            "not",
            "in",
            "(",
            "countrycode",
            "of",
            "countrylanguage",
            "with",
            "language",
            "of",
            "countrylanguage",
            "equal",
            "to",
            "value",
            ")"
        ]
    },
    {
        "db_id": "world_1",
        "query": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  \"Beatrix\" AND T2.IsOfficial  =  \"T\"",
        "query_toks": [
            "SELECT",
            "T2.Language",
            "FROM",
            "country",
            "AS",
            "T1",
            "JOIN",
            "countrylanguage",
            "AS",
            "T2",
            "ON",
            "T1.Code",
            "=",
            "T2.CountryCode",
            "WHERE",
            "T1.HeadOfState",
            "=",
            "``",
            "Beatrix",
            "''",
            "AND",
            "T2.IsOfficial",
            "=",
            "``",
            "T",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "t2",
            ".",
            "language",
            "from",
            "country",
            "as",
            "t1",
            "join",
            "countrylanguage",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "code",
            "=",
            "t2",
            ".",
            "countrycode",
            "where",
            "t1",
            ".",
            "headofstate",
            "=",
            "value",
            "and",
            "t2",
            ".",
            "isofficial",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            23,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                24,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            20,
                            false
                        ],
                        null
                    ],
                    "\"Beatrix\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            25,
                            false
                        ],
                        null
                    ],
                    "\"T\"",
                    null
                ]
            ]
        },
        "question": "list language of countrylanguage with head of state of country equal to value",
        "gold_question": "list language of countrylanguage with head of state of country equal to value and is official of countrylanguage equal to value",
        "question_toks": [
            "list",
            "language",
            "of",
            "countrylanguage",
            "with",
            "head",
            "of",
            "state",
            "of",
            "country",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "world_1",
        "query": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  \"Beatrix\" AND T2.IsOfficial  =  \"T\"",
        "query_toks": [
            "SELECT",
            "T2.Language",
            "FROM",
            "country",
            "AS",
            "T1",
            "JOIN",
            "countrylanguage",
            "AS",
            "T2",
            "ON",
            "T1.Code",
            "=",
            "T2.CountryCode",
            "WHERE",
            "T1.HeadOfState",
            "=",
            "``",
            "Beatrix",
            "''",
            "AND",
            "T2.IsOfficial",
            "=",
            "``",
            "T",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "t2",
            ".",
            "language",
            "from",
            "country",
            "as",
            "t1",
            "join",
            "countrylanguage",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "code",
            "=",
            "t2",
            ".",
            "countrycode",
            "where",
            "t1",
            ".",
            "headofstate",
            "=",
            "value",
            "and",
            "t2",
            ".",
            "isofficial",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            23,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                24,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            20,
                            false
                        ],
                        null
                    ],
                    "\"Beatrix\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            25,
                            false
                        ],
                        null
                    ],
                    "\"T\"",
                    null
                ]
            ]
        },
        "question": "list language of countrylanguage with head of state of country equal to value",
        "gold_question": "list language of countrylanguage with head of state of country equal to value and is official of countrylanguage equal to value",
        "question_toks": [
            "list",
            "language",
            "of",
            "countrylanguage",
            "with",
            "head",
            "of",
            "state",
            "of",
            "country",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "world_1",
        "query": "SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  \"T\"",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "DISTINCT",
            "T2.Language",
            ")",
            "FROM",
            "country",
            "AS",
            "T1",
            "JOIN",
            "countrylanguage",
            "AS",
            "T2",
            "ON",
            "T1.Code",
            "=",
            "T2.CountryCode",
            "WHERE",
            "IndepYear",
            "<",
            "1930",
            "AND",
            "T2.IsOfficial",
            "=",
            "``",
            "T",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "distinct",
            "t2",
            ".",
            "language",
            ")",
            "from",
            "country",
            "as",
            "t1",
            "join",
            "countrylanguage",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "code",
            "=",
            "t2",
            ".",
            "countrycode",
            "where",
            "indepyear",
            "<",
            "value",
            "and",
            "t2",
            ".",
            "isofficial",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            23,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                24,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    4,
                    [
                        0,
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ],
                    1930.0,
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            25,
                            false
                        ],
                        null
                    ],
                    "\"T\"",
                    null
                ]
            ]
        },
        "question": "list the number of language of countrylanguage with indepdent year of country less than value",
        "gold_question": "list the number of language of countrylanguage with indepdent year of country less than value and is official of countrylanguage equal to value",
        "question_toks": [
            "list",
            "the",
            "number",
            "of",
            "language",
            "of",
            "countrylanguage",
            "with",
            "indepdent",
            "year",
            "of",
            "country",
            "less",
            "than",
            "value"
        ]
    },
    {
        "db_id": "world_1",
        "query": "SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  \"T\"",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "DISTINCT",
            "T2.Language",
            ")",
            "FROM",
            "country",
            "AS",
            "T1",
            "JOIN",
            "countrylanguage",
            "AS",
            "T2",
            "ON",
            "T1.Code",
            "=",
            "T2.CountryCode",
            "WHERE",
            "IndepYear",
            "<",
            "1930",
            "AND",
            "T2.IsOfficial",
            "=",
            "``",
            "T",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "distinct",
            "t2",
            ".",
            "language",
            ")",
            "from",
            "country",
            "as",
            "t1",
            "join",
            "countrylanguage",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "code",
            "=",
            "t2",
            ".",
            "countrycode",
            "where",
            "indepyear",
            "<",
            "value",
            "and",
            "t2",
            ".",
            "isofficial",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            23,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                24,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    4,
                    [
                        0,
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ],
                    1930.0,
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            25,
                            false
                        ],
                        null
                    ],
                    "\"T\"",
                    null
                ]
            ]
        },
        "question": "list the number of language of countrylanguage with indepdent year of country less than value",
        "gold_question": "list the number of language of countrylanguage with indepdent year of country less than value and is official of countrylanguage equal to value",
        "question_toks": [
            "list",
            "the",
            "number",
            "of",
            "language",
            "of",
            "countrylanguage",
            "with",
            "indepdent",
            "year",
            "of",
            "country",
            "less",
            "than",
            "value"
        ]
    },
    {
        "db_id": "world_1",
        "query": "SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  \"Europe\")",
        "query_toks": [
            "SELECT",
            "Name",
            "FROM",
            "country",
            "WHERE",
            "SurfaceArea",
            ">",
            "(",
            "SELECT",
            "min",
            "(",
            "SurfaceArea",
            ")",
            "FROM",
            "country",
            "WHERE",
            "Continent",
            "=",
            "``",
            "Europe",
            "''",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "country",
            "where",
            "surfacearea",
            ">",
            "(",
            "select",
            "min",
            "(",
            "surfacearea",
            ")",
            "from",
            "country",
            "where",
            "continent",
            "=",
            "value",
            ")"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            12,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    2
                                ]
                            ]
                        },
                        "groupby": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderby": [],
                        "select": [
                            false,
                            [
                                [
                                    2,
                                    [
                                        0,
                                        [
                                            0,
                                            12,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": [
                            [
                                false,
                                2,
                                [
                                    0,
                                    [
                                        0,
                                        10,
                                        false
                                    ],
                                    null
                                ],
                                "\"Europe\"",
                                null
                            ]
                        ]
                    },
                    null
                ]
            ]
        },
        "question": "list name of country with surface area greater than ( the maximum of surface area of country with region equal to value )",
        "gold_question": "list name of country with surface area greater than ( the minimum of surface area of country with continent equal to value )",
        "question_toks": [
            "list",
            "name",
            "of",
            "country",
            "with",
            "surface",
            "area",
            "greater",
            "than",
            "(",
            "the",
            "maximum",
            "of",
            "surface",
            "area",
            "of",
            "country",
            "with",
            "region",
            "equal",
            "to",
            "value",
            ")"
        ]
    },
    {
        "db_id": "world_1",
        "query": "SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  \"Europe\")",
        "query_toks": [
            "SELECT",
            "Name",
            "FROM",
            "country",
            "WHERE",
            "SurfaceArea",
            ">",
            "(",
            "SELECT",
            "min",
            "(",
            "SurfaceArea",
            ")",
            "FROM",
            "country",
            "WHERE",
            "Continent",
            "=",
            "``",
            "Europe",
            "''",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "country",
            "where",
            "surfacearea",
            ">",
            "(",
            "select",
            "min",
            "(",
            "surfacearea",
            ")",
            "from",
            "country",
            "where",
            "continent",
            "=",
            "value",
            ")"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            12,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    2
                                ]
                            ]
                        },
                        "groupby": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderby": [],
                        "select": [
                            false,
                            [
                                [
                                    2,
                                    [
                                        0,
                                        [
                                            0,
                                            12,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": [
                            [
                                false,
                                2,
                                [
                                    0,
                                    [
                                        0,
                                        10,
                                        false
                                    ],
                                    null
                                ],
                                "\"Europe\"",
                                null
                            ]
                        ]
                    },
                    null
                ]
            ]
        },
        "question": "list name of country with surface area greater than ( the maximum of surface area of country with region equal to value )",
        "gold_question": "list name of country with surface area greater than ( the minimum of surface area of country with continent equal to value )",
        "question_toks": [
            "list",
            "name",
            "of",
            "country",
            "with",
            "surface",
            "area",
            "greater",
            "than",
            "(",
            "the",
            "maximum",
            "of",
            "surface",
            "area",
            "of",
            "country",
            "with",
            "region",
            "equal",
            "to",
            "value",
            ")"
        ]
    },
    {
        "db_id": "world_1",
        "query": "SELECT Name FROM country WHERE Continent  =  \"Africa\"  AND population  <  (SELECT max(population) FROM country WHERE Continent  =  \"Asia\")",
        "query_toks": [
            "SELECT",
            "Name",
            "FROM",
            "country",
            "WHERE",
            "Continent",
            "=",
            "``",
            "Africa",
            "''",
            "AND",
            "population",
            "<",
            "(",
            "SELECT",
            "max",
            "(",
            "population",
            ")",
            "FROM",
            "country",
            "WHERE",
            "Continent",
            "=",
            "``",
            "Asia",
            "''",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "country",
            "where",
            "continent",
            "=",
            "value",
            "and",
            "population",
            "<",
            "(",
            "select",
            "max",
            "(",
            "population",
            ")",
            "from",
            "country",
            "where",
            "continent",
            "=",
            "value",
            ")"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    "\"Africa\"",
                    null
                ],
                "and",
                [
                    false,
                    4,
                    [
                        0,
                        [
                            0,
                            14,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    2
                                ]
                            ]
                        },
                        "groupby": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderby": [],
                        "select": [
                            false,
                            [
                                [
                                    1,
                                    [
                                        0,
                                        [
                                            0,
                                            14,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": [
                            [
                                false,
                                2,
                                [
                                    0,
                                    [
                                        0,
                                        10,
                                        false
                                    ],
                                    null
                                ],
                                "\"Asia\"",
                                null
                            ]
                        ]
                    },
                    null
                ]
            ]
        },
        "question": "list name of country with region equal to value and population less than ( the minimum of population of country with continent equal to value )",
        "gold_question": "list name of country with continent equal to value and population less than ( the maximum of population of country with continent equal to value )",
        "question_toks": [
            "list",
            "name",
            "of",
            "country",
            "with",
            "region",
            "equal",
            "to",
            "value",
            "and",
            "population",
            "less",
            "than",
            "(",
            "the",
            "minimum",
            "of",
            "population",
            "of",
            "country",
            "with",
            "continent",
            "equal",
            "to",
            "value",
            ")"
        ]
    },
    {
        "db_id": "world_1",
        "query": "SELECT Name FROM country WHERE Continent  =  \"Africa\"  AND population  <  (SELECT min(population) FROM country WHERE Continent  =  \"Asia\")",
        "query_toks": [
            "SELECT",
            "Name",
            "FROM",
            "country",
            "WHERE",
            "Continent",
            "=",
            "``",
            "Africa",
            "''",
            "AND",
            "population",
            "<",
            "(",
            "SELECT",
            "min",
            "(",
            "population",
            ")",
            "FROM",
            "country",
            "WHERE",
            "Continent",
            "=",
            "``",
            "Asia",
            "''",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "country",
            "where",
            "continent",
            "=",
            "value",
            "and",
            "population",
            "<",
            "(",
            "select",
            "min",
            "(",
            "population",
            ")",
            "from",
            "country",
            "where",
            "continent",
            "=",
            "value",
            ")"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    "\"Africa\"",
                    null
                ],
                "and",
                [
                    false,
                    4,
                    [
                        0,
                        [
                            0,
                            14,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    2
                                ]
                            ]
                        },
                        "groupby": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderby": [],
                        "select": [
                            false,
                            [
                                [
                                    2,
                                    [
                                        0,
                                        [
                                            0,
                                            14,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": [
                            [
                                false,
                                2,
                                [
                                    0,
                                    [
                                        0,
                                        10,
                                        false
                                    ],
                                    null
                                ],
                                "\"Asia\"",
                                null
                            ]
                        ]
                    },
                    null
                ]
            ]
        },
        "question": "list name of country with region equal to value and population less than ( the minimum of population of country with continent equal to value )",
        "gold_question": "list name of country with continent equal to value and population less than ( the minimum of population of country with continent equal to value )",
        "question_toks": [
            "list",
            "name",
            "of",
            "country",
            "with",
            "region",
            "equal",
            "to",
            "value",
            "and",
            "population",
            "less",
            "than",
            "(",
            "the",
            "minimum",
            "of",
            "population",
            "of",
            "country",
            "with",
            "continent",
            "equal",
            "to",
            "value",
            ")"
        ]
    },
    {
        "db_id": "world_1",
        "query": "SELECT Name FROM country WHERE Continent  =  \"Asia\"  AND population  >  (SELECT max(population) FROM country WHERE Continent  =  \"Africa\")",
        "query_toks": [
            "SELECT",
            "Name",
            "FROM",
            "country",
            "WHERE",
            "Continent",
            "=",
            "``",
            "Asia",
            "''",
            "AND",
            "population",
            ">",
            "(",
            "SELECT",
            "max",
            "(",
            "population",
            ")",
            "FROM",
            "country",
            "WHERE",
            "Continent",
            "=",
            "``",
            "Africa",
            "''",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "country",
            "where",
            "continent",
            "=",
            "value",
            "and",
            "population",
            ">",
            "(",
            "select",
            "max",
            "(",
            "population",
            ")",
            "from",
            "country",
            "where",
            "continent",
            "=",
            "value",
            ")"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    "\"Asia\"",
                    null
                ],
                "and",
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            14,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    2
                                ]
                            ]
                        },
                        "groupby": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderby": [],
                        "select": [
                            false,
                            [
                                [
                                    1,
                                    [
                                        0,
                                        [
                                            0,
                                            14,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": [
                            [
                                false,
                                2,
                                [
                                    0,
                                    [
                                        0,
                                        10,
                                        false
                                    ],
                                    null
                                ],
                                "\"Africa\"",
                                null
                            ]
                        ]
                    },
                    null
                ]
            ]
        },
        "question": "list name of country with region equal to value and population greater than ( the maximum of population of country with continent equal to value )",
        "gold_question": "list name of country with continent equal to value and population greater than ( the maximum of population of country with continent equal to value )",
        "question_toks": [
            "list",
            "name",
            "of",
            "country",
            "with",
            "region",
            "equal",
            "to",
            "value",
            "and",
            "population",
            "greater",
            "than",
            "(",
            "the",
            "maximum",
            "of",
            "population",
            "of",
            "country",
            "with",
            "continent",
            "equal",
            "to",
            "value",
            ")"
        ]
    },
    {
        "db_id": "world_1",
        "query": "SELECT Name FROM country WHERE Continent  =  \"Asia\"  AND population  >  (SELECT min(population) FROM country WHERE Continent  =  \"Africa\")",
        "query_toks": [
            "SELECT",
            "Name",
            "FROM",
            "country",
            "WHERE",
            "Continent",
            "=",
            "``",
            "Asia",
            "''",
            "AND",
            "population",
            ">",
            "(",
            "SELECT",
            "min",
            "(",
            "population",
            ")",
            "FROM",
            "country",
            "WHERE",
            "Continent",
            "=",
            "``",
            "Africa",
            "''",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "country",
            "where",
            "continent",
            "=",
            "value",
            "and",
            "population",
            ">",
            "(",
            "select",
            "min",
            "(",
            "population",
            ")",
            "from",
            "country",
            "where",
            "continent",
            "=",
            "value",
            ")"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    "\"Asia\"",
                    null
                ],
                "and",
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            14,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    2
                                ]
                            ]
                        },
                        "groupby": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderby": [],
                        "select": [
                            false,
                            [
                                [
                                    2,
                                    [
                                        0,
                                        [
                                            0,
                                            14,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": [
                            [
                                false,
                                2,
                                [
                                    0,
                                    [
                                        0,
                                        10,
                                        false
                                    ],
                                    null
                                ],
                                "\"Africa\"",
                                null
                            ]
                        ]
                    },
                    null
                ]
            ]
        },
        "question": "list name of country with region equal to value and population greater than ( the maximum of population of country with continent equal to value )",
        "gold_question": "list name of country with continent equal to value and population greater than ( the minimum of population of country with continent equal to value )",
        "question_toks": [
            "list",
            "name",
            "of",
            "country",
            "with",
            "region",
            "equal",
            "to",
            "value",
            "and",
            "population",
            "greater",
            "than",
            "(",
            "the",
            "maximum",
            "of",
            "population",
            "of",
            "country",
            "with",
            "continent",
            "equal",
            "to",
            "value",
            ")"
        ]
    },
    {
        "db_id": "world_1",
        "query": "SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  \"English\"",
        "query_toks": [
            "SELECT",
            "CountryCode",
            "FROM",
            "countrylanguage",
            "EXCEPT",
            "SELECT",
            "CountryCode",
            "FROM",
            "countrylanguage",
            "WHERE",
            "LANGUAGE",
            "=",
            "``",
            "English",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "countrycode",
            "from",
            "countrylanguage",
            "except",
            "select",
            "countrycode",
            "from",
            "countrylanguage",
            "where",
            "language",
            "=",
            "value"
        ],
        "sql": {
            "except": {
                "except": null,
                "from": {
                    "conds": [],
                    "table_units": [
                        [
                            "table_unit",
                            3
                        ]
                    ]
                },
                "groupby": [],
                "having": [],
                "intersect": null,
                "limit": null,
                "orderby": [],
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    23,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "union": null,
                "where": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                24,
                                false
                            ],
                            null
                        ],
                        "\"English\"",
                        null
                    ]
                ]
            },
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                23,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list countrycode of countrylanguage except that list countrycode of countrylanguage with language equal to value",
        "gold_question": "list countrycode of countrylanguage except that list countrycode of countrylanguage with language equal to value",
        "question_toks": [
            "list",
            "countrycode",
            "of",
            "countrylanguage",
            "except",
            "that",
            "list",
            "countrycode",
            "of",
            "countrylanguage",
            "with",
            "language",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "world_1",
        "query": "SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  \"English\"",
        "query_toks": [
            "SELECT",
            "CountryCode",
            "FROM",
            "countrylanguage",
            "EXCEPT",
            "SELECT",
            "CountryCode",
            "FROM",
            "countrylanguage",
            "WHERE",
            "LANGUAGE",
            "=",
            "``",
            "English",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "countrycode",
            "from",
            "countrylanguage",
            "except",
            "select",
            "countrycode",
            "from",
            "countrylanguage",
            "where",
            "language",
            "=",
            "value"
        ],
        "sql": {
            "except": {
                "except": null,
                "from": {
                    "conds": [],
                    "table_units": [
                        [
                            "table_unit",
                            3
                        ]
                    ]
                },
                "groupby": [],
                "having": [],
                "intersect": null,
                "limit": null,
                "orderby": [],
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    23,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "union": null,
                "where": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                24,
                                false
                            ],
                            null
                        ],
                        "\"English\"",
                        null
                    ]
                ]
            },
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                23,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list countrycode of countrylanguage except that list countrycode of countrylanguage with language equal to value",
        "gold_question": "list countrycode of countrylanguage except that list countrycode of countrylanguage with language equal to value",
        "question_toks": [
            "list",
            "countrycode",
            "of",
            "countrylanguage",
            "except",
            "that",
            "list",
            "countrycode",
            "of",
            "countrylanguage",
            "with",
            "language",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "world_1",
        "query": "SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != \"English\"",
        "query_toks": [
            "SELECT",
            "DISTINCT",
            "CountryCode",
            "FROM",
            "countrylanguage",
            "WHERE",
            "LANGUAGE",
            "!",
            "=",
            "``",
            "English",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "countrycode",
            "from",
            "countrylanguage",
            "where",
            "language",
            "!",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                23,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            24,
                            false
                        ],
                        null
                    ],
                    "\"English\"",
                    null
                ]
            ]
        },
        "question": "list countrycode of countrylanguage with language not equal to value",
        "gold_question": "list countrycode of countrylanguage with language not equal to value",
        "question_toks": [
            "list",
            "countrycode",
            "of",
            "countrylanguage",
            "with",
            "language",
            "not",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "world_1",
        "query": "SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != \"English\"",
        "query_toks": [
            "SELECT",
            "DISTINCT",
            "CountryCode",
            "FROM",
            "countrylanguage",
            "WHERE",
            "LANGUAGE",
            "!",
            "=",
            "``",
            "English",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "countrycode",
            "from",
            "countrylanguage",
            "where",
            "language",
            "!",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                23,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            24,
                            false
                        ],
                        null
                    ],
                    "\"English\"",
                    null
                ]
            ]
        },
        "question": "list countrycode of countrylanguage with language not equal to value",
        "gold_question": "list countrycode of countrylanguage with language not equal to value",
        "question_toks": [
            "list",
            "countrycode",
            "of",
            "countrylanguage",
            "with",
            "language",
            "not",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "world_1",
        "query": "SELECT Code FROM country WHERE GovernmentForm != \"Republic\" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  \"English\"",
        "query_toks": [
            "SELECT",
            "Code",
            "FROM",
            "country",
            "WHERE",
            "GovernmentForm",
            "!",
            "=",
            "``",
            "Republic",
            "''",
            "EXCEPT",
            "SELECT",
            "CountryCode",
            "FROM",
            "countrylanguage",
            "WHERE",
            "LANGUAGE",
            "=",
            "``",
            "English",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "code",
            "from",
            "country",
            "where",
            "governmentform",
            "!",
            "=",
            "value",
            "except",
            "select",
            "countrycode",
            "from",
            "countrylanguage",
            "where",
            "language",
            "=",
            "value"
        ],
        "sql": {
            "except": {
                "except": null,
                "from": {
                    "conds": [],
                    "table_units": [
                        [
                            "table_unit",
                            3
                        ]
                    ]
                },
                "groupby": [],
                "having": [],
                "intersect": null,
                "limit": null,
                "orderby": [],
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    23,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "union": null,
                "where": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                24,
                                false
                            ],
                            null
                        ],
                        "\"English\"",
                        null
                    ]
                ]
            },
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            19,
                            false
                        ],
                        null
                    ],
                    "\"Republic\"",
                    null
                ]
            ]
        },
        "question": "list countrycode of countrylanguage with language of countrylanguage not equal to value and government form of country not equal to value",
        "gold_question": "list code of country with government form not equal to value except that list countrycode of countrylanguage with language equal to value",
        "question_toks": [
            "list",
            "countrycode",
            "of",
            "countrylanguage",
            "with",
            "language",
            "of",
            "countrylanguage",
            "not",
            "equal",
            "to",
            "value",
            "and",
            "government",
            "form",
            "of",
            "country",
            "not",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "world_1",
        "query": "SELECT Code FROM country WHERE GovernmentForm != \"Republic\" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  \"English\"",
        "query_toks": [
            "SELECT",
            "Code",
            "FROM",
            "country",
            "WHERE",
            "GovernmentForm",
            "!",
            "=",
            "``",
            "Republic",
            "''",
            "EXCEPT",
            "SELECT",
            "CountryCode",
            "FROM",
            "countrylanguage",
            "WHERE",
            "LANGUAGE",
            "=",
            "``",
            "English",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "code",
            "from",
            "country",
            "where",
            "governmentform",
            "!",
            "=",
            "value",
            "except",
            "select",
            "countrycode",
            "from",
            "countrylanguage",
            "where",
            "language",
            "=",
            "value"
        ],
        "sql": {
            "except": {
                "except": null,
                "from": {
                    "conds": [],
                    "table_units": [
                        [
                            "table_unit",
                            3
                        ]
                    ]
                },
                "groupby": [],
                "having": [],
                "intersect": null,
                "limit": null,
                "orderby": [],
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    23,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "union": null,
                "where": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                24,
                                false
                            ],
                            null
                        ],
                        "\"English\"",
                        null
                    ]
                ]
            },
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            19,
                            false
                        ],
                        null
                    ],
                    "\"Republic\"",
                    null
                ]
            ]
        },
        "question": "list countrycode of countrylanguage with language of countrylanguage not equal to value and government form of country not equal to value",
        "gold_question": "list code of country with government form not equal to value except that list countrycode of countrylanguage with language equal to value",
        "question_toks": [
            "list",
            "countrycode",
            "of",
            "countrylanguage",
            "with",
            "language",
            "of",
            "countrylanguage",
            "not",
            "equal",
            "to",
            "value",
            "and",
            "government",
            "form",
            "of",
            "country",
            "not",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "world_1",
        "query": "SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'English')",
        "query_toks": [
            "SELECT",
            "DISTINCT",
            "T2.Name",
            "FROM",
            "country",
            "AS",
            "T1",
            "JOIN",
            "city",
            "AS",
            "T2",
            "ON",
            "T2.CountryCode",
            "=",
            "T1.Code",
            "WHERE",
            "T1.Continent",
            "=",
            "'Europe",
            "'",
            "AND",
            "T1.Name",
            "NOT",
            "IN",
            "(",
            "SELECT",
            "T3.Name",
            "FROM",
            "country",
            "AS",
            "T3",
            "JOIN",
            "countrylanguage",
            "AS",
            "T4",
            "ON",
            "T3.Code",
            "=",
            "T4.CountryCode",
            "WHERE",
            "T4.IsOfficial",
            "=",
            "'T",
            "'",
            "AND",
            "T4.Language",
            "=",
            "'English",
            "'",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "t2",
            ".",
            "name",
            "from",
            "country",
            "as",
            "t1",
            "join",
            "city",
            "as",
            "t2",
            "on",
            "t2",
            ".",
            "countrycode",
            "=",
            "t1",
            ".",
            "code",
            "where",
            "t1",
            ".",
            "continent",
            "=",
            "value",
            "and",
            "t1",
            ".",
            "name",
            "not",
            "in",
            "(",
            "select",
            "t3",
            ".",
            "name",
            "from",
            "country",
            "as",
            "t3",
            "join",
            "countrylanguage",
            "as",
            "t4",
            "on",
            "t3",
            ".",
            "code",
            "=",
            "t4",
            ".",
            "countrycode",
            "where",
            "t4",
            ".",
            "isofficial",
            "=",
            "value",
            "and",
            "t4",
            ".",
            "language",
            "=",
            "value",
            ")"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    "\"Europe\"",
                    null
                ],
                "and",
                [
                    true,
                    8,
                    [
                        0,
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [
                                [
                                    false,
                                    2,
                                    [
                                        0,
                                        [
                                            0,
                                            8,
                                            false
                                        ],
                                        null
                                    ],
                                    [
                                        0,
                                        23,
                                        false
                                    ],
                                    null
                                ]
                            ],
                            "table_units": [
                                [
                                    "table_unit",
                                    2
                                ],
                                [
                                    "table_unit",
                                    3
                                ]
                            ]
                        },
                        "groupby": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderby": [],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            9,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": [
                            [
                                false,
                                2,
                                [
                                    0,
                                    [
                                        0,
                                        25,
                                        false
                                    ],
                                    null
                                ],
                                "\"T\"",
                                null
                            ],
                            "and",
                            [
                                false,
                                2,
                                [
                                    0,
                                    [
                                        0,
                                        24,
                                        false
                                    ],
                                    null
                                ],
                                "\"English\"",
                                null
                            ]
                        ]
                    },
                    null
                ]
            ]
        },
        "question": "list name with region of country equal to value and language of countrylanguage not equal to value",
        "gold_question": "list name of city with continent of country equal to value and name of country that is not in ( name of country with is official of countrylanguage equal to value and language of countrylanguage equal to value )",
        "question_toks": [
            "list",
            "name",
            "with",
            "region",
            "of",
            "country",
            "equal",
            "to",
            "value",
            "and",
            "language",
            "of",
            "countrylanguage",
            "not",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "world_1",
        "query": "SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'English')",
        "query_toks": [
            "SELECT",
            "DISTINCT",
            "T2.Name",
            "FROM",
            "country",
            "AS",
            "T1",
            "JOIN",
            "city",
            "AS",
            "T2",
            "ON",
            "T2.CountryCode",
            "=",
            "T1.Code",
            "WHERE",
            "T1.Continent",
            "=",
            "'Europe",
            "'",
            "AND",
            "T1.Name",
            "NOT",
            "IN",
            "(",
            "SELECT",
            "T3.Name",
            "FROM",
            "country",
            "AS",
            "T3",
            "JOIN",
            "countrylanguage",
            "AS",
            "T4",
            "ON",
            "T3.Code",
            "=",
            "T4.CountryCode",
            "WHERE",
            "T4.IsOfficial",
            "=",
            "'T",
            "'",
            "AND",
            "T4.Language",
            "=",
            "'English",
            "'",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "t2",
            ".",
            "name",
            "from",
            "country",
            "as",
            "t1",
            "join",
            "city",
            "as",
            "t2",
            "on",
            "t2",
            ".",
            "countrycode",
            "=",
            "t1",
            ".",
            "code",
            "where",
            "t1",
            ".",
            "continent",
            "=",
            "value",
            "and",
            "t1",
            ".",
            "name",
            "not",
            "in",
            "(",
            "select",
            "t3",
            ".",
            "name",
            "from",
            "country",
            "as",
            "t3",
            "join",
            "countrylanguage",
            "as",
            "t4",
            "on",
            "t3",
            ".",
            "code",
            "=",
            "t4",
            ".",
            "countrycode",
            "where",
            "t4",
            ".",
            "isofficial",
            "=",
            "value",
            "and",
            "t4",
            ".",
            "language",
            "=",
            "value",
            ")"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    "\"Europe\"",
                    null
                ],
                "and",
                [
                    true,
                    8,
                    [
                        0,
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [
                                [
                                    false,
                                    2,
                                    [
                                        0,
                                        [
                                            0,
                                            8,
                                            false
                                        ],
                                        null
                                    ],
                                    [
                                        0,
                                        23,
                                        false
                                    ],
                                    null
                                ]
                            ],
                            "table_units": [
                                [
                                    "table_unit",
                                    2
                                ],
                                [
                                    "table_unit",
                                    3
                                ]
                            ]
                        },
                        "groupby": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderby": [],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            9,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": [
                            [
                                false,
                                2,
                                [
                                    0,
                                    [
                                        0,
                                        25,
                                        false
                                    ],
                                    null
                                ],
                                "\"T\"",
                                null
                            ],
                            "and",
                            [
                                false,
                                2,
                                [
                                    0,
                                    [
                                        0,
                                        24,
                                        false
                                    ],
                                    null
                                ],
                                "\"English\"",
                                null
                            ]
                        ]
                    },
                    null
                ]
            ]
        },
        "question": "list name of city with region of country equal to value and language of countrylanguage not equal to value",
        "gold_question": "list name of city with continent of country equal to value and name of country that is not in ( name of country with is official of countrylanguage equal to value and language of countrylanguage equal to value )",
        "question_toks": [
            "list",
            "name",
            "of",
            "city",
            "with",
            "region",
            "of",
            "country",
            "equal",
            "to",
            "value",
            "and",
            "language",
            "of",
            "countrylanguage",
            "not",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "world_1",
        "query": "select distinct t3.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode join city as t3 on t1.code  =  t3.countrycode where t2.isofficial  =  't' and t2.language  =  'chinese' and t1.continent  =  \"asia\"",
        "query_toks": [
            "select",
            "distinct",
            "t3.name",
            "from",
            "country",
            "as",
            "t1",
            "join",
            "countrylanguage",
            "as",
            "t2",
            "on",
            "t1.code",
            "=",
            "t2.countrycode",
            "join",
            "city",
            "as",
            "t3",
            "on",
            "t1.code",
            "=",
            "t3.countrycode",
            "where",
            "t2.isofficial",
            "=",
            "\"t\"",
            "and",
            "t2.language",
            "=",
            "\"chinese\"",
            "and",
            "t1.continent",
            "=",
            "\"asia\""
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "t3",
            ".",
            "name",
            "from",
            "country",
            "as",
            "t1",
            "join",
            "countrylanguage",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "code",
            "=",
            "t2",
            ".",
            "countrycode",
            "join",
            "city",
            "as",
            "t3",
            "on",
            "t1",
            ".",
            "code",
            "=",
            "t3",
            ".",
            "countrycode",
            "where",
            "t2",
            ".",
            "isofficial",
            "=",
            "value",
            "and",
            "t2",
            ".",
            "language",
            "=",
            "value",
            "and",
            "t1",
            ".",
            "continent",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            23,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        3
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            25,
                            false
                        ],
                        null
                    ],
                    "\"t\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            24,
                            false
                        ],
                        null
                    ],
                    "\"chinese\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    "\"asia\"",
                    null
                ]
            ]
        },
        "question": "list the number of id with language of countrylanguage equal to value",
        "gold_question": "list name of city with is official of countrylanguage equal to value and language of countrylanguage equal to value and continent of country equal to value",
        "question_toks": [
            "list",
            "the",
            "number",
            "of",
            "id",
            "with",
            "language",
            "of",
            "countrylanguage",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "world_1",
        "query": "SELECT DISTINCT T3.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode JOIN city AS T3 ON T1.Code  =  T3.CountryCode WHERE T2.IsOfficial  =  'T' AND T2.Language  =  'Chinese' AND T1.Continent  =  \"Asia\"",
        "query_toks": [
            "SELECT",
            "DISTINCT",
            "T3.Name",
            "FROM",
            "country",
            "AS",
            "T1",
            "JOIN",
            "countrylanguage",
            "AS",
            "T2",
            "ON",
            "T1.Code",
            "=",
            "T2.CountryCode",
            "JOIN",
            "city",
            "AS",
            "T3",
            "ON",
            "T1.Code",
            "=",
            "T3.CountryCode",
            "WHERE",
            "T2.IsOfficial",
            "=",
            "'T",
            "'",
            "AND",
            "T2.Language",
            "=",
            "'Chinese",
            "'",
            "AND",
            "T1.Continent",
            "=",
            "``",
            "Asia",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "t3",
            ".",
            "name",
            "from",
            "country",
            "as",
            "t1",
            "join",
            "countrylanguage",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "code",
            "=",
            "t2",
            ".",
            "countrycode",
            "join",
            "city",
            "as",
            "t3",
            "on",
            "t1",
            ".",
            "code",
            "=",
            "t3",
            ".",
            "countrycode",
            "where",
            "t2",
            ".",
            "isofficial",
            "=",
            "value",
            "and",
            "t2",
            ".",
            "language",
            "=",
            "value",
            "and",
            "t1",
            ".",
            "continent",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            23,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        3
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            25,
                            false
                        ],
                        null
                    ],
                    "\"T\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            24,
                            false
                        ],
                        null
                    ],
                    "\"Chinese\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    "\"Asia\"",
                    null
                ]
            ]
        },
        "question": "list name of city with region of country equal to value and language of countrylanguage equal to value",
        "gold_question": "list name of city with is official of countrylanguage equal to value and language of countrylanguage equal to value and continent of country equal to value",
        "question_toks": [
            "list",
            "name",
            "of",
            "city",
            "with",
            "region",
            "of",
            "country",
            "equal",
            "to",
            "value",
            "and",
            "language",
            "of",
            "countrylanguage",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "world_1",
        "query": "SELECT Name ,  SurfaceArea ,  IndepYear FROM country ORDER BY Population LIMIT 1",
        "query_toks": [
            "SELECT",
            "Name",
            ",",
            "SurfaceArea",
            ",",
            "IndepYear",
            "FROM",
            "country",
            "ORDER",
            "BY",
            "Population",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "surfacearea",
            ",",
            "indepyear",
            "from",
            "country",
            "order",
            "by",
            "population",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            14,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of name indepdent year surface area of country ordered by population ascendingly",
        "gold_question": "list top value items of name surface area indepdent year of country ordered by population ascendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "name",
            "indepdent",
            "year",
            "surface",
            "area",
            "of",
            "country",
            "ordered",
            "by",
            "population",
            "ascendingly"
        ]
    },
    {
        "db_id": "world_1",
        "query": "SELECT Name ,  SurfaceArea ,  IndepYear FROM country ORDER BY Population LIMIT 1",
        "query_toks": [
            "SELECT",
            "Name",
            ",",
            "SurfaceArea",
            ",",
            "IndepYear",
            "FROM",
            "country",
            "ORDER",
            "BY",
            "Population",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "surfacearea",
            ",",
            "indepyear",
            "from",
            "country",
            "order",
            "by",
            "population",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            14,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of name indepdent year surface area of country ordered by population ascendingly",
        "gold_question": "list top value items of name surface area indepdent year of country ordered by population ascendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "name",
            "indepdent",
            "year",
            "surface",
            "area",
            "of",
            "country",
            "ordered",
            "by",
            "population",
            "ascendingly"
        ]
    },
    {
        "db_id": "world_1",
        "query": "SELECT Name ,  population ,  HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "Name",
            ",",
            "population",
            ",",
            "HeadOfState",
            "FROM",
            "country",
            "ORDER",
            "BY",
            "SurfaceArea",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "population",
            ",",
            "headofstate",
            "from",
            "country",
            "order",
            "by",
            "surfacearea",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            12,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                20,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of population name head of state of country ordered by surface area descendingly",
        "gold_question": "list top value items of name population head of state of country ordered by surface area descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "population",
            "name",
            "head",
            "of",
            "state",
            "of",
            "country",
            "ordered",
            "by",
            "surface",
            "area",
            "descendingly"
        ]
    },
    {
        "db_id": "world_1",
        "query": "SELECT Name ,  population ,  HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "Name",
            ",",
            "population",
            ",",
            "HeadOfState",
            "FROM",
            "country",
            "ORDER",
            "BY",
            "SurfaceArea",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "population",
            ",",
            "headofstate",
            "from",
            "country",
            "order",
            "by",
            "surfacearea",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            12,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                20,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of name population head of state of country ordered by surface area descendingly",
        "gold_question": "list top value items of name population head of state of country ordered by surface area descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "name",
            "population",
            "head",
            "of",
            "state",
            "of",
            "country",
            "ordered",
            "by",
            "surface",
            "area",
            "descendingly"
        ]
    },
    {
        "db_id": "world_1",
        "query": "SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2",
        "query_toks": [
            "SELECT",
            "COUNT",
            "(",
            "T2.Language",
            ")",
            ",",
            "T1.Name",
            "FROM",
            "country",
            "AS",
            "T1",
            "JOIN",
            "countrylanguage",
            "AS",
            "T2",
            "ON",
            "T1.Code",
            "=",
            "T2.CountryCode",
            "GROUP",
            "BY",
            "T1.Name",
            "HAVING",
            "COUNT",
            "(",
            "*",
            ")",
            ">",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "t2",
            ".",
            "language",
            ")",
            ",",
            "t1",
            ".",
            "name",
            "from",
            "country",
            "as",
            "t1",
            "join",
            "countrylanguage",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "code",
            "=",
            "t2",
            ".",
            "countrycode",
            "group",
            "by",
            "t1",
            ".",
            "name",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            23,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    9,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                24,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list countrycode the number of language of countrylanguage for each countrycode that have the total number of countrylanguage greater than or equal to value",
        "gold_question": "list the number of language of countrylanguage name of country for each name of country that have the total number of country greater than value",
        "question_toks": [
            "list",
            "countrycode",
            "the",
            "number",
            "of",
            "language",
            "of",
            "countrylanguage",
            "for",
            "each",
            "countrycode",
            "that",
            "have",
            "the",
            "total",
            "number",
            "of",
            "countrylanguage",
            "greater",
            "than",
            "or",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "world_1",
        "query": "SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2",
        "query_toks": [
            "SELECT",
            "COUNT",
            "(",
            "T2.Language",
            ")",
            ",",
            "T1.Name",
            "FROM",
            "country",
            "AS",
            "T1",
            "JOIN",
            "countrylanguage",
            "AS",
            "T2",
            "ON",
            "T1.Code",
            "=",
            "T2.CountryCode",
            "GROUP",
            "BY",
            "T1.Name",
            "HAVING",
            "COUNT",
            "(",
            "*",
            ")",
            ">",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "t2",
            ".",
            "language",
            ")",
            ",",
            "t1",
            ".",
            "name",
            "from",
            "country",
            "as",
            "t1",
            "join",
            "countrylanguage",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "code",
            "=",
            "t2",
            ".",
            "countrycode",
            "group",
            "by",
            "t1",
            ".",
            "name",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            23,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    9,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                24,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list name of country the number of language of countrylanguage for each name of country that have the total number of country greater than value",
        "gold_question": "list the number of language of countrylanguage name of country for each name of country that have the total number of country greater than value",
        "question_toks": [
            "list",
            "name",
            "of",
            "country",
            "the",
            "number",
            "of",
            "language",
            "of",
            "countrylanguage",
            "for",
            "each",
            "name",
            "of",
            "country",
            "that",
            "have",
            "the",
            "total",
            "number",
            "of",
            "country",
            "greater",
            "than",
            "value"
        ]
    },
    {
        "db_id": "world_1",
        "query": "SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            ",",
            "District",
            "FROM",
            "city",
            "WHERE",
            "Population",
            ">",
            "(",
            "SELECT",
            "avg",
            "(",
            "Population",
            ")",
            "FROM",
            "city",
            ")",
            "GROUP",
            "BY",
            "District"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            ",",
            "district",
            "from",
            "city",
            "where",
            "population",
            ">",
            "(",
            "select",
            "avg",
            "(",
            "population",
            ")",
            "from",
            "city",
            ")",
            "group",
            "by",
            "district"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    4,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    0
                                ]
                            ]
                        },
                        "groupby": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderby": [],
                        "select": [
                            false,
                            [
                                [
                                    5,
                                    [
                                        0,
                                        [
                                            0,
                                            5,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": []
                    },
                    null
                ]
            ]
        },
        "question": "list the total number of city district of city for each district that have the average of population greater than ( the average of population of city )",
        "gold_question": "list the total number of city district of city with population greater than ( the average of population of city ) for each district",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "city",
            "district",
            "of",
            "city",
            "for",
            "each",
            "district",
            "that",
            "have",
            "the",
            "average",
            "of",
            "population",
            "greater",
            "than",
            "(",
            "the",
            "average",
            "of",
            "population",
            "of",
            "city",
            ")"
        ]
    },
    {
        "db_id": "world_1",
        "query": "SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            ",",
            "District",
            "FROM",
            "city",
            "WHERE",
            "Population",
            ">",
            "(",
            "SELECT",
            "avg",
            "(",
            "Population",
            ")",
            "FROM",
            "city",
            ")",
            "GROUP",
            "BY",
            "District"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            ",",
            "district",
            "from",
            "city",
            "where",
            "population",
            ">",
            "(",
            "select",
            "avg",
            "(",
            "population",
            ")",
            "from",
            "city",
            ")",
            "group",
            "by",
            "district"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    4,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    0
                                ]
                            ]
                        },
                        "groupby": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderby": [],
                        "select": [
                            false,
                            [
                                [
                                    5,
                                    [
                                        0,
                                        [
                                            0,
                                            5,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": []
                    },
                    null
                ]
            ]
        },
        "question": "list the total number of city district of city for each district that have the average of population greater than ( the average of population of city )",
        "gold_question": "list the total number of city district of city with population greater than ( the average of population of city ) for each district",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "city",
            "district",
            "of",
            "city",
            "for",
            "each",
            "district",
            "that",
            "have",
            "the",
            "average",
            "of",
            "population",
            "greater",
            "than",
            "(",
            "the",
            "average",
            "of",
            "population",
            "of",
            "city",
            ")"
        ]
    },
    {
        "db_id": "world_1",
        "query": "SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72",
        "query_toks": [
            "SELECT",
            "sum",
            "(",
            "Population",
            ")",
            ",",
            "GovernmentForm",
            "FROM",
            "country",
            "GROUP",
            "BY",
            "GovernmentForm",
            "HAVING",
            "avg",
            "(",
            "LifeExpectancy",
            ")",
            ">",
            "72"
        ],
        "query_toks_no_value": [
            "select",
            "sum",
            "(",
            "population",
            ")",
            ",",
            "governmentform",
            "from",
            "country",
            "group",
            "by",
            "governmentform",
            "having",
            "avg",
            "(",
            "lifeexpectancy",
            ")",
            ">",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    19,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            5,
                            15,
                            false
                        ],
                        null
                    ],
                    72.0,
                    null
                ]
            ],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        4,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                19,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list government form the average of population of country for each government form that have the average of life expectancy greater than or equal to value",
        "gold_question": "list the sum of population government form of country for each government form that have the average of life expectancy greater than value",
        "question_toks": [
            "list",
            "government",
            "form",
            "the",
            "average",
            "of",
            "population",
            "of",
            "country",
            "for",
            "each",
            "government",
            "form",
            "that",
            "have",
            "the",
            "average",
            "of",
            "life",
            "expectancy",
            "greater",
            "than",
            "or",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "world_1",
        "query": "SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72",
        "query_toks": [
            "SELECT",
            "sum",
            "(",
            "Population",
            ")",
            ",",
            "GovernmentForm",
            "FROM",
            "country",
            "GROUP",
            "BY",
            "GovernmentForm",
            "HAVING",
            "avg",
            "(",
            "LifeExpectancy",
            ")",
            ">",
            "72"
        ],
        "query_toks_no_value": [
            "select",
            "sum",
            "(",
            "population",
            ")",
            ",",
            "governmentform",
            "from",
            "country",
            "group",
            "by",
            "governmentform",
            "having",
            "avg",
            "(",
            "lifeexpectancy",
            ")",
            ">",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    19,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            5,
                            15,
                            false
                        ],
                        null
                    ],
                    72.0,
                    null
                ]
            ],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        4,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                19,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list government form the average of population of country for each government form that have the average of life expectancy greater than or equal to value",
        "gold_question": "list the sum of population government form of country for each government form that have the average of life expectancy greater than value",
        "question_toks": [
            "list",
            "government",
            "form",
            "the",
            "average",
            "of",
            "population",
            "of",
            "country",
            "for",
            "each",
            "government",
            "form",
            "that",
            "have",
            "the",
            "average",
            "of",
            "life",
            "expectancy",
            "greater",
            "than",
            "or",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "world_1",
        "query": "SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72",
        "query_toks": [
            "SELECT",
            "sum",
            "(",
            "Population",
            ")",
            ",",
            "avg",
            "(",
            "LifeExpectancy",
            ")",
            ",",
            "Continent",
            "FROM",
            "country",
            "GROUP",
            "BY",
            "Continent",
            "HAVING",
            "avg",
            "(",
            "LifeExpectancy",
            ")",
            "<",
            "72"
        ],
        "query_toks_no_value": [
            "select",
            "sum",
            "(",
            "population",
            ")",
            ",",
            "avg",
            "(",
            "lifeexpectancy",
            ")",
            ",",
            "continent",
            "from",
            "country",
            "group",
            "by",
            "continent",
            "having",
            "avg",
            "(",
            "lifeexpectancy",
            ")",
            "<",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    10,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    4,
                    [
                        0,
                        [
                            5,
                            15,
                            false
                        ],
                        null
                    ],
                    72.0,
                    null
                ]
            ],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        4,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list the average of life expectancy the sum of population continent of country for each continent that have the average of life expectancy less than value",
        "gold_question": "list the sum of population the average of life expectancy continent of country for each continent that have the average of life expectancy less than value",
        "question_toks": [
            "list",
            "the",
            "average",
            "of",
            "life",
            "expectancy",
            "the",
            "sum",
            "of",
            "population",
            "continent",
            "of",
            "country",
            "for",
            "each",
            "continent",
            "that",
            "have",
            "the",
            "average",
            "of",
            "life",
            "expectancy",
            "less",
            "than",
            "value"
        ]
    },
    {
        "db_id": "world_1",
        "query": "SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72",
        "query_toks": [
            "SELECT",
            "sum",
            "(",
            "Population",
            ")",
            ",",
            "avg",
            "(",
            "LifeExpectancy",
            ")",
            ",",
            "Continent",
            "FROM",
            "country",
            "GROUP",
            "BY",
            "Continent",
            "HAVING",
            "avg",
            "(",
            "LifeExpectancy",
            ")",
            "<",
            "72"
        ],
        "query_toks_no_value": [
            "select",
            "sum",
            "(",
            "population",
            ")",
            ",",
            "avg",
            "(",
            "lifeexpectancy",
            ")",
            ",",
            "continent",
            "from",
            "country",
            "group",
            "by",
            "continent",
            "having",
            "avg",
            "(",
            "lifeexpectancy",
            ")",
            "<",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    10,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    4,
                    [
                        0,
                        [
                            5,
                            15,
                            false
                        ],
                        null
                    ],
                    72.0,
                    null
                ]
            ],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        4,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list continent the average of life expectancy of country for each continent that have the average of life expectancy less than value",
        "gold_question": "list the sum of population the average of life expectancy continent of country for each continent that have the average of life expectancy less than value",
        "question_toks": [
            "list",
            "continent",
            "the",
            "average",
            "of",
            "life",
            "expectancy",
            "of",
            "country",
            "for",
            "each",
            "continent",
            "that",
            "have",
            "the",
            "average",
            "of",
            "life",
            "expectancy",
            "less",
            "than",
            "value"
        ]
    },
    {
        "db_id": "world_1",
        "query": "SELECT Name ,  SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5",
        "query_toks": [
            "SELECT",
            "Name",
            ",",
            "SurfaceArea",
            "FROM",
            "country",
            "ORDER",
            "BY",
            "SurfaceArea",
            "DESC",
            "LIMIT",
            "5"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "surfacearea",
            "from",
            "country",
            "order",
            "by",
            "surfacearea",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": 5,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            12,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of name surface area of country ordered by surface area descendingly",
        "gold_question": "list top value items of name surface area of country ordered by surface area descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "name",
            "surface",
            "area",
            "of",
            "country",
            "ordered",
            "by",
            "surface",
            "area",
            "descendingly"
        ]
    },
    {
        "db_id": "world_1",
        "query": "SELECT Name ,  SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5",
        "query_toks": [
            "SELECT",
            "Name",
            ",",
            "SurfaceArea",
            "FROM",
            "country",
            "ORDER",
            "BY",
            "SurfaceArea",
            "DESC",
            "LIMIT",
            "5"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "surfacearea",
            "from",
            "country",
            "order",
            "by",
            "surfacearea",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": 5,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            12,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of name surface area of country ordered by surface area descendingly",
        "gold_question": "list top value items of name surface area of country ordered by surface area descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "name",
            "surface",
            "area",
            "of",
            "country",
            "ordered",
            "by",
            "surface",
            "area",
            "descendingly"
        ]
    },
    {
        "db_id": "world_1",
        "query": "SELECT Name FROM country ORDER BY Population DESC LIMIT 3",
        "query_toks": [
            "SELECT",
            "Name",
            "FROM",
            "country",
            "ORDER",
            "BY",
            "Population",
            "DESC",
            "LIMIT",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "country",
            "order",
            "by",
            "population",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": 3,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            14,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of name of country ordered by population descendingly",
        "gold_question": "list top value items of name of country ordered by population descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "name",
            "of",
            "country",
            "ordered",
            "by",
            "population",
            "descendingly"
        ]
    },
    {
        "db_id": "world_1",
        "query": "SELECT Name FROM country ORDER BY Population DESC LIMIT 3",
        "query_toks": [
            "SELECT",
            "Name",
            "FROM",
            "country",
            "ORDER",
            "BY",
            "Population",
            "DESC",
            "LIMIT",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "country",
            "order",
            "by",
            "population",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": 3,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            14,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of name of country ordered by population descendingly",
        "gold_question": "list top value items of name of country ordered by population descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "name",
            "of",
            "country",
            "ordered",
            "by",
            "population",
            "descendingly"
        ]
    },
    {
        "db_id": "world_1",
        "query": "SELECT Name FROM country ORDER BY Population ASC LIMIT 3",
        "query_toks": [
            "SELECT",
            "Name",
            "FROM",
            "country",
            "ORDER",
            "BY",
            "Population",
            "ASC",
            "LIMIT",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "country",
            "order",
            "by",
            "population",
            "asc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": 3,
            "orderby": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            14,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of name of country ordered by population ascendingly",
        "gold_question": "list top value items of name of country ordered by population ascendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "name",
            "of",
            "country",
            "ordered",
            "by",
            "population",
            "ascendingly"
        ]
    },
    {
        "db_id": "world_1",
        "query": "SELECT Name FROM country ORDER BY Population ASC LIMIT 3",
        "query_toks": [
            "SELECT",
            "Name",
            "FROM",
            "country",
            "ORDER",
            "BY",
            "Population",
            "ASC",
            "LIMIT",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "country",
            "order",
            "by",
            "population",
            "asc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": 3,
            "orderby": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            14,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of name of country ordered by population ascendingly",
        "gold_question": "list top value items of name of country ordered by population ascendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "name",
            "of",
            "country",
            "ordered",
            "by",
            "population",
            "ascendingly"
        ]
    },
    {
        "db_id": "world_1",
        "query": "SELECT count(*) FROM country WHERE continent  =  \"Asia\"",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "country",
            "WHERE",
            "continent",
            "=",
            "``",
            "Asia",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "country",
            "where",
            "continent",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    "\"Asia\"",
                    null
                ]
            ]
        },
        "question": "list the total number of country with continent equal to value",
        "gold_question": "list the total number of country with continent equal to value",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "country",
            "with",
            "continent",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "world_1",
        "query": "SELECT count(*) FROM country WHERE continent  =  \"Asia\"",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "country",
            "WHERE",
            "continent",
            "=",
            "``",
            "Asia",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "country",
            "where",
            "continent",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    "\"Asia\"",
                    null
                ]
            ]
        },
        "question": "list the total number of country with region equal to value",
        "gold_question": "list the total number of country with continent equal to value",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "country",
            "with",
            "region",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "world_1",
        "query": "SELECT Name FROM country WHERE continent  =  \"Europe\" AND Population  =  \"80000\"",
        "query_toks": [
            "SELECT",
            "Name",
            "FROM",
            "country",
            "WHERE",
            "continent",
            "=",
            "``",
            "Europe",
            "''",
            "AND",
            "Population",
            "=",
            "``",
            "80000",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "country",
            "where",
            "continent",
            "=",
            "value",
            "and",
            "population",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    "\"Europe\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            14,
                            false
                        ],
                        null
                    ],
                    "\"80000\"",
                    null
                ]
            ]
        },
        "question": "list name of country with continent equal to value and population equal to value",
        "gold_question": "list name of country with continent equal to value and population equal to value",
        "question_toks": [
            "list",
            "name",
            "of",
            "country",
            "with",
            "continent",
            "equal",
            "to",
            "value",
            "and",
            "population",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "world_1",
        "query": "SELECT Name FROM country WHERE continent  =  \"Europe\" AND Population  =  \"80000\"",
        "query_toks": [
            "SELECT",
            "Name",
            "FROM",
            "country",
            "WHERE",
            "continent",
            "=",
            "``",
            "Europe",
            "''",
            "AND",
            "Population",
            "=",
            "``",
            "80000",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "country",
            "where",
            "continent",
            "=",
            "value",
            "and",
            "population",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    "\"Europe\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            14,
                            false
                        ],
                        null
                    ],
                    "\"80000\"",
                    null
                ]
            ]
        },
        "question": "list name of country with region equal to value and population equal to value",
        "gold_question": "list name of country with continent equal to value and population equal to value",
        "question_toks": [
            "list",
            "name",
            "of",
            "country",
            "with",
            "region",
            "equal",
            "to",
            "value",
            "and",
            "population",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "world_1",
        "query": "select sum(population) ,  avg(surfacearea) from country where continent  =  \"north america\" and surfacearea  >  3000",
        "query_toks": [
            "select",
            "sum",
            "(",
            "population",
            ")",
            ",",
            "avg",
            "(",
            "surfacearea",
            ")",
            "from",
            "country",
            "where",
            "continent",
            "=",
            "\"north america\"",
            "and",
            "surfacearea",
            ">",
            "3000"
        ],
        "query_toks_no_value": [
            "select",
            "sum",
            "(",
            "population",
            ")",
            ",",
            "avg",
            "(",
            "surfacearea",
            ")",
            "from",
            "country",
            "where",
            "continent",
            "=",
            "value",
            "and",
            "surfacearea",
            ">",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        4,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    "\"north america\"",
                    null
                ],
                "and",
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            12,
                            false
                        ],
                        null
                    ],
                    3000.0,
                    null
                ]
            ]
        },
        "question": "list the sum of population the average of surface area of country with continent equal to value and surface area greater than value",
        "gold_question": "list the sum of population the average of surface area of country with continent equal to value and surface area greater than value",
        "question_toks": [
            "list",
            "the",
            "sum",
            "of",
            "population",
            "the",
            "average",
            "of",
            "surface",
            "area",
            "of",
            "country",
            "with",
            "continent",
            "equal",
            "to",
            "value",
            "and",
            "surface",
            "area",
            "greater",
            "than",
            "value"
        ]
    },
    {
        "db_id": "world_1",
        "query": "select sum(population) ,  avg(surfacearea) from country where continent  =  \"north america\" and surfacearea  >  3000",
        "query_toks": [
            "select",
            "sum",
            "(",
            "population",
            ")",
            ",",
            "avg",
            "(",
            "surfacearea",
            ")",
            "from",
            "country",
            "where",
            "continent",
            "=",
            "\"north america\"",
            "and",
            "surfacearea",
            ">",
            "3000"
        ],
        "query_toks_no_value": [
            "select",
            "sum",
            "(",
            "population",
            ")",
            ",",
            "avg",
            "(",
            "surfacearea",
            ")",
            "from",
            "country",
            "where",
            "continent",
            "=",
            "value",
            "and",
            "surfacearea",
            ">",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        4,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    "\"north america\"",
                    null
                ],
                "and",
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            12,
                            false
                        ],
                        null
                    ],
                    3000.0,
                    null
                ]
            ]
        },
        "question": "list the sum of population the average of surface area of country with region equal to value and surface area greater than value",
        "gold_question": "list the sum of population the average of surface area of country with continent equal to value and surface area greater than value",
        "question_toks": [
            "list",
            "the",
            "sum",
            "of",
            "population",
            "the",
            "average",
            "of",
            "surface",
            "area",
            "of",
            "country",
            "with",
            "region",
            "equal",
            "to",
            "value",
            "and",
            "surface",
            "area",
            "greater",
            "than",
            "value"
        ]
    },
    {
        "db_id": "world_1",
        "query": "SELECT name FROM city WHERE Population BETWEEN 160000 AND 900000",
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "city",
            "WHERE",
            "Population",
            "BETWEEN",
            "160000",
            "AND",
            "900000"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "city",
            "where",
            "population",
            "between",
            "value",
            "and",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    1,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    160000.0,
                    900000.0
                ]
            ]
        },
        "question": "list name with population is between value and value",
        "gold_question": "list name of city with population is between value and value",
        "question_toks": [
            "list",
            "name",
            "with",
            "population",
            "is",
            "between",
            "value",
            "and",
            "value"
        ]
    },
    {
        "db_id": "world_1",
        "query": "select name from city where population between 160000 and 900000",
        "query_toks": [
            "select",
            "name",
            "from",
            "city",
            "where",
            "population",
            "between",
            "160000",
            "and",
            "900000"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "city",
            "where",
            "population",
            "between",
            "value",
            "and",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    1,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    160000.0,
                    900000.0
                ]
            ]
        },
        "question": "list name of city with population is between value and value",
        "gold_question": "list name of city with population is between value and value",
        "question_toks": [
            "list",
            "name",
            "of",
            "city",
            "with",
            "population",
            "is",
            "between",
            "value",
            "and",
            "value"
        ]
    },
    {
        "db_id": "world_1",
        "query": "SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "LANGUAGE",
            "FROM",
            "countrylanguage",
            "GROUP",
            "BY",
            "LANGUAGE",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "language",
            "from",
            "countrylanguage",
            "group",
            "by",
            "language",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    24,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                24,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of language of countrylanguage for each language ordered by the total number of countrylanguage descendingly",
        "gold_question": "list top value items of language of countrylanguage for each language ordered by the total number of countrylanguage descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "language",
            "of",
            "countrylanguage",
            "for",
            "each",
            "language",
            "ordered",
            "by",
            "the",
            "total",
            "number",
            "of",
            "countrylanguage",
            "descendingly"
        ]
    },
    {
        "db_id": "world_1",
        "query": "SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "LANGUAGE",
            "FROM",
            "countrylanguage",
            "GROUP",
            "BY",
            "LANGUAGE",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "language",
            "from",
            "countrylanguage",
            "group",
            "by",
            "language",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    24,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                24,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of language of countrylanguage for each language ordered by the total number of countrylanguage descendingly",
        "gold_question": "list top value items of language of countrylanguage for each language ordered by the total number of countrylanguage descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "language",
            "of",
            "countrylanguage",
            "for",
            "each",
            "language",
            "ordered",
            "by",
            "the",
            "total",
            "number",
            "of",
            "countrylanguage",
            "descendingly"
        ]
    },
    {
        "db_id": "world_1",
        "query": "SELECT LANGUAGE ,  CountryCode ,  max(Percentage) FROM countrylanguage GROUP BY CountryCode",
        "query_toks": [
            "SELECT",
            "LANGUAGE",
            ",",
            "CountryCode",
            ",",
            "max",
            "(",
            "Percentage",
            ")",
            "FROM",
            "countrylanguage",
            "GROUP",
            "BY",
            "CountryCode"
        ],
        "query_toks_no_value": [
            "select",
            "language",
            ",",
            "countrycode",
            ",",
            "max",
            "(",
            "percentage",
            ")",
            "from",
            "countrylanguage",
            "group",
            "by",
            "countrycode"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    23,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                24,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                23,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                26,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of language countrycode of countrylanguage for each countrycode ordered by the sum of percentage descendingly",
        "gold_question": "list language countrycode the maximum of percentage of countrylanguage for each countrycode",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "language",
            "countrycode",
            "of",
            "countrylanguage",
            "for",
            "each",
            "countrycode",
            "ordered",
            "by",
            "the",
            "sum",
            "of",
            "percentage",
            "descendingly"
        ]
    },
    {
        "db_id": "world_1",
        "query": "SELECT LANGUAGE ,  CountryCode ,  max(Percentage) FROM countrylanguage GROUP BY CountryCode",
        "query_toks": [
            "SELECT",
            "LANGUAGE",
            ",",
            "CountryCode",
            ",",
            "max",
            "(",
            "Percentage",
            ")",
            "FROM",
            "countrylanguage",
            "GROUP",
            "BY",
            "CountryCode"
        ],
        "query_toks_no_value": [
            "select",
            "language",
            ",",
            "countrycode",
            ",",
            "max",
            "(",
            "percentage",
            ")",
            "from",
            "countrylanguage",
            "group",
            "by",
            "countrycode"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    23,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                24,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                23,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                26,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list countrycode the maximum of percentage countrycode of countrylanguage for each countrycode ordered by the maximum of percentage descendingly",
        "gold_question": "list language countrycode the maximum of percentage of countrylanguage for each countrycode",
        "question_toks": [
            "list",
            "countrycode",
            "the",
            "maximum",
            "of",
            "percentage",
            "countrycode",
            "of",
            "countrylanguage",
            "for",
            "each",
            "countrycode",
            "ordered",
            "by",
            "the",
            "maximum",
            "of",
            "percentage",
            "descendingly"
        ]
    },
    {
        "db_id": "world_1",
        "query": "SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"Spanish\" GROUP BY CountryCode",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            ",",
            "max",
            "(",
            "Percentage",
            ")",
            "FROM",
            "countrylanguage",
            "WHERE",
            "LANGUAGE",
            "=",
            "``",
            "Spanish",
            "''",
            "GROUP",
            "BY",
            "CountryCode"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            ",",
            "max",
            "(",
            "percentage",
            ")",
            "from",
            "countrylanguage",
            "where",
            "language",
            "=",
            "value",
            "group",
            "by",
            "countrycode"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    23,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                26,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            24,
                            false
                        ],
                        null
                    ],
                    "\"Spanish\"",
                    null
                ]
            ]
        },
        "question": "list top value items of the total number of countrylanguage with language equal to value for each countrycode ordered by the sum of percentage descendingly",
        "gold_question": "list the total number of countrylanguage the maximum of percentage of countrylanguage with language equal to value for each countrycode",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "the",
            "total",
            "number",
            "of",
            "countrylanguage",
            "with",
            "language",
            "equal",
            "to",
            "value",
            "for",
            "each",
            "countrycode",
            "ordered",
            "by",
            "the",
            "sum",
            "of",
            "percentage",
            "descendingly"
        ]
    },
    {
        "db_id": "world_1",
        "query": "SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"Spanish\" GROUP BY CountryCode",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            ",",
            "max",
            "(",
            "Percentage",
            ")",
            "FROM",
            "countrylanguage",
            "WHERE",
            "LANGUAGE",
            "=",
            "``",
            "Spanish",
            "''",
            "GROUP",
            "BY",
            "CountryCode"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            ",",
            "max",
            "(",
            "percentage",
            ")",
            "from",
            "countrylanguage",
            "where",
            "language",
            "=",
            "value",
            "group",
            "by",
            "countrycode"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    23,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                26,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            24,
                            false
                        ],
                        null
                    ],
                    "\"Spanish\"",
                    null
                ]
            ]
        },
        "question": "list top value items of the total number of countrylanguage with language equal to value for each countrycode ordered by the total number of countrylanguage descendingly",
        "gold_question": "list the total number of countrylanguage the maximum of percentage of countrylanguage with language equal to value for each countrycode",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "the",
            "total",
            "number",
            "of",
            "countrylanguage",
            "with",
            "language",
            "equal",
            "to",
            "value",
            "for",
            "each",
            "countrycode",
            "ordered",
            "by",
            "the",
            "total",
            "number",
            "of",
            "countrylanguage",
            "descendingly"
        ]
    },
    {
        "db_id": "world_1",
        "query": "SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"Spanish\" GROUP BY CountryCode",
        "query_toks": [
            "SELECT",
            "CountryCode",
            ",",
            "max",
            "(",
            "Percentage",
            ")",
            "FROM",
            "countrylanguage",
            "WHERE",
            "LANGUAGE",
            "=",
            "``",
            "Spanish",
            "''",
            "GROUP",
            "BY",
            "CountryCode"
        ],
        "query_toks_no_value": [
            "select",
            "countrycode",
            ",",
            "max",
            "(",
            "percentage",
            ")",
            "from",
            "countrylanguage",
            "where",
            "language",
            "=",
            "value",
            "group",
            "by",
            "countrycode"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    23,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                23,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                26,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            24,
                            false
                        ],
                        null
                    ],
                    "\"Spanish\"",
                    null
                ]
            ]
        },
        "question": "list countrycode of countrylanguage with language equal to value and percentage equal to ( the maximum of percentage of countrylanguage with language equal to value ) ordered by percentage descendingly",
        "gold_question": "list countrycode the maximum of percentage of countrylanguage with language equal to value for each countrycode",
        "question_toks": [
            "list",
            "countrycode",
            "of",
            "countrylanguage",
            "with",
            "language",
            "equal",
            "to",
            "value",
            "and",
            "percentage",
            "equal",
            "to",
            "(",
            "the",
            "maximum",
            "of",
            "percentage",
            "of",
            "countrylanguage",
            "with",
            "language",
            "equal",
            "to",
            "value",
            ")",
            "ordered",
            "by",
            "percentage",
            "descendingly"
        ]
    },
    {
        "db_id": "world_1",
        "query": "SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"Spanish\" GROUP BY CountryCode",
        "query_toks": [
            "SELECT",
            "CountryCode",
            ",",
            "max",
            "(",
            "Percentage",
            ")",
            "FROM",
            "countrylanguage",
            "WHERE",
            "LANGUAGE",
            "=",
            "``",
            "Spanish",
            "''",
            "GROUP",
            "BY",
            "CountryCode"
        ],
        "query_toks_no_value": [
            "select",
            "countrycode",
            ",",
            "max",
            "(",
            "percentage",
            ")",
            "from",
            "countrylanguage",
            "where",
            "language",
            "=",
            "value",
            "group",
            "by",
            "countrycode"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    23,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                23,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                26,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            24,
                            false
                        ],
                        null
                    ],
                    "\"Spanish\"",
                    null
                ]
            ]
        },
        "question": "list top value items of countrycode of countrylanguage with language equal to value for each countrycode ordered by the total number of countrylanguage descendingly",
        "gold_question": "list countrycode the maximum of percentage of countrylanguage with language equal to value for each countrycode",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "countrycode",
            "of",
            "countrylanguage",
            "with",
            "language",
            "equal",
            "to",
            "value",
            "for",
            "each",
            "countrycode",
            "ordered",
            "by",
            "the",
            "total",
            "number",
            "of",
            "countrylanguage",
            "descendingly"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT count(*) FROM conductor",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "conductor"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "conductor"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list the total number of conductor",
        "gold_question": "list the total number of conductor",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "conductor"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT count(*) FROM conductor",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "conductor"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "conductor"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list the total number of conductor",
        "gold_question": "list the total number of conductor",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "conductor"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT Name FROM conductor ORDER BY Age ASC",
        "query_toks": [
            "SELECT",
            "Name",
            "FROM",
            "conductor",
            "ORDER",
            "BY",
            "Age",
            "ASC"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "conductor",
            "order",
            "by",
            "age",
            "asc"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list name of conductor ordered by age ascendingly",
        "gold_question": "list name of conductor ordered by age ascendingly",
        "question_toks": [
            "list",
            "name",
            "of",
            "conductor",
            "ordered",
            "by",
            "age",
            "ascendingly"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT Name FROM conductor ORDER BY Age ASC",
        "query_toks": [
            "SELECT",
            "Name",
            "FROM",
            "conductor",
            "ORDER",
            "BY",
            "Age",
            "ASC"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "conductor",
            "order",
            "by",
            "age",
            "asc"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list name of conductor ordered by age ascendingly",
        "gold_question": "list name of conductor ordered by age ascendingly",
        "question_toks": [
            "list",
            "name",
            "of",
            "conductor",
            "ordered",
            "by",
            "age",
            "ascendingly"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT Name FROM conductor WHERE Nationality != 'USA'",
        "query_toks": [
            "SELECT",
            "Name",
            "FROM",
            "conductor",
            "WHERE",
            "Nationality",
            "!",
            "=",
            "'USA",
            "'"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "conductor",
            "where",
            "nationality",
            "!",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ],
                    "\"USA\"",
                    null
                ]
            ]
        },
        "question": "list name of conductor with nationality not equal to value",
        "gold_question": "list name of conductor with nationality not equal to value",
        "question_toks": [
            "list",
            "name",
            "of",
            "conductor",
            "with",
            "nationality",
            "not",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT Name FROM conductor WHERE Nationality != 'USA'",
        "query_toks": [
            "SELECT",
            "Name",
            "FROM",
            "conductor",
            "WHERE",
            "Nationality",
            "!",
            "=",
            "'USA",
            "'"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "conductor",
            "where",
            "nationality",
            "!",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ],
                    "\"USA\"",
                    null
                ]
            ]
        },
        "question": "list name of conductor with nationality not equal to value",
        "gold_question": "list name of conductor with nationality not equal to value",
        "question_toks": [
            "list",
            "name",
            "of",
            "conductor",
            "with",
            "nationality",
            "not",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC",
        "query_toks": [
            "SELECT",
            "Record_Company",
            "FROM",
            "orchestra",
            "ORDER",
            "BY",
            "Year_of_Founded",
            "DESC"
        ],
        "query_toks_no_value": [
            "select",
            "record_company",
            "from",
            "orchestra",
            "order",
            "by",
            "year_of_founded",
            "desc"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list record company of orchestra ordered by year of found descendingly",
        "gold_question": "list record company of orchestra ordered by year of found descendingly",
        "question_toks": [
            "list",
            "record",
            "company",
            "of",
            "orchestra",
            "ordered",
            "by",
            "year",
            "of",
            "found",
            "descendingly"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC",
        "query_toks": [
            "SELECT",
            "Record_Company",
            "FROM",
            "orchestra",
            "ORDER",
            "BY",
            "Year_of_Founded",
            "DESC"
        ],
        "query_toks_no_value": [
            "select",
            "record_company",
            "from",
            "orchestra",
            "order",
            "by",
            "year_of_founded",
            "desc"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list record company of orchestra ordered by year of found descendingly",
        "gold_question": "list record company of orchestra ordered by year of found descendingly",
        "question_toks": [
            "list",
            "record",
            "company",
            "of",
            "orchestra",
            "ordered",
            "by",
            "year",
            "of",
            "found",
            "descendingly"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT avg(Attendance) FROM SHOW",
        "query_toks": [
            "SELECT",
            "avg",
            "(",
            "Attendance",
            ")",
            "FROM",
            "SHOW"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "attendance",
            ")",
            "from",
            "show"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                23,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list the average of attendance of show",
        "gold_question": "list the average of attendance of show",
        "question_toks": [
            "list",
            "the",
            "average",
            "of",
            "attendance",
            "of",
            "show"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT avg(Attendance) FROM SHOW",
        "query_toks": [
            "SELECT",
            "avg",
            "(",
            "Attendance",
            ")",
            "FROM",
            "SHOW"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "attendance",
            ")",
            "from",
            "show"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                23,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list the average of attendance of show",
        "gold_question": "list the average of attendance of show",
        "question_toks": [
            "list",
            "the",
            "average",
            "of",
            "attendance",
            "of",
            "show"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT max(SHARE) ,  min(SHARE) FROM performance WHERE TYPE != \"Live final\"",
        "query_toks": [
            "SELECT",
            "max",
            "(",
            "SHARE",
            ")",
            ",",
            "min",
            "(",
            "SHARE",
            ")",
            "FROM",
            "performance",
            "WHERE",
            "TYPE",
            "!",
            "=",
            "``",
            "Live",
            "final",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "max",
            "(",
            "share",
            ")",
            ",",
            "min",
            "(",
            "share",
            ")",
            "from",
            "performance",
            "where",
            "type",
            "!",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                18,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                18,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            14,
                            false
                        ],
                        null
                    ],
                    "\"Live final\"",
                    null
                ]
            ]
        },
        "question": "list the maximum of share the minimum of share of performance with type not equal to value",
        "gold_question": "list the maximum of share the minimum of share of performance with type not equal to value",
        "question_toks": [
            "list",
            "the",
            "maximum",
            "of",
            "share",
            "the",
            "minimum",
            "of",
            "share",
            "of",
            "performance",
            "with",
            "type",
            "not",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT max(SHARE) ,  min(SHARE) FROM performance WHERE TYPE != \"Live final\"",
        "query_toks": [
            "SELECT",
            "max",
            "(",
            "SHARE",
            ")",
            ",",
            "min",
            "(",
            "SHARE",
            ")",
            "FROM",
            "performance",
            "WHERE",
            "TYPE",
            "!",
            "=",
            "``",
            "Live",
            "final",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "max",
            "(",
            "share",
            ")",
            ",",
            "min",
            "(",
            "share",
            ")",
            "from",
            "performance",
            "where",
            "type",
            "!",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                18,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                18,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            14,
                            false
                        ],
                        null
                    ],
                    "\"Live final\"",
                    null
                ]
            ]
        },
        "question": "list the maximum of share the minimum of share of performance with type not equal to value",
        "gold_question": "list the maximum of share the minimum of share of performance with type not equal to value",
        "question_toks": [
            "list",
            "the",
            "maximum",
            "of",
            "share",
            "the",
            "minimum",
            "of",
            "share",
            "of",
            "performance",
            "with",
            "type",
            "not",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT count(DISTINCT Nationality) FROM conductor",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "DISTINCT",
            "Nationality",
            ")",
            "FROM",
            "conductor"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "distinct",
            "nationality",
            ")",
            "from",
            "conductor"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                4,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list the number of nationality of conductor",
        "gold_question": "list the number of nationality of conductor",
        "question_toks": [
            "list",
            "the",
            "number",
            "of",
            "nationality",
            "of",
            "conductor"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT count(DISTINCT Nationality) FROM conductor",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "DISTINCT",
            "Nationality",
            ")",
            "FROM",
            "conductor"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "distinct",
            "nationality",
            ")",
            "from",
            "conductor"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                4,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list the number of nationality of conductor",
        "gold_question": "list the number of nationality of conductor",
        "question_toks": [
            "list",
            "the",
            "number",
            "of",
            "nationality",
            "of",
            "conductor"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC",
        "query_toks": [
            "SELECT",
            "Name",
            "FROM",
            "conductor",
            "ORDER",
            "BY",
            "Year_of_Work",
            "DESC"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "conductor",
            "order",
            "by",
            "year_of_work",
            "desc"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list name of conductor ordered by year of work descendingly",
        "gold_question": "list name of conductor ordered by year of work descendingly",
        "question_toks": [
            "list",
            "name",
            "of",
            "conductor",
            "ordered",
            "by",
            "year",
            "of",
            "work",
            "descendingly"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC",
        "query_toks": [
            "SELECT",
            "Name",
            "FROM",
            "conductor",
            "ORDER",
            "BY",
            "Year_of_Work",
            "DESC"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "conductor",
            "order",
            "by",
            "year_of_work",
            "desc"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list name of conductor ordered by year of work descendingly",
        "gold_question": "list name of conductor ordered by year of work descendingly",
        "question_toks": [
            "list",
            "name",
            "of",
            "conductor",
            "ordered",
            "by",
            "year",
            "of",
            "work",
            "descendingly"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "Name",
            "FROM",
            "conductor",
            "ORDER",
            "BY",
            "Year_of_Work",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "conductor",
            "order",
            "by",
            "year_of_work",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of name of conductor ordered by year of work descendingly",
        "gold_question": "list top value items of name of conductor ordered by year of work descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "name",
            "of",
            "conductor",
            "ordered",
            "by",
            "year",
            "of",
            "work",
            "descendingly"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "Name",
            "FROM",
            "conductor",
            "ORDER",
            "BY",
            "Year_of_Work",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "conductor",
            "order",
            "by",
            "year_of_work",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of name of conductor ordered by year of work descendingly",
        "gold_question": "list top value items of name of conductor ordered by year of work descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "name",
            "of",
            "conductor",
            "ordered",
            "by",
            "year",
            "of",
            "work",
            "descendingly"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT T1.Name ,  T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID",
        "query_toks": [
            "SELECT",
            "T1.Name",
            ",",
            "T2.Orchestra",
            "FROM",
            "conductor",
            "AS",
            "T1",
            "JOIN",
            "orchestra",
            "AS",
            "T2",
            "ON",
            "T1.Conductor_ID",
            "=",
            "T2.Conductor_ID"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "name",
            ",",
            "t2",
            ".",
            "orchestra",
            "from",
            "conductor",
            "as",
            "t1",
            "join",
            "orchestra",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "conductor_id",
            "=",
            "t2",
            ".",
            "conductor_id"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list name of conductor orchestra",
        "gold_question": "list name of conductor orchestra",
        "question_toks": [
            "list",
            "name",
            "of",
            "conductor",
            "orchestra"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT T1.Name ,  T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID",
        "query_toks": [
            "SELECT",
            "T1.Name",
            ",",
            "T2.Orchestra",
            "FROM",
            "conductor",
            "AS",
            "T1",
            "JOIN",
            "orchestra",
            "AS",
            "T2",
            "ON",
            "T1.Conductor_ID",
            "=",
            "T2.Conductor_ID"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "name",
            ",",
            "t2",
            ".",
            "orchestra",
            "from",
            "conductor",
            "as",
            "t1",
            "join",
            "orchestra",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "conductor_id",
            "=",
            "t2",
            ".",
            "conductor_id"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list name of conductor name of conductor",
        "gold_question": "list name of conductor orchestra",
        "question_toks": [
            "list",
            "name",
            "of",
            "conductor",
            "name",
            "of",
            "conductor"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1",
        "query_toks": [
            "SELECT",
            "T1.Name",
            "FROM",
            "conductor",
            "AS",
            "T1",
            "JOIN",
            "orchestra",
            "AS",
            "T2",
            "ON",
            "T1.Conductor_ID",
            "=",
            "T2.Conductor_ID",
            "GROUP",
            "BY",
            "T2.Conductor_ID",
            "HAVING",
            "COUNT",
            "(",
            "*",
            ")",
            ">",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "name",
            "from",
            "conductor",
            "as",
            "t1",
            "join",
            "orchestra",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "conductor_id",
            "=",
            "t2",
            ".",
            "conductor_id",
            "group",
            "by",
            "t2",
            ".",
            "conductor_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    8,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list name of conductor for each name of conductor that have the total number of conductor greater than value",
        "gold_question": "list name of conductor for each conductor id of orchestra that have the total number of orchestra greater than value",
        "question_toks": [
            "list",
            "name",
            "of",
            "conductor",
            "for",
            "each",
            "name",
            "of",
            "conductor",
            "that",
            "have",
            "the",
            "total",
            "number",
            "of",
            "conductor",
            "greater",
            "than",
            "value"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1",
        "query_toks": [
            "SELECT",
            "T1.Name",
            "FROM",
            "conductor",
            "AS",
            "T1",
            "JOIN",
            "orchestra",
            "AS",
            "T2",
            "ON",
            "T1.Conductor_ID",
            "=",
            "T2.Conductor_ID",
            "GROUP",
            "BY",
            "T2.Conductor_ID",
            "HAVING",
            "COUNT",
            "(",
            "*",
            ")",
            ">",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "name",
            "from",
            "conductor",
            "as",
            "t1",
            "join",
            "orchestra",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "conductor_id",
            "=",
            "t2",
            ".",
            "conductor_id",
            "group",
            "by",
            "t2",
            ".",
            "conductor_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    8,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list name of conductor for each conductor id of orchestra that have the total number of orchestra greater than value",
        "gold_question": "list name of conductor for each conductor id of orchestra that have the total number of orchestra greater than value",
        "question_toks": [
            "list",
            "name",
            "of",
            "conductor",
            "for",
            "each",
            "conductor",
            "id",
            "of",
            "orchestra",
            "that",
            "have",
            "the",
            "total",
            "number",
            "of",
            "orchestra",
            "greater",
            "than",
            "value"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T1.Name",
            "FROM",
            "conductor",
            "AS",
            "T1",
            "JOIN",
            "orchestra",
            "AS",
            "T2",
            "ON",
            "T1.Conductor_ID",
            "=",
            "T2.Conductor_ID",
            "GROUP",
            "BY",
            "T2.Conductor_ID",
            "ORDER",
            "BY",
            "COUNT",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "name",
            "from",
            "conductor",
            "as",
            "t1",
            "join",
            "orchestra",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "conductor_id",
            "=",
            "t2",
            ".",
            "conductor_id",
            "group",
            "by",
            "t2",
            ".",
            "conductor_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    8,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of name of conductor for each conductor id of conductor ordered by the total number of conductor descendingly",
        "gold_question": "list top value items of name of conductor for each conductor id of orchestra ordered by the total number of orchestra descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "name",
            "of",
            "conductor",
            "for",
            "each",
            "conductor",
            "id",
            "of",
            "conductor",
            "ordered",
            "by",
            "the",
            "total",
            "number",
            "of",
            "conductor",
            "descendingly"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T1.Name",
            "FROM",
            "conductor",
            "AS",
            "T1",
            "JOIN",
            "orchestra",
            "AS",
            "T2",
            "ON",
            "T1.Conductor_ID",
            "=",
            "T2.Conductor_ID",
            "GROUP",
            "BY",
            "T2.Conductor_ID",
            "ORDER",
            "BY",
            "COUNT",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "name",
            "from",
            "conductor",
            "as",
            "t1",
            "join",
            "orchestra",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "conductor_id",
            "=",
            "t2",
            ".",
            "conductor_id",
            "group",
            "by",
            "t2",
            ".",
            "conductor_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    8,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of name of conductor for each conductor id of conductor ordered by the total number of conductor descendingly",
        "gold_question": "list top value items of name of conductor for each conductor id of orchestra ordered by the total number of orchestra descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "name",
            "of",
            "conductor",
            "for",
            "each",
            "conductor",
            "id",
            "of",
            "conductor",
            "ordered",
            "by",
            "the",
            "total",
            "number",
            "of",
            "conductor",
            "descendingly"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE Year_of_Founded  >  2008",
        "query_toks": [
            "SELECT",
            "T1.Name",
            "FROM",
            "conductor",
            "AS",
            "T1",
            "JOIN",
            "orchestra",
            "AS",
            "T2",
            "ON",
            "T1.Conductor_ID",
            "=",
            "T2.Conductor_ID",
            "WHERE",
            "Year_of_Founded",
            ">",
            "2008"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "name",
            "from",
            "conductor",
            "as",
            "t1",
            "join",
            "orchestra",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "conductor_id",
            "=",
            "t2",
            ".",
            "conductor_id",
            "where",
            "year_of_founded",
            ">",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    2008.0,
                    null
                ]
            ]
        },
        "question": "list name of conductor with year of found of orchestra greater than value",
        "gold_question": "list name of conductor with year of found of orchestra greater than value",
        "question_toks": [
            "list",
            "name",
            "of",
            "conductor",
            "with",
            "year",
            "of",
            "found",
            "of",
            "orchestra",
            "greater",
            "than",
            "value"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE Year_of_Founded  >  2008",
        "query_toks": [
            "SELECT",
            "T1.Name",
            "FROM",
            "conductor",
            "AS",
            "T1",
            "JOIN",
            "orchestra",
            "AS",
            "T2",
            "ON",
            "T1.Conductor_ID",
            "=",
            "T2.Conductor_ID",
            "WHERE",
            "Year_of_Founded",
            ">",
            "2008"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "name",
            "from",
            "conductor",
            "as",
            "t1",
            "join",
            "orchestra",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "conductor_id",
            "=",
            "t2",
            ".",
            "conductor_id",
            "where",
            "year_of_founded",
            ">",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    2008.0,
                    null
                ]
            ]
        },
        "question": "list name of conductor with year of found of orchestra greater than value",
        "gold_question": "list name of conductor with year of found of orchestra greater than value",
        "question_toks": [
            "list",
            "name",
            "of",
            "conductor",
            "with",
            "year",
            "of",
            "found",
            "of",
            "orchestra",
            "greater",
            "than",
            "value"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company",
        "query_toks": [
            "SELECT",
            "Record_Company",
            ",",
            "COUNT",
            "(",
            "*",
            ")",
            "FROM",
            "orchestra",
            "GROUP",
            "BY",
            "Record_Company"
        ],
        "query_toks_no_value": [
            "select",
            "record_company",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "orchestra",
            "group",
            "by",
            "record_company"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    9,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list record company the total number of orchestra for each record company",
        "gold_question": "list record company the total number of orchestra for each record company",
        "question_toks": [
            "list",
            "record",
            "company",
            "the",
            "total",
            "number",
            "of",
            "orchestra",
            "for",
            "each",
            "record",
            "company"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company",
        "query_toks": [
            "SELECT",
            "Record_Company",
            ",",
            "COUNT",
            "(",
            "*",
            ")",
            "FROM",
            "orchestra",
            "GROUP",
            "BY",
            "Record_Company"
        ],
        "query_toks_no_value": [
            "select",
            "record_company",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "orchestra",
            "group",
            "by",
            "record_company"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    9,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list the total number of orchestra record company of orchestra for each record company",
        "gold_question": "list record company the total number of orchestra for each record company",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "orchestra",
            "record",
            "company",
            "of",
            "orchestra",
            "for",
            "each",
            "record",
            "company"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC",
        "query_toks": [
            "SELECT",
            "Major_Record_Format",
            "FROM",
            "orchestra",
            "GROUP",
            "BY",
            "Major_Record_Format",
            "ORDER",
            "BY",
            "COUNT",
            "(",
            "*",
            ")",
            "ASC"
        ],
        "query_toks_no_value": [
            "select",
            "major_record_format",
            "from",
            "orchestra",
            "group",
            "by",
            "major_record_format",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "asc"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    11,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [
                "asc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list major record format of orchestra for each major record format ordered by the total number of orchestra ascendingly",
        "gold_question": "list major record format of orchestra for each major record format ordered by the total number of orchestra ascendingly",
        "question_toks": [
            "list",
            "major",
            "record",
            "format",
            "of",
            "orchestra",
            "for",
            "each",
            "major",
            "record",
            "format",
            "ordered",
            "by",
            "the",
            "total",
            "number",
            "of",
            "orchestra",
            "ascendingly"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC",
        "query_toks": [
            "SELECT",
            "Major_Record_Format",
            "FROM",
            "orchestra",
            "GROUP",
            "BY",
            "Major_Record_Format",
            "ORDER",
            "BY",
            "COUNT",
            "(",
            "*",
            ")",
            "ASC"
        ],
        "query_toks_no_value": [
            "select",
            "major_record_format",
            "from",
            "orchestra",
            "group",
            "by",
            "major_record_format",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "asc"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    11,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [
                "asc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list major record format of orchestra for each major record format ordered by the total number of orchestra ascendingly",
        "gold_question": "list major record format of orchestra for each major record format ordered by the total number of orchestra ascendingly",
        "question_toks": [
            "list",
            "major",
            "record",
            "format",
            "of",
            "orchestra",
            "for",
            "each",
            "major",
            "record",
            "format",
            "ordered",
            "by",
            "the",
            "total",
            "number",
            "of",
            "orchestra",
            "ascendingly"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "Record_Company",
            "FROM",
            "orchestra",
            "GROUP",
            "BY",
            "Record_Company",
            "ORDER",
            "BY",
            "COUNT",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "record_company",
            "from",
            "orchestra",
            "group",
            "by",
            "record_company",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    9,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of record company of orchestra for each record company ordered by the total number of orchestra descendingly",
        "gold_question": "list top value items of record company of orchestra for each record company ordered by the total number of orchestra descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "record",
            "company",
            "of",
            "orchestra",
            "for",
            "each",
            "record",
            "company",
            "ordered",
            "by",
            "the",
            "total",
            "number",
            "of",
            "orchestra",
            "descendingly"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "Record_Company",
            "FROM",
            "orchestra",
            "GROUP",
            "BY",
            "Record_Company",
            "ORDER",
            "BY",
            "COUNT",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "record_company",
            "from",
            "orchestra",
            "group",
            "by",
            "record_company",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    9,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of record company of orchestra for each record company ordered by the total number of orchestra descendingly",
        "gold_question": "list top value items of record company of orchestra for each record company ordered by the total number of orchestra descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "record",
            "company",
            "of",
            "orchestra",
            "for",
            "each",
            "record",
            "company",
            "ordered",
            "by",
            "the",
            "total",
            "number",
            "of",
            "orchestra",
            "descendingly"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)",
        "query_toks": [
            "SELECT",
            "Orchestra",
            "FROM",
            "orchestra",
            "WHERE",
            "Orchestra_ID",
            "NOT",
            "IN",
            "(",
            "SELECT",
            "Orchestra_ID",
            "FROM",
            "performance",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "orchestra",
            "from",
            "orchestra",
            "where",
            "orchestra_id",
            "not",
            "in",
            "(",
            "select",
            "orchestra_id",
            "from",
            "performance",
            ")"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    true,
                    8,
                    [
                        0,
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    2
                                ]
                            ]
                        },
                        "groupby": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderby": [],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            13,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": []
                    },
                    null
                ]
            ]
        },
        "question": "list orchestra of orchestra with orchestra id that is not in ( orchestra id of performance )",
        "gold_question": "list orchestra with orchestra id that is not in ( orchestra id of performance )",
        "question_toks": [
            "list",
            "orchestra",
            "of",
            "orchestra",
            "with",
            "orchestra",
            "id",
            "that",
            "is",
            "not",
            "in",
            "(",
            "orchestra",
            "id",
            "of",
            "performance",
            ")"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)",
        "query_toks": [
            "SELECT",
            "Orchestra",
            "FROM",
            "orchestra",
            "WHERE",
            "Orchestra_ID",
            "NOT",
            "IN",
            "(",
            "SELECT",
            "Orchestra_ID",
            "FROM",
            "performance",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "orchestra",
            "from",
            "orchestra",
            "where",
            "orchestra_id",
            "not",
            "in",
            "(",
            "select",
            "orchestra_id",
            "from",
            "performance",
            ")"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    true,
                    8,
                    [
                        0,
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    2
                                ]
                            ]
                        },
                        "groupby": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderby": [],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            13,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": []
                    },
                    null
                ]
            ]
        },
        "question": "list orchestra except that list orchestra of orchestra",
        "gold_question": "list orchestra with orchestra id that is not in ( orchestra id of performance )",
        "question_toks": [
            "list",
            "orchestra",
            "except",
            "that",
            "list",
            "orchestra",
            "of",
            "orchestra"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003",
        "query_toks": [
            "SELECT",
            "Record_Company",
            "FROM",
            "orchestra",
            "WHERE",
            "Year_of_Founded",
            "<",
            "2003",
            "INTERSECT",
            "SELECT",
            "Record_Company",
            "FROM",
            "orchestra",
            "WHERE",
            "Year_of_Founded",
            ">",
            "2003"
        ],
        "query_toks_no_value": [
            "select",
            "record_company",
            "from",
            "orchestra",
            "where",
            "year_of_founded",
            "<",
            "value",
            "intersect",
            "select",
            "record_company",
            "from",
            "orchestra",
            "where",
            "year_of_founded",
            ">",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": {
                "except": null,
                "from": {
                    "conds": [],
                    "table_units": [
                        [
                            "table_unit",
                            1
                        ]
                    ]
                },
                "groupby": [],
                "having": [],
                "intersect": null,
                "limit": null,
                "orderby": [],
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    9,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "union": null,
                "where": [
                    [
                        false,
                        3,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ],
                        2003.0,
                        null
                    ]
                ]
            },
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    4,
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    2003.0,
                    null
                ]
            ]
        },
        "question": "list record company of orchestra with year of found less than value and list record company of orchestra with year of found greater than value",
        "gold_question": "list record company of orchestra with year of found less than value and list record company of orchestra with year of found greater than value",
        "question_toks": [
            "list",
            "record",
            "company",
            "of",
            "orchestra",
            "with",
            "year",
            "of",
            "found",
            "less",
            "than",
            "value",
            "and",
            "list",
            "record",
            "company",
            "of",
            "orchestra",
            "with",
            "year",
            "of",
            "found",
            "greater",
            "than",
            "value"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003",
        "query_toks": [
            "SELECT",
            "Record_Company",
            "FROM",
            "orchestra",
            "WHERE",
            "Year_of_Founded",
            "<",
            "2003",
            "INTERSECT",
            "SELECT",
            "Record_Company",
            "FROM",
            "orchestra",
            "WHERE",
            "Year_of_Founded",
            ">",
            "2003"
        ],
        "query_toks_no_value": [
            "select",
            "record_company",
            "from",
            "orchestra",
            "where",
            "year_of_founded",
            "<",
            "value",
            "intersect",
            "select",
            "record_company",
            "from",
            "orchestra",
            "where",
            "year_of_founded",
            ">",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": {
                "except": null,
                "from": {
                    "conds": [],
                    "table_units": [
                        [
                            "table_unit",
                            1
                        ]
                    ]
                },
                "groupby": [],
                "having": [],
                "intersect": null,
                "limit": null,
                "orderby": [],
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    9,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "union": null,
                "where": [
                    [
                        false,
                        3,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ],
                        2003.0,
                        null
                    ]
                ]
            },
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    4,
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    2003.0,
                    null
                ]
            ]
        },
        "question": "list record company of orchestra with year of found less than value and list record company of orchestra with year of found greater than value",
        "gold_question": "list record company of orchestra with year of found less than value and list record company of orchestra with year of found greater than value",
        "question_toks": [
            "list",
            "record",
            "company",
            "of",
            "orchestra",
            "with",
            "year",
            "of",
            "found",
            "less",
            "than",
            "value",
            "and",
            "list",
            "record",
            "company",
            "of",
            "orchestra",
            "with",
            "year",
            "of",
            "found",
            "greater",
            "than",
            "value"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format  =  \"CD\" OR Major_Record_Format  =  \"DVD\"",
        "query_toks": [
            "SELECT",
            "COUNT",
            "(",
            "*",
            ")",
            "FROM",
            "orchestra",
            "WHERE",
            "Major_Record_Format",
            "=",
            "``",
            "CD",
            "''",
            "OR",
            "Major_Record_Format",
            "=",
            "``",
            "DVD",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "orchestra",
            "where",
            "major_record_format",
            "=",
            "value",
            "or",
            "major_record_format",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    "\"CD\"",
                    null
                ],
                "or",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    "\"DVD\"",
                    null
                ]
            ]
        },
        "question": "list the total number of orchestra with major record format equal to value or major record format equal to value",
        "gold_question": "list the total number of orchestra with major record format equal to value or major record format equal to value",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "orchestra",
            "with",
            "major",
            "record",
            "format",
            "equal",
            "to",
            "value",
            "or",
            "major",
            "record",
            "format",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format  =  \"CD\" OR Major_Record_Format  =  \"DVD\"",
        "query_toks": [
            "SELECT",
            "COUNT",
            "(",
            "*",
            ")",
            "FROM",
            "orchestra",
            "WHERE",
            "Major_Record_Format",
            "=",
            "``",
            "CD",
            "''",
            "OR",
            "Major_Record_Format",
            "=",
            "``",
            "DVD",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "orchestra",
            "where",
            "major_record_format",
            "=",
            "value",
            "or",
            "major_record_format",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    "\"CD\"",
                    null
                ],
                "or",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    "\"DVD\"",
                    null
                ]
            ]
        },
        "question": "list the total number of orchestra with major record format equal to value or major record format equal to value",
        "gold_question": "list the total number of orchestra with major record format equal to value or major record format equal to value",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "orchestra",
            "with",
            "major",
            "record",
            "format",
            "equal",
            "to",
            "value",
            "or",
            "major",
            "record",
            "format",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*)  >  1",
        "query_toks": [
            "SELECT",
            "Year_of_Founded",
            "FROM",
            "orchestra",
            "AS",
            "T1",
            "JOIN",
            "performance",
            "AS",
            "T2",
            "ON",
            "T1.Orchestra_ID",
            "=",
            "T2.Orchestra_ID",
            "GROUP",
            "BY",
            "T2.Orchestra_ID",
            "HAVING",
            "COUNT",
            "(",
            "*",
            ")",
            ">",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "year_of_founded",
            "from",
            "orchestra",
            "as",
            "t1",
            "join",
            "performance",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "orchestra_id",
            "=",
            "t2",
            ".",
            "orchestra_id",
            "group",
            "by",
            "t2",
            ".",
            "orchestra_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    13,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list year of found of orchestra for each orchestra id of performance that have the total number of performance greater than value",
        "gold_question": "list year of found of orchestra for each orchestra id of performance that have the total number of performance greater than value",
        "question_toks": [
            "list",
            "year",
            "of",
            "found",
            "of",
            "orchestra",
            "for",
            "each",
            "orchestra",
            "id",
            "of",
            "performance",
            "that",
            "have",
            "the",
            "total",
            "number",
            "of",
            "performance",
            "greater",
            "than",
            "value"
        ]
    },
    {
        "db_id": "orchestra",
        "query": "SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*)  >  1",
        "query_toks": [
            "SELECT",
            "Year_of_Founded",
            "FROM",
            "orchestra",
            "AS",
            "T1",
            "JOIN",
            "performance",
            "AS",
            "T2",
            "ON",
            "T1.Orchestra_ID",
            "=",
            "T2.Orchestra_ID",
            "GROUP",
            "BY",
            "T2.Orchestra_ID",
            "HAVING",
            "COUNT",
            "(",
            "*",
            ")",
            ">",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "year_of_founded",
            "from",
            "orchestra",
            "as",
            "t1",
            "join",
            "performance",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "orchestra_id",
            "=",
            "t2",
            ".",
            "orchestra_id",
            "group",
            "by",
            "t2",
            ".",
            "orchestra_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    13,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list year of found of orchestra for each orchestra id of performance that have the total number of performance greater than value",
        "gold_question": "list year of found of orchestra for each orchestra id of performance that have the total number of performance greater than value",
        "question_toks": [
            "list",
            "year",
            "of",
            "found",
            "of",
            "orchestra",
            "for",
            "each",
            "orchestra",
            "id",
            "of",
            "performance",
            "that",
            "have",
            "the",
            "total",
            "number",
            "of",
            "performance",
            "greater",
            "than",
            "value"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT count(*) FROM Highschooler",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "Highschooler"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "highschooler"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list the total number of high schooler",
        "gold_question": "list the total number of high schooler",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "high",
            "schooler"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT count(*) FROM Highschooler",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "Highschooler"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "highschooler"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list the total number of high schooler",
        "gold_question": "list the total number of high schooler",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "high",
            "schooler"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT name ,  grade FROM Highschooler",
        "query_toks": [
            "SELECT",
            "name",
            ",",
            "grade",
            "FROM",
            "Highschooler"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "grade",
            "from",
            "highschooler"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list name grade of high schooler",
        "gold_question": "list name grade of high schooler",
        "question_toks": [
            "list",
            "name",
            "grade",
            "of",
            "high",
            "schooler"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT name ,  grade FROM Highschooler",
        "query_toks": [
            "SELECT",
            "name",
            ",",
            "grade",
            "FROM",
            "Highschooler"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "grade",
            "from",
            "highschooler"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list name grade of high schooler",
        "gold_question": "list name grade of high schooler",
        "question_toks": [
            "list",
            "name",
            "grade",
            "of",
            "high",
            "schooler"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT grade FROM Highschooler",
        "query_toks": [
            "SELECT",
            "grade",
            "FROM",
            "Highschooler"
        ],
        "query_toks_no_value": [
            "select",
            "grade",
            "from",
            "highschooler"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list grade of high schooler",
        "gold_question": "list grade of high schooler",
        "question_toks": [
            "list",
            "grade",
            "of",
            "high",
            "schooler"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT grade FROM Highschooler",
        "query_toks": [
            "SELECT",
            "grade",
            "FROM",
            "Highschooler"
        ],
        "query_toks_no_value": [
            "select",
            "grade",
            "from",
            "highschooler"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list grade of high schooler",
        "gold_question": "list grade of high schooler",
        "question_toks": [
            "list",
            "grade",
            "of",
            "high",
            "schooler"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT grade FROM Highschooler WHERE name  =  \"Kyle\"",
        "query_toks": [
            "SELECT",
            "grade",
            "FROM",
            "Highschooler",
            "WHERE",
            "name",
            "=",
            "``",
            "Kyle",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "grade",
            "from",
            "highschooler",
            "where",
            "name",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"Kyle\"",
                    null
                ]
            ]
        },
        "question": "list grade of high schooler with name equal to value",
        "gold_question": "list grade of high schooler with name equal to value",
        "question_toks": [
            "list",
            "grade",
            "of",
            "high",
            "schooler",
            "with",
            "name",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT grade FROM Highschooler WHERE name  =  \"Kyle\"",
        "query_toks": [
            "SELECT",
            "grade",
            "FROM",
            "Highschooler",
            "WHERE",
            "name",
            "=",
            "``",
            "Kyle",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "grade",
            "from",
            "highschooler",
            "where",
            "name",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"Kyle\"",
                    null
                ]
            ]
        },
        "question": "list grade of high schooler with name equal to value",
        "gold_question": "list grade of high schooler with name equal to value",
        "question_toks": [
            "list",
            "grade",
            "of",
            "high",
            "schooler",
            "with",
            "name",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT name FROM Highschooler WHERE grade  =  10",
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "Highschooler",
            "WHERE",
            "grade",
            "=",
            "10"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "highschooler",
            "where",
            "grade",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ],
                    10.0,
                    null
                ]
            ]
        },
        "question": "list name of high schooler with grade equal to value",
        "gold_question": "list name of high schooler with grade equal to value",
        "question_toks": [
            "list",
            "name",
            "of",
            "high",
            "schooler",
            "with",
            "grade",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT name FROM Highschooler WHERE grade  =  10",
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "Highschooler",
            "WHERE",
            "grade",
            "=",
            "10"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "highschooler",
            "where",
            "grade",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ],
                    10.0,
                    null
                ]
            ]
        },
        "question": "list name of high schooler with grade equal to value",
        "gold_question": "list name of high schooler with grade equal to value",
        "question_toks": [
            "list",
            "name",
            "of",
            "high",
            "schooler",
            "with",
            "grade",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT ID FROM Highschooler WHERE name  =  \"Kyle\"",
        "query_toks": [
            "SELECT",
            "ID",
            "FROM",
            "Highschooler",
            "WHERE",
            "name",
            "=",
            "``",
            "Kyle",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "id",
            "from",
            "highschooler",
            "where",
            "name",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"Kyle\"",
                    null
                ]
            ]
        },
        "question": "list id of high schooler with name equal to value",
        "gold_question": "list id of high schooler with name equal to value",
        "question_toks": [
            "list",
            "id",
            "of",
            "high",
            "schooler",
            "with",
            "name",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT ID FROM Highschooler WHERE name  =  \"Kyle\"",
        "query_toks": [
            "SELECT",
            "ID",
            "FROM",
            "Highschooler",
            "WHERE",
            "name",
            "=",
            "``",
            "Kyle",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "id",
            "from",
            "highschooler",
            "where",
            "name",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"Kyle\"",
                    null
                ]
            ]
        },
        "question": "list id with name equal to value",
        "gold_question": "list id of high schooler with name equal to value",
        "question_toks": [
            "list",
            "id",
            "with",
            "name",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "Highschooler",
            "WHERE",
            "grade",
            "=",
            "9",
            "OR",
            "grade",
            "=",
            "10"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "highschooler",
            "where",
            "grade",
            "=",
            "value",
            "or",
            "grade",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ],
                    9.0,
                    null
                ],
                "or",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ],
                    10.0,
                    null
                ]
            ]
        },
        "question": "list the total number of high schooler with grade equal to value or grade equal to value",
        "gold_question": "list the total number of high schooler with grade equal to value or grade equal to value",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "high",
            "schooler",
            "with",
            "grade",
            "equal",
            "to",
            "value",
            "or",
            "grade",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "Highschooler",
            "WHERE",
            "grade",
            "=",
            "9",
            "OR",
            "grade",
            "=",
            "10"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "highschooler",
            "where",
            "grade",
            "=",
            "value",
            "or",
            "grade",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ],
                    9.0,
                    null
                ],
                "or",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ],
                    10.0,
                    null
                ]
            ]
        },
        "question": "list the total number of high schooler with grade equal to value or grade equal to value",
        "gold_question": "list the total number of high schooler with grade equal to value or grade equal to value",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "high",
            "schooler",
            "with",
            "grade",
            "equal",
            "to",
            "value",
            "or",
            "grade",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT grade ,  count(*) FROM Highschooler GROUP BY grade",
        "query_toks": [
            "SELECT",
            "grade",
            ",",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "Highschooler",
            "GROUP",
            "BY",
            "grade"
        ],
        "query_toks_no_value": [
            "select",
            "grade",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "highschooler",
            "group",
            "by",
            "grade"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    3,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list grade the total number of high schooler for each grade",
        "gold_question": "list grade the total number of high schooler for each grade",
        "question_toks": [
            "list",
            "grade",
            "the",
            "total",
            "number",
            "of",
            "high",
            "schooler",
            "for",
            "each",
            "grade"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT grade ,  count(*) FROM Highschooler GROUP BY grade",
        "query_toks": [
            "SELECT",
            "grade",
            ",",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "Highschooler",
            "GROUP",
            "BY",
            "grade"
        ],
        "query_toks_no_value": [
            "select",
            "grade",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "highschooler",
            "group",
            "by",
            "grade"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    3,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list the total number of high schooler grade of high schooler for each grade",
        "gold_question": "list grade the total number of high schooler for each grade",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "high",
            "schooler",
            "grade",
            "of",
            "high",
            "schooler",
            "for",
            "each",
            "grade"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "grade",
            "FROM",
            "Highschooler",
            "GROUP",
            "BY",
            "grade",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "grade",
            "from",
            "highschooler",
            "group",
            "by",
            "grade",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    3,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of grade of high schooler for each grade ordered by the total number of high schooler descendingly",
        "gold_question": "list top value items of grade of high schooler for each grade ordered by the total number of high schooler descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "grade",
            "of",
            "high",
            "schooler",
            "for",
            "each",
            "grade",
            "ordered",
            "by",
            "the",
            "total",
            "number",
            "of",
            "high",
            "schooler",
            "descendingly"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "grade",
            "FROM",
            "Highschooler",
            "GROUP",
            "BY",
            "grade",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "grade",
            "from",
            "highschooler",
            "group",
            "by",
            "grade",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    3,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of grade of high schooler for each grade ordered by the total number of high schooler descendingly",
        "gold_question": "list top value items of grade of high schooler for each grade ordered by the total number of high schooler descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "grade",
            "of",
            "high",
            "schooler",
            "for",
            "each",
            "grade",
            "ordered",
            "by",
            "the",
            "total",
            "number",
            "of",
            "high",
            "schooler",
            "descendingly"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4",
        "query_toks": [
            "SELECT",
            "grade",
            "FROM",
            "Highschooler",
            "GROUP",
            "BY",
            "grade",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "4"
        ],
        "query_toks_no_value": [
            "select",
            "grade",
            "from",
            "highschooler",
            "group",
            "by",
            "grade",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    3,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    5,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    4.0,
                    null
                ]
            ],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list grade of high schooler for each grade that have the total number of high schooler greater than or equal to value",
        "gold_question": "list grade of high schooler for each grade that have the total number of high schooler greater than or equal to value",
        "question_toks": [
            "list",
            "grade",
            "of",
            "high",
            "schooler",
            "for",
            "each",
            "grade",
            "that",
            "have",
            "the",
            "total",
            "number",
            "of",
            "high",
            "schooler",
            "greater",
            "than",
            "or",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4",
        "query_toks": [
            "SELECT",
            "grade",
            "FROM",
            "Highschooler",
            "GROUP",
            "BY",
            "grade",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "4"
        ],
        "query_toks_no_value": [
            "select",
            "grade",
            "from",
            "highschooler",
            "group",
            "by",
            "grade",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    3,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    5,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    4.0,
                    null
                ]
            ],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list grade of high schooler for each grade that have the total number of high schooler greater than or equal to value",
        "gold_question": "list grade of high schooler for each grade that have the total number of high schooler greater than or equal to value",
        "question_toks": [
            "list",
            "grade",
            "of",
            "high",
            "schooler",
            "for",
            "each",
            "grade",
            "that",
            "have",
            "the",
            "total",
            "number",
            "of",
            "high",
            "schooler",
            "greater",
            "than",
            "or",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT student_id ,  count(*) FROM Friend GROUP BY student_id",
        "query_toks": [
            "SELECT",
            "student_id",
            ",",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "Friend",
            "GROUP",
            "BY",
            "student_id"
        ],
        "query_toks_no_value": [
            "select",
            "student_id",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "friend",
            "group",
            "by",
            "student_id"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    4,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list student id the total number of friend for each student id",
        "gold_question": "list student id the total number of friend for each student id",
        "question_toks": [
            "list",
            "student",
            "id",
            "the",
            "total",
            "number",
            "of",
            "friend",
            "for",
            "each",
            "student",
            "id"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT student_id ,  count(*) FROM Friend GROUP BY student_id",
        "query_toks": [
            "SELECT",
            "student_id",
            ",",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "Friend",
            "GROUP",
            "BY",
            "student_id"
        ],
        "query_toks_no_value": [
            "select",
            "student_id",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "friend",
            "group",
            "by",
            "student_id"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    4,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list the total number of friend",
        "gold_question": "list student id the total number of friend for each student id",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "friend"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT T2.name ,  count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id",
        "query_toks": [
            "SELECT",
            "T2.name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "Friend",
            "AS",
            "T1",
            "JOIN",
            "Highschooler",
            "AS",
            "T2",
            "ON",
            "T1.student_id",
            "=",
            "T2.id",
            "GROUP",
            "BY",
            "T1.student_id"
        ],
        "query_toks_no_value": [
            "select",
            "t2",
            ".",
            "name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "friend",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "student_id",
            "=",
            "t2",
            ".",
            "id",
            "group",
            "by",
            "t1",
            ".",
            "student_id"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    4,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list name of friend the total number of friend for each name of high schooler",
        "gold_question": "list name of friend the total number of friend for each student id of friend",
        "question_toks": [
            "list",
            "name",
            "of",
            "friend",
            "the",
            "total",
            "number",
            "of",
            "friend",
            "for",
            "each",
            "name",
            "of",
            "high",
            "schooler"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT T2.name ,  count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id",
        "query_toks": [
            "SELECT",
            "T2.name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "Friend",
            "AS",
            "T1",
            "JOIN",
            "Highschooler",
            "AS",
            "T2",
            "ON",
            "T1.student_id",
            "=",
            "T2.id",
            "GROUP",
            "BY",
            "T1.student_id"
        ],
        "query_toks_no_value": [
            "select",
            "t2",
            ".",
            "name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "friend",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "student_id",
            "=",
            "t2",
            ".",
            "id",
            "group",
            "by",
            "t1",
            ".",
            "student_id"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    4,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list the total number of friend name of high schooler for each name of high schooler",
        "gold_question": "list name of friend the total number of friend for each student id of friend",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "friend",
            "name",
            "of",
            "high",
            "schooler",
            "for",
            "each",
            "name",
            "of",
            "high",
            "schooler"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T2.name",
            "FROM",
            "Friend",
            "AS",
            "T1",
            "JOIN",
            "Highschooler",
            "AS",
            "T2",
            "ON",
            "T1.student_id",
            "=",
            "T2.id",
            "GROUP",
            "BY",
            "T1.student_id",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t2",
            ".",
            "name",
            "from",
            "friend",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "student_id",
            "=",
            "t2",
            ".",
            "id",
            "group",
            "by",
            "t1",
            ".",
            "student_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    4,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of name of high schooler for each friend id of friend ordered by the total number of friend descendingly",
        "gold_question": "list top value items of name of high schooler for each student id of friend ordered by the total number of friend descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "name",
            "of",
            "high",
            "schooler",
            "for",
            "each",
            "friend",
            "id",
            "of",
            "friend",
            "ordered",
            "by",
            "the",
            "total",
            "number",
            "of",
            "friend",
            "descendingly"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T2.name",
            "FROM",
            "Friend",
            "AS",
            "T1",
            "JOIN",
            "Highschooler",
            "AS",
            "T2",
            "ON",
            "T1.student_id",
            "=",
            "T2.id",
            "GROUP",
            "BY",
            "T1.student_id",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t2",
            ".",
            "name",
            "from",
            "friend",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "student_id",
            "=",
            "t2",
            ".",
            "id",
            "group",
            "by",
            "t1",
            ".",
            "student_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    4,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of name of high schooler for each student id of friend ordered by the total number of friend descendingly",
        "gold_question": "list top value items of name of high schooler for each student id of friend ordered by the total number of friend descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "name",
            "of",
            "high",
            "schooler",
            "for",
            "each",
            "student",
            "id",
            "of",
            "friend",
            "ordered",
            "by",
            "the",
            "total",
            "number",
            "of",
            "friend",
            "descendingly"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  3",
        "query_toks": [
            "SELECT",
            "T2.name",
            "FROM",
            "Friend",
            "AS",
            "T1",
            "JOIN",
            "Highschooler",
            "AS",
            "T2",
            "ON",
            "T1.student_id",
            "=",
            "T2.id",
            "GROUP",
            "BY",
            "T1.student_id",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "t2",
            ".",
            "name",
            "from",
            "friend",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "student_id",
            "=",
            "t2",
            ".",
            "id",
            "group",
            "by",
            "t1",
            ".",
            "student_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    4,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    5,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list name of high schooler for each student id of friend that have the total number of friend greater than or equal to value",
        "gold_question": "list name of high schooler for each student id of friend that have the total number of friend greater than or equal to value",
        "question_toks": [
            "list",
            "name",
            "of",
            "high",
            "schooler",
            "for",
            "each",
            "student",
            "id",
            "of",
            "friend",
            "that",
            "have",
            "the",
            "total",
            "number",
            "of",
            "friend",
            "greater",
            "than",
            "or",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  3",
        "query_toks": [
            "SELECT",
            "T2.name",
            "FROM",
            "Friend",
            "AS",
            "T1",
            "JOIN",
            "Highschooler",
            "AS",
            "T2",
            "ON",
            "T1.student_id",
            "=",
            "T2.id",
            "GROUP",
            "BY",
            "T1.student_id",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "t2",
            ".",
            "name",
            "from",
            "friend",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "student_id",
            "=",
            "t2",
            ".",
            "id",
            "group",
            "by",
            "t1",
            ".",
            "student_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    4,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    5,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list name of high schooler for each student id of friend that have the total number of friend greater than or equal to value",
        "gold_question": "list name of high schooler for each student id of friend that have the total number of friend greater than or equal to value",
        "question_toks": [
            "list",
            "name",
            "of",
            "high",
            "schooler",
            "for",
            "each",
            "student",
            "id",
            "of",
            "friend",
            "that",
            "have",
            "the",
            "total",
            "number",
            "of",
            "friend",
            "greater",
            "than",
            "or",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  \"Kyle\"",
        "query_toks": [
            "SELECT",
            "T3.name",
            "FROM",
            "Friend",
            "AS",
            "T1",
            "JOIN",
            "Highschooler",
            "AS",
            "T2",
            "ON",
            "T1.student_id",
            "=",
            "T2.id",
            "JOIN",
            "Highschooler",
            "AS",
            "T3",
            "ON",
            "T1.friend_id",
            "=",
            "T3.id",
            "WHERE",
            "T2.name",
            "=",
            "``",
            "Kyle",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "t3",
            ".",
            "name",
            "from",
            "friend",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "student_id",
            "=",
            "t2",
            ".",
            "id",
            "join",
            "highschooler",
            "as",
            "t3",
            "on",
            "t1",
            ".",
            "friend_id",
            "=",
            "t3",
            ".",
            "id",
            "where",
            "t2",
            ".",
            "name",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"Kyle\"",
                    null
                ]
            ]
        },
        "question": "list name of high schooler with name of high schooler equal to value",
        "gold_question": "list name of high schooler with name of high schooler equal to value",
        "question_toks": [
            "list",
            "name",
            "of",
            "high",
            "schooler",
            "with",
            "name",
            "of",
            "high",
            "schooler",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  \"Kyle\"",
        "query_toks": [
            "SELECT",
            "T3.name",
            "FROM",
            "Friend",
            "AS",
            "T1",
            "JOIN",
            "Highschooler",
            "AS",
            "T2",
            "ON",
            "T1.student_id",
            "=",
            "T2.id",
            "JOIN",
            "Highschooler",
            "AS",
            "T3",
            "ON",
            "T1.friend_id",
            "=",
            "T3.id",
            "WHERE",
            "T2.name",
            "=",
            "``",
            "Kyle",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "t3",
            ".",
            "name",
            "from",
            "friend",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "student_id",
            "=",
            "t2",
            ".",
            "id",
            "join",
            "highschooler",
            "as",
            "t3",
            "on",
            "t1",
            ".",
            "friend_id",
            "=",
            "t3",
            ".",
            "id",
            "where",
            "t2",
            ".",
            "name",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"Kyle\"",
                    null
                ]
            ]
        },
        "question": "list friend id of friend with name of high schooler equal to value",
        "gold_question": "list name of high schooler with name of high schooler equal to value",
        "question_toks": [
            "list",
            "friend",
            "id",
            "of",
            "friend",
            "with",
            "name",
            "of",
            "high",
            "schooler",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"Kyle\"",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "Friend",
            "AS",
            "T1",
            "JOIN",
            "Highschooler",
            "AS",
            "T2",
            "ON",
            "T1.student_id",
            "=",
            "T2.id",
            "WHERE",
            "T2.name",
            "=",
            "``",
            "Kyle",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "friend",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "student_id",
            "=",
            "t2",
            ".",
            "id",
            "where",
            "t2",
            ".",
            "name",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"Kyle\"",
                    null
                ]
            ]
        },
        "question": "list the number of friend id of friend with name of high schooler equal to value",
        "gold_question": "list the total number of high schooler with name of high schooler equal to value",
        "question_toks": [
            "list",
            "the",
            "number",
            "of",
            "friend",
            "id",
            "of",
            "friend",
            "with",
            "name",
            "of",
            "high",
            "schooler",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"Kyle\"",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "Friend",
            "AS",
            "T1",
            "JOIN",
            "Highschooler",
            "AS",
            "T2",
            "ON",
            "T1.student_id",
            "=",
            "T2.id",
            "WHERE",
            "T2.name",
            "=",
            "``",
            "Kyle",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "friend",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "student_id",
            "=",
            "t2",
            ".",
            "id",
            "where",
            "t2",
            ".",
            "name",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"Kyle\"",
                    null
                ]
            ]
        },
        "question": "list the total number of high schooler with name of high schooler equal to value",
        "gold_question": "list the total number of high schooler with name of high schooler equal to value",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "high",
            "schooler",
            "with",
            "name",
            "of",
            "high",
            "schooler",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend",
        "query_toks": [
            "SELECT",
            "id",
            "FROM",
            "Highschooler",
            "EXCEPT",
            "SELECT",
            "student_id",
            "FROM",
            "Friend"
        ],
        "query_toks_no_value": [
            "select",
            "id",
            "from",
            "highschooler",
            "except",
            "select",
            "student_id",
            "from",
            "friend"
        ],
        "sql": {
            "except": {
                "except": null,
                "from": {
                    "conds": [],
                    "table_units": [
                        [
                            "table_unit",
                            1
                        ]
                    ]
                },
                "groupby": [],
                "having": [],
                "intersect": null,
                "limit": null,
                "orderby": [],
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    4,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "union": null,
                "where": []
            },
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list student id except that list student id of friend",
        "gold_question": "list id of high schooler except that list student id of friend",
        "question_toks": [
            "list",
            "student",
            "id",
            "except",
            "that",
            "list",
            "student",
            "id",
            "of",
            "friend"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend",
        "query_toks": [
            "SELECT",
            "id",
            "FROM",
            "Highschooler",
            "EXCEPT",
            "SELECT",
            "student_id",
            "FROM",
            "Friend"
        ],
        "query_toks_no_value": [
            "select",
            "id",
            "from",
            "highschooler",
            "except",
            "select",
            "student_id",
            "from",
            "friend"
        ],
        "sql": {
            "except": {
                "except": null,
                "from": {
                    "conds": [],
                    "table_units": [
                        [
                            "table_unit",
                            1
                        ]
                    ]
                },
                "groupby": [],
                "having": [],
                "intersect": null,
                "limit": null,
                "orderby": [],
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    4,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "union": null,
                "where": []
            },
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list student id except that list student id of friend",
        "gold_question": "list id of high schooler except that list student id of friend",
        "question_toks": [
            "list",
            "student",
            "id",
            "except",
            "that",
            "list",
            "student",
            "id",
            "of",
            "friend"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id",
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "Highschooler",
            "EXCEPT",
            "SELECT",
            "T2.name",
            "FROM",
            "Friend",
            "AS",
            "T1",
            "JOIN",
            "Highschooler",
            "AS",
            "T2",
            "ON",
            "T1.student_id",
            "=",
            "T2.id"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "highschooler",
            "except",
            "select",
            "t2",
            ".",
            "name",
            "from",
            "friend",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "student_id",
            "=",
            "t2",
            ".",
            "id"
        ],
        "sql": {
            "except": {
                "except": null,
                "from": {
                    "conds": [
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    4,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ],
                    "table_units": [
                        [
                            "table_unit",
                            1
                        ],
                        [
                            "table_unit",
                            0
                        ]
                    ]
                },
                "groupby": [],
                "having": [],
                "intersect": null,
                "limit": null,
                "orderby": [],
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    2,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "union": null,
                "where": []
            },
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list name of high schooler with student id that is not in ( student id of friend )",
        "gold_question": "list name of high schooler except that list name of high schooler",
        "question_toks": [
            "list",
            "name",
            "of",
            "high",
            "schooler",
            "with",
            "student",
            "id",
            "that",
            "is",
            "not",
            "in",
            "(",
            "student",
            "id",
            "of",
            "friend",
            ")"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id",
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "Highschooler",
            "EXCEPT",
            "SELECT",
            "T2.name",
            "FROM",
            "Friend",
            "AS",
            "T1",
            "JOIN",
            "Highschooler",
            "AS",
            "T2",
            "ON",
            "T1.student_id",
            "=",
            "T2.id"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "highschooler",
            "except",
            "select",
            "t2",
            ".",
            "name",
            "from",
            "friend",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "student_id",
            "=",
            "t2",
            ".",
            "id"
        ],
        "sql": {
            "except": {
                "except": null,
                "from": {
                    "conds": [
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    4,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ],
                    "table_units": [
                        [
                            "table_unit",
                            1
                        ],
                        [
                            "table_unit",
                            0
                        ]
                    ]
                },
                "groupby": [],
                "having": [],
                "intersect": null,
                "limit": null,
                "orderby": [],
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    2,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "union": null,
                "where": []
            },
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list name of high schooler with student id that is not in ( student id of friend )",
        "gold_question": "list name of high schooler except that list name of high schooler",
        "question_toks": [
            "list",
            "name",
            "of",
            "high",
            "schooler",
            "with",
            "student",
            "id",
            "that",
            "is",
            "not",
            "in",
            "(",
            "student",
            "id",
            "of",
            "friend",
            ")"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes",
        "query_toks": [
            "SELECT",
            "student_id",
            "FROM",
            "Friend",
            "INTERSECT",
            "SELECT",
            "liked_id",
            "FROM",
            "Likes"
        ],
        "query_toks_no_value": [
            "select",
            "student_id",
            "from",
            "friend",
            "intersect",
            "select",
            "liked_id",
            "from",
            "likes"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": {
                "except": null,
                "from": {
                    "conds": [],
                    "table_units": [
                        [
                            "table_unit",
                            2
                        ]
                    ]
                },
                "groupby": [],
                "having": [],
                "intersect": null,
                "limit": null,
                "orderby": [],
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    7,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "union": null,
                "where": []
            },
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list student id of friend and list liked id of like",
        "gold_question": "list student id of friend and list liked id of like",
        "question_toks": [
            "list",
            "student",
            "id",
            "of",
            "friend",
            "and",
            "list",
            "liked",
            "id",
            "of",
            "like"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes",
        "query_toks": [
            "SELECT",
            "student_id",
            "FROM",
            "Friend",
            "INTERSECT",
            "SELECT",
            "liked_id",
            "FROM",
            "Likes"
        ],
        "query_toks_no_value": [
            "select",
            "student_id",
            "from",
            "friend",
            "intersect",
            "select",
            "liked_id",
            "from",
            "likes"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": {
                "except": null,
                "from": {
                    "conds": [],
                    "table_units": [
                        [
                            "table_unit",
                            2
                        ]
                    ]
                },
                "groupby": [],
                "having": [],
                "intersect": null,
                "limit": null,
                "orderby": [],
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    7,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "union": null,
                "where": []
            },
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list student id of friend and list student id of like",
        "gold_question": "list student id of friend and list liked id of like",
        "question_toks": [
            "list",
            "student",
            "id",
            "of",
            "friend",
            "and",
            "list",
            "student",
            "id",
            "of",
            "like"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id",
        "query_toks": [
            "SELECT",
            "T2.name",
            "FROM",
            "Friend",
            "AS",
            "T1",
            "JOIN",
            "Highschooler",
            "AS",
            "T2",
            "ON",
            "T1.student_id",
            "=",
            "T2.id",
            "INTERSECT",
            "SELECT",
            "T2.name",
            "FROM",
            "Likes",
            "AS",
            "T1",
            "JOIN",
            "Highschooler",
            "AS",
            "T2",
            "ON",
            "T1.liked_id",
            "=",
            "T2.id"
        ],
        "query_toks_no_value": [
            "select",
            "t2",
            ".",
            "name",
            "from",
            "friend",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "student_id",
            "=",
            "t2",
            ".",
            "id",
            "intersect",
            "select",
            "t2",
            ".",
            "name",
            "from",
            "likes",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "liked_id",
            "=",
            "t2",
            ".",
            "id"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": {
                "except": null,
                "from": {
                    "conds": [
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    7,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ],
                    "table_units": [
                        [
                            "table_unit",
                            2
                        ],
                        [
                            "table_unit",
                            0
                        ]
                    ]
                },
                "groupby": [],
                "having": [],
                "intersect": null,
                "limit": null,
                "orderby": [],
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    2,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "union": null,
                "where": []
            },
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list name of high schooler and list student id of like",
        "gold_question": "list name of high schooler and list name of high schooler",
        "question_toks": [
            "list",
            "name",
            "of",
            "high",
            "schooler",
            "and",
            "list",
            "student",
            "id",
            "of",
            "like"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id",
        "query_toks": [
            "SELECT",
            "T2.name",
            "FROM",
            "Friend",
            "AS",
            "T1",
            "JOIN",
            "Highschooler",
            "AS",
            "T2",
            "ON",
            "T1.student_id",
            "=",
            "T2.id",
            "INTERSECT",
            "SELECT",
            "T2.name",
            "FROM",
            "Likes",
            "AS",
            "T1",
            "JOIN",
            "Highschooler",
            "AS",
            "T2",
            "ON",
            "T1.liked_id",
            "=",
            "T2.id"
        ],
        "query_toks_no_value": [
            "select",
            "t2",
            ".",
            "name",
            "from",
            "friend",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "student_id",
            "=",
            "t2",
            ".",
            "id",
            "intersect",
            "select",
            "t2",
            ".",
            "name",
            "from",
            "likes",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "liked_id",
            "=",
            "t2",
            ".",
            "id"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": {
                "except": null,
                "from": {
                    "conds": [
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    7,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ],
                    "table_units": [
                        [
                            "table_unit",
                            2
                        ],
                        [
                            "table_unit",
                            0
                        ]
                    ]
                },
                "groupby": [],
                "having": [],
                "intersect": null,
                "limit": null,
                "orderby": [],
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    2,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "union": null,
                "where": []
            },
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list name of high schooler with liked id that is subset of ( student id of like )",
        "gold_question": "list name of high schooler and list name of high schooler",
        "question_toks": [
            "list",
            "name",
            "of",
            "high",
            "schooler",
            "with",
            "liked",
            "id",
            "that",
            "is",
            "subset",
            "of",
            "(",
            "student",
            "id",
            "of",
            "like",
            ")"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT student_id ,  count(*) FROM Likes GROUP BY student_id",
        "query_toks": [
            "SELECT",
            "student_id",
            ",",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "Likes",
            "GROUP",
            "BY",
            "student_id"
        ],
        "query_toks_no_value": [
            "select",
            "student_id",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "likes",
            "group",
            "by",
            "student_id"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    6,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list the total number of like student id of like for each student id",
        "gold_question": "list student id the total number of like for each student id",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "like",
            "student",
            "id",
            "of",
            "like",
            "for",
            "each",
            "student",
            "id"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT student_id ,  count(*) FROM Likes GROUP BY student_id",
        "query_toks": [
            "SELECT",
            "student_id",
            ",",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "Likes",
            "GROUP",
            "BY",
            "student_id"
        ],
        "query_toks_no_value": [
            "select",
            "student_id",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "likes",
            "group",
            "by",
            "student_id"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    6,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list the total number of like student id of like for each student id",
        "gold_question": "list student id the total number of like for each student id",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "like",
            "student",
            "id",
            "of",
            "like",
            "for",
            "each",
            "student",
            "id"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id",
        "query_toks": [
            "SELECT",
            "T2.name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "Likes",
            "AS",
            "T1",
            "JOIN",
            "Highschooler",
            "AS",
            "T2",
            "ON",
            "T1.student_id",
            "=",
            "T2.id",
            "GROUP",
            "BY",
            "T1.student_id"
        ],
        "query_toks_no_value": [
            "select",
            "t2",
            ".",
            "name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "likes",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "student_id",
            "=",
            "t2",
            ".",
            "id",
            "group",
            "by",
            "t1",
            ".",
            "student_id"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    6,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list name of like the total number of like for each student id of like",
        "gold_question": "list name of like the total number of like for each student id of like",
        "question_toks": [
            "list",
            "name",
            "of",
            "like",
            "the",
            "total",
            "number",
            "of",
            "like",
            "for",
            "each",
            "student",
            "id",
            "of",
            "like"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id",
        "query_toks": [
            "SELECT",
            "T2.name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "Likes",
            "AS",
            "T1",
            "JOIN",
            "Highschooler",
            "AS",
            "T2",
            "ON",
            "T1.student_id",
            "=",
            "T2.id",
            "GROUP",
            "BY",
            "T1.student_id"
        ],
        "query_toks_no_value": [
            "select",
            "t2",
            ".",
            "name",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "likes",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "student_id",
            "=",
            "t2",
            ".",
            "id",
            "group",
            "by",
            "t1",
            ".",
            "student_id"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    6,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list name of like the total number of like for each student id of like",
        "gold_question": "list name of like the total number of like for each student id of like",
        "question_toks": [
            "list",
            "name",
            "of",
            "like",
            "the",
            "total",
            "number",
            "of",
            "like",
            "for",
            "each",
            "student",
            "id",
            "of",
            "like"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T2.name",
            "FROM",
            "Likes",
            "AS",
            "T1",
            "JOIN",
            "Highschooler",
            "AS",
            "T2",
            "ON",
            "T1.student_id",
            "=",
            "T2.id",
            "GROUP",
            "BY",
            "T1.student_id",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t2",
            ".",
            "name",
            "from",
            "likes",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "student_id",
            "=",
            "t2",
            ".",
            "id",
            "group",
            "by",
            "t1",
            ".",
            "student_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    6,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of name of high schooler for each liked id of like ordered by the sum of liked id of like descendingly",
        "gold_question": "list top value items of name of high schooler for each student id of like ordered by the total number of like descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "name",
            "of",
            "high",
            "schooler",
            "for",
            "each",
            "liked",
            "id",
            "of",
            "like",
            "ordered",
            "by",
            "the",
            "sum",
            "of",
            "liked",
            "id",
            "of",
            "like",
            "descendingly"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T2.name",
            "FROM",
            "Likes",
            "AS",
            "T1",
            "JOIN",
            "Highschooler",
            "AS",
            "T2",
            "ON",
            "T1.student_id",
            "=",
            "T2.id",
            "GROUP",
            "BY",
            "T1.student_id",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t2",
            ".",
            "name",
            "from",
            "likes",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "student_id",
            "=",
            "t2",
            ".",
            "id",
            "group",
            "by",
            "t1",
            ".",
            "student_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    6,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of name of high schooler for each student id of like ordered by the total number of like descendingly",
        "gold_question": "list top value items of name of high schooler for each student id of like ordered by the total number of like descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "name",
            "of",
            "high",
            "schooler",
            "for",
            "each",
            "student",
            "id",
            "of",
            "like",
            "ordered",
            "by",
            "the",
            "total",
            "number",
            "of",
            "like",
            "descendingly"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2",
        "query_toks": [
            "SELECT",
            "T2.name",
            "FROM",
            "Likes",
            "AS",
            "T1",
            "JOIN",
            "Highschooler",
            "AS",
            "T2",
            "ON",
            "T1.student_id",
            "=",
            "T2.id",
            "GROUP",
            "BY",
            "T1.student_id",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "t2",
            ".",
            "name",
            "from",
            "likes",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "student_id",
            "=",
            "t2",
            ".",
            "id",
            "group",
            "by",
            "t1",
            ".",
            "student_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    6,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    5,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list name of high schooler for each student id of like that have the total number of like greater than or equal to value",
        "gold_question": "list name of high schooler for each student id of like that have the total number of like greater than or equal to value",
        "question_toks": [
            "list",
            "name",
            "of",
            "high",
            "schooler",
            "for",
            "each",
            "student",
            "id",
            "of",
            "like",
            "that",
            "have",
            "the",
            "total",
            "number",
            "of",
            "like",
            "greater",
            "than",
            "or",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2",
        "query_toks": [
            "SELECT",
            "T2.name",
            "FROM",
            "Likes",
            "AS",
            "T1",
            "JOIN",
            "Highschooler",
            "AS",
            "T2",
            "ON",
            "T1.student_id",
            "=",
            "T2.id",
            "GROUP",
            "BY",
            "T1.student_id",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "t2",
            ".",
            "name",
            "from",
            "likes",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "student_id",
            "=",
            "t2",
            ".",
            "id",
            "group",
            "by",
            "t1",
            ".",
            "student_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    6,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    5,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list name of high schooler for each student id of like that have the total number of like greater than or equal to value",
        "gold_question": "list name of high schooler for each student id of like that have the total number of like greater than or equal to value",
        "question_toks": [
            "list",
            "name",
            "of",
            "high",
            "schooler",
            "for",
            "each",
            "student",
            "id",
            "of",
            "like",
            "that",
            "have",
            "the",
            "total",
            "number",
            "of",
            "like",
            "greater",
            "than",
            "or",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.grade  >  5 GROUP BY T1.student_id HAVING count(*)  >=  2",
        "query_toks": [
            "SELECT",
            "T2.name",
            "FROM",
            "Friend",
            "AS",
            "T1",
            "JOIN",
            "Highschooler",
            "AS",
            "T2",
            "ON",
            "T1.student_id",
            "=",
            "T2.id",
            "WHERE",
            "T2.grade",
            ">",
            "5",
            "GROUP",
            "BY",
            "T1.student_id",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "t2",
            ".",
            "name",
            "from",
            "friend",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "student_id",
            "=",
            "t2",
            ".",
            "id",
            "where",
            "t2",
            ".",
            "grade",
            ">",
            "value",
            "group",
            "by",
            "t1",
            ".",
            "student_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    4,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    5,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ],
                    5.0,
                    null
                ]
            ]
        },
        "question": "list name of high schooler with grade of high schooler greater than value for each student id of friend that have the total number of friend greater than or equal to value",
        "gold_question": "list name of high schooler with grade of high schooler greater than value for each student id of friend that have the total number of friend greater than or equal to value",
        "question_toks": [
            "list",
            "name",
            "of",
            "high",
            "schooler",
            "with",
            "grade",
            "of",
            "high",
            "schooler",
            "greater",
            "than",
            "value",
            "for",
            "each",
            "student",
            "id",
            "of",
            "friend",
            "that",
            "have",
            "the",
            "total",
            "number",
            "of",
            "friend",
            "greater",
            "than",
            "or",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.grade  >  5 GROUP BY T1.student_id HAVING count(*)  >=  2",
        "query_toks": [
            "SELECT",
            "T2.name",
            "FROM",
            "Friend",
            "AS",
            "T1",
            "JOIN",
            "Highschooler",
            "AS",
            "T2",
            "ON",
            "T1.student_id",
            "=",
            "T2.id",
            "WHERE",
            "T2.grade",
            ">",
            "5",
            "GROUP",
            "BY",
            "T1.student_id",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "t2",
            ".",
            "name",
            "from",
            "friend",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "student_id",
            "=",
            "t2",
            ".",
            "id",
            "where",
            "t2",
            ".",
            "grade",
            ">",
            "value",
            "group",
            "by",
            "t1",
            ".",
            "student_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    4,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    5,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ],
                    5.0,
                    null
                ]
            ]
        },
        "question": "list name of high schooler with grade of high schooler greater than value for each student id of friend that have the total number of friend greater than or equal to value",
        "gold_question": "list name of high schooler with grade of high schooler greater than value for each student id of friend that have the total number of friend greater than or equal to value",
        "question_toks": [
            "list",
            "name",
            "of",
            "high",
            "schooler",
            "with",
            "grade",
            "of",
            "high",
            "schooler",
            "greater",
            "than",
            "value",
            "for",
            "each",
            "student",
            "id",
            "of",
            "friend",
            "that",
            "have",
            "the",
            "total",
            "number",
            "of",
            "friend",
            "greater",
            "than",
            "or",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"Kyle\"",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "Likes",
            "AS",
            "T1",
            "JOIN",
            "Highschooler",
            "AS",
            "T2",
            "ON",
            "T1.student_id",
            "=",
            "T2.id",
            "WHERE",
            "T2.name",
            "=",
            "``",
            "Kyle",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "likes",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "student_id",
            "=",
            "t2",
            ".",
            "id",
            "where",
            "t2",
            ".",
            "name",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"Kyle\"",
                    null
                ]
            ]
        },
        "question": "list the number of liked id of like with name of high schooler equal to value",
        "gold_question": "list the total number of high schooler with name of high schooler equal to value",
        "question_toks": [
            "list",
            "the",
            "number",
            "of",
            "liked",
            "id",
            "of",
            "like",
            "with",
            "name",
            "of",
            "high",
            "schooler",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"Kyle\"",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "Likes",
            "AS",
            "T1",
            "JOIN",
            "Highschooler",
            "AS",
            "T2",
            "ON",
            "T1.student_id",
            "=",
            "T2.id",
            "WHERE",
            "T2.name",
            "=",
            "``",
            "Kyle",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "likes",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "student_id",
            "=",
            "t2",
            ".",
            "id",
            "where",
            "t2",
            ".",
            "name",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"Kyle\"",
                    null
                ]
            ]
        },
        "question": "list the total number of high schooler with name of high schooler equal to value",
        "gold_question": "list the total number of high schooler with name of high schooler equal to value",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "high",
            "schooler",
            "with",
            "name",
            "of",
            "high",
            "schooler",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)",
        "query_toks": [
            "SELECT",
            "avg",
            "(",
            "grade",
            ")",
            "FROM",
            "Highschooler",
            "WHERE",
            "id",
            "IN",
            "(",
            "SELECT",
            "T1.student_id",
            "FROM",
            "Friend",
            "AS",
            "T1",
            "JOIN",
            "Highschooler",
            "AS",
            "T2",
            "ON",
            "T1.student_id",
            "=",
            "T2.id",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "grade",
            ")",
            "from",
            "highschooler",
            "where",
            "id",
            "in",
            "(",
            "select",
            "t1",
            ".",
            "student_id",
            "from",
            "friend",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "student_id",
            "=",
            "t2",
            ".",
            "id",
            ")"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    8,
                    [
                        0,
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [
                                [
                                    false,
                                    2,
                                    [
                                        0,
                                        [
                                            0,
                                            4,
                                            false
                                        ],
                                        null
                                    ],
                                    [
                                        0,
                                        1,
                                        false
                                    ],
                                    null
                                ]
                            ],
                            "table_units": [
                                [
                                    "table_unit",
                                    1
                                ],
                                [
                                    "table_unit",
                                    0
                                ]
                            ]
                        },
                        "groupby": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderby": [],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            4,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": []
                    },
                    null
                ]
            ]
        },
        "question": "list the average of grade of high schooler with student id that is subset of ( student id of friend )",
        "gold_question": "list the average of grade of high schooler with id of high schooler that is subset of ( student id of friend )",
        "question_toks": [
            "list",
            "the",
            "average",
            "of",
            "grade",
            "of",
            "high",
            "schooler",
            "with",
            "student",
            "id",
            "that",
            "is",
            "subset",
            "of",
            "(",
            "student",
            "id",
            "of",
            "friend",
            ")"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)",
        "query_toks": [
            "SELECT",
            "avg",
            "(",
            "grade",
            ")",
            "FROM",
            "Highschooler",
            "WHERE",
            "id",
            "IN",
            "(",
            "SELECT",
            "T1.student_id",
            "FROM",
            "Friend",
            "AS",
            "T1",
            "JOIN",
            "Highschooler",
            "AS",
            "T2",
            "ON",
            "T1.student_id",
            "=",
            "T2.id",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "grade",
            ")",
            "from",
            "highschooler",
            "where",
            "id",
            "in",
            "(",
            "select",
            "t1",
            ".",
            "student_id",
            "from",
            "friend",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "student_id",
            "=",
            "t2",
            ".",
            "id",
            ")"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    8,
                    [
                        0,
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [
                                [
                                    false,
                                    2,
                                    [
                                        0,
                                        [
                                            0,
                                            4,
                                            false
                                        ],
                                        null
                                    ],
                                    [
                                        0,
                                        1,
                                        false
                                    ],
                                    null
                                ]
                            ],
                            "table_units": [
                                [
                                    "table_unit",
                                    1
                                ],
                                [
                                    "table_unit",
                                    0
                                ]
                            ]
                        },
                        "groupby": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderby": [],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            4,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": []
                    },
                    null
                ]
            ]
        },
        "question": "list the average of grade of high schooler with student id that is subset of ( student id of friend )",
        "gold_question": "list the average of grade of high schooler with id of high schooler that is subset of ( student id of friend )",
        "question_toks": [
            "list",
            "the",
            "average",
            "of",
            "grade",
            "of",
            "high",
            "schooler",
            "with",
            "student",
            "id",
            "that",
            "is",
            "subset",
            "of",
            "(",
            "student",
            "id",
            "of",
            "friend",
            ")"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)",
        "query_toks": [
            "SELECT",
            "min",
            "(",
            "grade",
            ")",
            "FROM",
            "Highschooler",
            "WHERE",
            "id",
            "NOT",
            "IN",
            "(",
            "SELECT",
            "T1.student_id",
            "FROM",
            "Friend",
            "AS",
            "T1",
            "JOIN",
            "Highschooler",
            "AS",
            "T2",
            "ON",
            "T1.student_id",
            "=",
            "T2.id",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "min",
            "(",
            "grade",
            ")",
            "from",
            "highschooler",
            "where",
            "id",
            "not",
            "in",
            "(",
            "select",
            "t1",
            ".",
            "student_id",
            "from",
            "friend",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "student_id",
            "=",
            "t2",
            ".",
            "id",
            ")"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    true,
                    8,
                    [
                        0,
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [
                                [
                                    false,
                                    2,
                                    [
                                        0,
                                        [
                                            0,
                                            4,
                                            false
                                        ],
                                        null
                                    ],
                                    [
                                        0,
                                        1,
                                        false
                                    ],
                                    null
                                ]
                            ],
                            "table_units": [
                                [
                                    "table_unit",
                                    1
                                ],
                                [
                                    "table_unit",
                                    0
                                ]
                            ]
                        },
                        "groupby": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderby": [],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            4,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": []
                    },
                    null
                ]
            ]
        },
        "question": "list the minimum of grade of high schooler with student id that is not in ( student id of friend )",
        "gold_question": "list the minimum of grade of high schooler with id of high schooler that is not in ( student id of friend )",
        "question_toks": [
            "list",
            "the",
            "minimum",
            "of",
            "grade",
            "of",
            "high",
            "schooler",
            "with",
            "student",
            "id",
            "that",
            "is",
            "not",
            "in",
            "(",
            "student",
            "id",
            "of",
            "friend",
            ")"
        ]
    },
    {
        "db_id": "network_1",
        "query": "SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)",
        "query_toks": [
            "SELECT",
            "min",
            "(",
            "grade",
            ")",
            "FROM",
            "Highschooler",
            "WHERE",
            "id",
            "NOT",
            "IN",
            "(",
            "SELECT",
            "T1.student_id",
            "FROM",
            "Friend",
            "AS",
            "T1",
            "JOIN",
            "Highschooler",
            "AS",
            "T2",
            "ON",
            "T1.student_id",
            "=",
            "T2.id",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "min",
            "(",
            "grade",
            ")",
            "from",
            "highschooler",
            "where",
            "id",
            "not",
            "in",
            "(",
            "select",
            "t1",
            ".",
            "student_id",
            "from",
            "friend",
            "as",
            "t1",
            "join",
            "highschooler",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "student_id",
            "=",
            "t2",
            ".",
            "id",
            ")"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    true,
                    8,
                    [
                        0,
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [
                                [
                                    false,
                                    2,
                                    [
                                        0,
                                        [
                                            0,
                                            4,
                                            false
                                        ],
                                        null
                                    ],
                                    [
                                        0,
                                        1,
                                        false
                                    ],
                                    null
                                ]
                            ],
                            "table_units": [
                                [
                                    "table_unit",
                                    1
                                ],
                                [
                                    "table_unit",
                                    0
                                ]
                            ]
                        },
                        "groupby": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderby": [],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            4,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": []
                    },
                    null
                ]
            ]
        },
        "question": "list the minimum of grade of high schooler with student id that is not in ( student id of friend )",
        "gold_question": "list the minimum of grade of high schooler with id of high schooler that is not in ( student id of friend )",
        "question_toks": [
            "list",
            "the",
            "minimum",
            "of",
            "grade",
            "of",
            "high",
            "schooler",
            "with",
            "student",
            "id",
            "that",
            "is",
            "not",
            "in",
            "(",
            "student",
            "id",
            "of",
            "friend",
            ")"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT state FROM Owners INTERSECT SELECT state FROM Professionals",
        "query_toks": [
            "SELECT",
            "state",
            "FROM",
            "Owners",
            "INTERSECT",
            "SELECT",
            "state",
            "FROM",
            "Professionals"
        ],
        "query_toks_no_value": [
            "select",
            "state",
            "from",
            "owners",
            "intersect",
            "select",
            "state",
            "from",
            "professionals"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": {
                "except": null,
                "from": {
                    "conds": [],
                    "table_units": [
                        [
                            "table_unit",
                            6
                        ]
                    ]
                },
                "groupby": [],
                "having": [],
                "intersect": null,
                "limit": null,
                "orderby": [],
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    38,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "union": null,
                "where": []
            },
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list state of owner and list state of professional",
        "gold_question": "list state of owner and list state of professional",
        "question_toks": [
            "list",
            "state",
            "of",
            "owner",
            "and",
            "list",
            "state",
            "of",
            "professional"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT state FROM Owners INTERSECT SELECT state FROM Professionals",
        "query_toks": [
            "SELECT",
            "state",
            "FROM",
            "Owners",
            "INTERSECT",
            "SELECT",
            "state",
            "FROM",
            "Professionals"
        ],
        "query_toks_no_value": [
            "select",
            "state",
            "from",
            "owners",
            "intersect",
            "select",
            "state",
            "from",
            "professionals"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": {
                "except": null,
                "from": {
                    "conds": [],
                    "table_units": [
                        [
                            "table_unit",
                            6
                        ]
                    ]
                },
                "groupby": [],
                "having": [],
                "intersect": null,
                "limit": null,
                "orderby": [],
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    38,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "union": null,
                "where": []
            },
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list state of owner and list state of professional",
        "gold_question": "list state of owner and list state of professional",
        "question_toks": [
            "list",
            "state",
            "of",
            "owner",
            "and",
            "list",
            "state",
            "of",
            "professional"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )",
        "query_toks": [
            "SELECT",
            "avg",
            "(",
            "age",
            ")",
            "FROM",
            "Dogs",
            "WHERE",
            "dog_id",
            "IN",
            "(",
            "SELECT",
            "dog_id",
            "FROM",
            "Treatments",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "age",
            ")",
            "from",
            "dogs",
            "where",
            "dog_id",
            "in",
            "(",
            "select",
            "dog_id",
            "from",
            "treatments",
            ")"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                26,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    8,
                    [
                        0,
                        [
                            0,
                            20,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    7
                                ]
                            ]
                        },
                        "groupby": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderby": [],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            45,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": []
                    },
                    null
                ]
            ]
        },
        "question": "list the average of age of dog",
        "gold_question": "list the average of age of dog with dog id that is subset of ( dog id of treatment )",
        "question_toks": [
            "list",
            "the",
            "average",
            "of",
            "age",
            "of",
            "dog"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )",
        "query_toks": [
            "SELECT",
            "avg",
            "(",
            "age",
            ")",
            "FROM",
            "Dogs",
            "WHERE",
            "dog_id",
            "IN",
            "(",
            "SELECT",
            "dog_id",
            "FROM",
            "Treatments",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "age",
            ")",
            "from",
            "dogs",
            "where",
            "dog_id",
            "in",
            "(",
            "select",
            "dog_id",
            "from",
            "treatments",
            ")"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                26,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    8,
                    [
                        0,
                        [
                            0,
                            20,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    7
                                ]
                            ]
                        },
                        "groupby": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderby": [],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            45,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": []
                    },
                    null
                ]
            ]
        },
        "question": "list the average of age of dog",
        "gold_question": "list the average of age of dog with dog id that is subset of ( dog id of treatment )",
        "question_toks": [
            "list",
            "the",
            "average",
            "of",
            "age",
            "of",
            "dog"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2",
        "query_toks": [
            "SELECT",
            "professional_id",
            ",",
            "last_name",
            ",",
            "cell_number",
            "FROM",
            "Professionals",
            "WHERE",
            "state",
            "=",
            "'Indiana",
            "'",
            "UNION",
            "SELECT",
            "T1.professional_id",
            ",",
            "T1.last_name",
            ",",
            "T1.cell_number",
            "FROM",
            "Professionals",
            "AS",
            "T1",
            "JOIN",
            "Treatments",
            "AS",
            "T2",
            "ON",
            "T1.professional_id",
            "=",
            "T2.professional_id",
            "GROUP",
            "BY",
            "T1.professional_id",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "professional_id",
            ",",
            "last_name",
            ",",
            "cell_number",
            "from",
            "professionals",
            "where",
            "state",
            "=",
            "value",
            "union",
            "select",
            "t1",
            ".",
            "professional_id",
            ",",
            "t1",
            ".",
            "last_name",
            ",",
            "t1",
            ".",
            "cell_number",
            "from",
            "professionals",
            "as",
            "t1",
            "join",
            "treatments",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "professional_id",
            "=",
            "t2",
            ".",
            "professional_id",
            "group",
            "by",
            "t1",
            ".",
            "professional_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                33,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                40,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                43,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": {
                "except": null,
                "from": {
                    "conds": [
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    33,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                46,
                                false
                            ],
                            null
                        ]
                    ],
                    "table_units": [
                        [
                            "table_unit",
                            6
                        ],
                        [
                            "table_unit",
                            7
                        ]
                    ]
                },
                "groupby": [
                    [
                        0,
                        33,
                        false
                    ]
                ],
                "having": [
                    [
                        false,
                        3,
                        [
                            0,
                            [
                                3,
                                0,
                                false
                            ],
                            null
                        ],
                        2.0,
                        null
                    ]
                ],
                "intersect": null,
                "limit": null,
                "orderby": [],
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    33,
                                    false
                                ],
                                null
                            ]
                        ],
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    40,
                                    false
                                ],
                                null
                            ]
                        ],
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    43,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "union": null,
                "where": []
            },
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            38,
                            false
                        ],
                        null
                    ],
                    "\"Indiana\"",
                    null
                ]
            ]
        },
        "question": "list professional id of treatment last name of professional cell number of professional with state of professional equal to value or list professional id of treatment that have the total number of treatment greater than value",
        "gold_question": "list professional id of professional last name of professional cell number of professional with state of professional equal to value or list professional id of professional last name of professional cell number of professional for each professional id of professional that have the total number of professional greater than value",
        "question_toks": [
            "list",
            "professional",
            "id",
            "of",
            "treatment",
            "last",
            "name",
            "of",
            "professional",
            "cell",
            "number",
            "of",
            "professional",
            "with",
            "state",
            "of",
            "professional",
            "equal",
            "to",
            "value",
            "or",
            "list",
            "professional",
            "id",
            "of",
            "treatment",
            "that",
            "have",
            "the",
            "total",
            "number",
            "of",
            "treatment",
            "greater",
            "than",
            "value"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2",
        "query_toks": [
            "SELECT",
            "professional_id",
            ",",
            "last_name",
            ",",
            "cell_number",
            "FROM",
            "Professionals",
            "WHERE",
            "state",
            "=",
            "'Indiana",
            "'",
            "UNION",
            "SELECT",
            "T1.professional_id",
            ",",
            "T1.last_name",
            ",",
            "T1.cell_number",
            "FROM",
            "Professionals",
            "AS",
            "T1",
            "JOIN",
            "Treatments",
            "AS",
            "T2",
            "ON",
            "T1.professional_id",
            "=",
            "T2.professional_id",
            "GROUP",
            "BY",
            "T1.professional_id",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "professional_id",
            ",",
            "last_name",
            ",",
            "cell_number",
            "from",
            "professionals",
            "where",
            "state",
            "=",
            "value",
            "union",
            "select",
            "t1",
            ".",
            "professional_id",
            ",",
            "t1",
            ".",
            "last_name",
            ",",
            "t1",
            ".",
            "cell_number",
            "from",
            "professionals",
            "as",
            "t1",
            "join",
            "treatments",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "professional_id",
            "=",
            "t2",
            ".",
            "professional_id",
            "group",
            "by",
            "t1",
            ".",
            "professional_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                33,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                40,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                43,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": {
                "except": null,
                "from": {
                    "conds": [
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    33,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                46,
                                false
                            ],
                            null
                        ]
                    ],
                    "table_units": [
                        [
                            "table_unit",
                            6
                        ],
                        [
                            "table_unit",
                            7
                        ]
                    ]
                },
                "groupby": [
                    [
                        0,
                        33,
                        false
                    ]
                ],
                "having": [
                    [
                        false,
                        3,
                        [
                            0,
                            [
                                3,
                                0,
                                false
                            ],
                            null
                        ],
                        2.0,
                        null
                    ]
                ],
                "intersect": null,
                "limit": null,
                "orderby": [],
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    33,
                                    false
                                ],
                                null
                            ]
                        ],
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    40,
                                    false
                                ],
                                null
                            ]
                        ],
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    43,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "union": null,
                "where": []
            },
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            38,
                            false
                        ],
                        null
                    ],
                    "\"Indiana\"",
                    null
                ]
            ]
        },
        "question": "list professional id of professional last name of professional cell number of professional with state of professional equal to value or state of professional equal to value",
        "gold_question": "list professional id of professional last name of professional cell number of professional with state of professional equal to value or list professional id of professional last name of professional cell number of professional for each professional id of professional that have the total number of professional greater than value",
        "question_toks": [
            "list",
            "professional",
            "id",
            "of",
            "professional",
            "last",
            "name",
            "of",
            "professional",
            "cell",
            "number",
            "of",
            "professional",
            "with",
            "state",
            "of",
            "professional",
            "equal",
            "to",
            "value",
            "or",
            "state",
            "of",
            "professional",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "select name from dogs where dog_id not in ( select dog_id from treatments group by dog_id having sum(cost_of_treatment)  >  1000 )",
        "query_toks": [
            "select",
            "name",
            "from",
            "dogs",
            "where",
            "dog_id",
            "not",
            "in",
            "(",
            "select",
            "dog_id",
            "from",
            "treatments",
            "group",
            "by",
            "dog_id",
            "having",
            "sum",
            "(",
            "cost_of_treatment",
            ")",
            ">",
            "1000",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "dogs",
            "where",
            "dog_id",
            "not",
            "in",
            "(",
            "select",
            "dog_id",
            "from",
            "treatments",
            "group",
            "by",
            "dog_id",
            "having",
            "sum",
            "(",
            "cost_of_treatment",
            ")",
            ">",
            "value",
            ")"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                25,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    true,
                    8,
                    [
                        0,
                        [
                            0,
                            20,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    7
                                ]
                            ]
                        },
                        "groupby": [
                            [
                                0,
                                45,
                                false
                            ]
                        ],
                        "having": [
                            [
                                false,
                                3,
                                [
                                    0,
                                    [
                                        4,
                                        49,
                                        false
                                    ],
                                    null
                                ],
                                1000.0,
                                null
                            ]
                        ],
                        "intersect": null,
                        "limit": null,
                        "orderby": [],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            45,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": []
                    },
                    null
                ]
            ]
        },
        "question": "list name of dog except that list name of dog with cost of treatment of treatment greater than or equal to value",
        "gold_question": "list name of dog with dog id that is not in ( dog id of treatment for each dog id that have the sum of cost of treatment greater than value )",
        "question_toks": [
            "list",
            "name",
            "of",
            "dog",
            "except",
            "that",
            "list",
            "name",
            "of",
            "dog",
            "with",
            "cost",
            "of",
            "treatment",
            "of",
            "treatment",
            "greater",
            "than",
            "or",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "select name from dogs where dog_id not in ( select dog_id from treatments group by dog_id having sum(cost_of_treatment)  >  1000 )",
        "query_toks": [
            "select",
            "name",
            "from",
            "dogs",
            "where",
            "dog_id",
            "not",
            "in",
            "(",
            "select",
            "dog_id",
            "from",
            "treatments",
            "group",
            "by",
            "dog_id",
            "having",
            "sum",
            "(",
            "cost_of_treatment",
            ")",
            ">",
            "1000",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "dogs",
            "where",
            "dog_id",
            "not",
            "in",
            "(",
            "select",
            "dog_id",
            "from",
            "treatments",
            "group",
            "by",
            "dog_id",
            "having",
            "sum",
            "(",
            "cost_of_treatment",
            ")",
            ">",
            "value",
            ")"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                25,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    true,
                    8,
                    [
                        0,
                        [
                            0,
                            20,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    7
                                ]
                            ]
                        },
                        "groupby": [
                            [
                                0,
                                45,
                                false
                            ]
                        ],
                        "having": [
                            [
                                false,
                                3,
                                [
                                    0,
                                    [
                                        4,
                                        49,
                                        false
                                    ],
                                    null
                                ],
                                1000.0,
                                null
                            ]
                        ],
                        "intersect": null,
                        "limit": null,
                        "orderby": [],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            45,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": []
                    },
                    null
                ]
            ]
        },
        "question": "list name of dog with cost of treatment of treatment greater than or equal to value",
        "gold_question": "list name of dog with dog id that is not in ( dog id of treatment for each dog id that have the sum of cost of treatment greater than value )",
        "question_toks": [
            "list",
            "name",
            "of",
            "dog",
            "with",
            "cost",
            "of",
            "treatment",
            "of",
            "treatment",
            "greater",
            "than",
            "or",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs",
        "query_toks": [
            "SELECT",
            "first_name",
            "FROM",
            "Professionals",
            "UNION",
            "SELECT",
            "first_name",
            "FROM",
            "Owners",
            "EXCEPT",
            "SELECT",
            "name",
            "FROM",
            "Dogs"
        ],
        "query_toks_no_value": [
            "select",
            "first_name",
            "from",
            "professionals",
            "union",
            "select",
            "first_name",
            "from",
            "owners",
            "except",
            "select",
            "name",
            "from",
            "dogs"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                35,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": {
                "except": {
                    "except": null,
                    "from": {
                        "conds": [],
                        "table_units": [
                            [
                                "table_unit",
                                5
                            ]
                        ]
                    },
                    "groupby": [],
                    "having": [],
                    "intersect": null,
                    "limit": null,
                    "orderby": [],
                    "select": [
                        false,
                        [
                            [
                                0,
                                [
                                    0,
                                    [
                                        0,
                                        25,
                                        false
                                    ],
                                    null
                                ]
                            ]
                        ]
                    ],
                    "union": null,
                    "where": []
                },
                "from": {
                    "conds": [],
                    "table_units": [
                        [
                            "table_unit",
                            4
                        ]
                    ]
                },
                "groupby": [],
                "having": [],
                "intersect": null,
                "limit": null,
                "orderby": [],
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    11,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "union": null,
                "where": []
            },
            "where": []
        },
        "question": "list first name of professional except that list name of dog",
        "gold_question": "list first name of professional or list first name of owner",
        "question_toks": [
            "list",
            "first",
            "name",
            "of",
            "professional",
            "except",
            "that",
            "list",
            "name",
            "of",
            "dog"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs",
        "query_toks": [
            "SELECT",
            "first_name",
            "FROM",
            "Professionals",
            "UNION",
            "SELECT",
            "first_name",
            "FROM",
            "Owners",
            "EXCEPT",
            "SELECT",
            "name",
            "FROM",
            "Dogs"
        ],
        "query_toks_no_value": [
            "select",
            "first_name",
            "from",
            "professionals",
            "union",
            "select",
            "first_name",
            "from",
            "owners",
            "except",
            "select",
            "name",
            "from",
            "dogs"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                35,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": {
                "except": {
                    "except": null,
                    "from": {
                        "conds": [],
                        "table_units": [
                            [
                                "table_unit",
                                5
                            ]
                        ]
                    },
                    "groupby": [],
                    "having": [],
                    "intersect": null,
                    "limit": null,
                    "orderby": [],
                    "select": [
                        false,
                        [
                            [
                                0,
                                [
                                    0,
                                    [
                                        0,
                                        25,
                                        false
                                    ],
                                    null
                                ]
                            ]
                        ]
                    ],
                    "union": null,
                    "where": []
                },
                "from": {
                    "conds": [],
                    "table_units": [
                        [
                            "table_unit",
                            4
                        ]
                    ]
                },
                "groupby": [],
                "having": [],
                "intersect": null,
                "limit": null,
                "orderby": [],
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    11,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "union": null,
                "where": []
            },
            "where": []
        },
        "question": "list first name of professional except that list name of dog",
        "gold_question": "list first name of professional or list first name of owner",
        "question_toks": [
            "list",
            "first",
            "name",
            "of",
            "professional",
            "except",
            "that",
            "list",
            "name",
            "of",
            "dog"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id",
        "query_toks": [
            "SELECT",
            "professional_id",
            ",",
            "role_code",
            ",",
            "email_address",
            "FROM",
            "Professionals",
            "EXCEPT",
            "SELECT",
            "T1.professional_id",
            ",",
            "T1.role_code",
            ",",
            "T1.email_address",
            "FROM",
            "Professionals",
            "AS",
            "T1",
            "JOIN",
            "Treatments",
            "AS",
            "T2",
            "ON",
            "T1.professional_id",
            "=",
            "T2.professional_id"
        ],
        "query_toks_no_value": [
            "select",
            "professional_id",
            ",",
            "role_code",
            ",",
            "email_address",
            "from",
            "professionals",
            "except",
            "select",
            "t1",
            ".",
            "professional_id",
            ",",
            "t1",
            ".",
            "role_code",
            ",",
            "t1",
            ".",
            "email_address",
            "from",
            "professionals",
            "as",
            "t1",
            "join",
            "treatments",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "professional_id",
            "=",
            "t2",
            ".",
            "professional_id"
        ],
        "sql": {
            "except": {
                "except": null,
                "from": {
                    "conds": [
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    33,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                46,
                                false
                            ],
                            null
                        ]
                    ],
                    "table_units": [
                        [
                            "table_unit",
                            6
                        ],
                        [
                            "table_unit",
                            7
                        ]
                    ]
                },
                "groupby": [],
                "having": [],
                "intersect": null,
                "limit": null,
                "orderby": [],
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    33,
                                    false
                                ],
                                null
                            ]
                        ],
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    34,
                                    false
                                ],
                                null
                            ]
                        ],
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    41,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "union": null,
                "where": []
            },
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                33,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                34,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                41,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list professional id of professional role code of professional email addres of professional except that list professional id of treatment email addres of professional",
        "gold_question": "list professional id of professional role code of professional email addres of professional except that list professional id of professional role code of professional email addres of professional",
        "question_toks": [
            "list",
            "professional",
            "id",
            "of",
            "professional",
            "role",
            "code",
            "of",
            "professional",
            "email",
            "addres",
            "of",
            "professional",
            "except",
            "that",
            "list",
            "professional",
            "id",
            "of",
            "treatment",
            "email",
            "addres",
            "of",
            "professional"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id",
        "query_toks": [
            "SELECT",
            "professional_id",
            ",",
            "role_code",
            ",",
            "email_address",
            "FROM",
            "Professionals",
            "EXCEPT",
            "SELECT",
            "T1.professional_id",
            ",",
            "T1.role_code",
            ",",
            "T1.email_address",
            "FROM",
            "Professionals",
            "AS",
            "T1",
            "JOIN",
            "Treatments",
            "AS",
            "T2",
            "ON",
            "T1.professional_id",
            "=",
            "T2.professional_id"
        ],
        "query_toks_no_value": [
            "select",
            "professional_id",
            ",",
            "role_code",
            ",",
            "email_address",
            "from",
            "professionals",
            "except",
            "select",
            "t1",
            ".",
            "professional_id",
            ",",
            "t1",
            ".",
            "role_code",
            ",",
            "t1",
            ".",
            "email_address",
            "from",
            "professionals",
            "as",
            "t1",
            "join",
            "treatments",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "professional_id",
            "=",
            "t2",
            ".",
            "professional_id"
        ],
        "sql": {
            "except": {
                "except": null,
                "from": {
                    "conds": [
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    33,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                46,
                                false
                            ],
                            null
                        ]
                    ],
                    "table_units": [
                        [
                            "table_unit",
                            6
                        ],
                        [
                            "table_unit",
                            7
                        ]
                    ]
                },
                "groupby": [],
                "having": [],
                "intersect": null,
                "limit": null,
                "orderby": [],
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    33,
                                    false
                                ],
                                null
                            ]
                        ],
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    34,
                                    false
                                ],
                                null
                            ]
                        ],
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    41,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "union": null,
                "where": []
            },
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                33,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                34,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                41,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list professional id of professional role code of professional email addres of professional except that list professional id of professional role code of professional email addres of professional",
        "gold_question": "list professional id of professional role code of professional email addres of professional except that list professional id of professional role code of professional email addres of professional",
        "question_toks": [
            "list",
            "professional",
            "id",
            "of",
            "professional",
            "role",
            "code",
            "of",
            "professional",
            "email",
            "addres",
            "of",
            "professional",
            "except",
            "that",
            "list",
            "professional",
            "id",
            "of",
            "professional",
            "role",
            "code",
            "of",
            "professional",
            "email",
            "addres",
            "of",
            "professional"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T1.owner_id",
            ",",
            "T2.first_name",
            ",",
            "T2.last_name",
            "FROM",
            "Dogs",
            "AS",
            "T1",
            "JOIN",
            "Owners",
            "AS",
            "T2",
            "ON",
            "T1.owner_id",
            "=",
            "T2.owner_id",
            "GROUP",
            "BY",
            "T1.owner_id",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "owner_id",
            ",",
            "t2",
            ".",
            "first_name",
            ",",
            "t2",
            ".",
            "last_name",
            "from",
            "dogs",
            "as",
            "t1",
            "join",
            "owners",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "owner_id",
            "=",
            "t2",
            ".",
            "owner_id",
            "group",
            "by",
            "t1",
            ".",
            "owner_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                21,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        5
                    ],
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    21,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                21,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of owner id of owner first name of owner last name of owner for each owner id of owner ordered by the total number of owner descendingly",
        "gold_question": "list top value items of owner id of dog first name of owner last name of owner for each owner id of dog ordered by the total number of dog descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "owner",
            "id",
            "of",
            "owner",
            "first",
            "name",
            "of",
            "owner",
            "last",
            "name",
            "of",
            "owner",
            "for",
            "each",
            "owner",
            "id",
            "of",
            "owner",
            "ordered",
            "by",
            "the",
            "total",
            "number",
            "of",
            "owner",
            "descendingly"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T1.owner_id",
            ",",
            "T2.first_name",
            ",",
            "T2.last_name",
            "FROM",
            "Dogs",
            "AS",
            "T1",
            "JOIN",
            "Owners",
            "AS",
            "T2",
            "ON",
            "T1.owner_id",
            "=",
            "T2.owner_id",
            "GROUP",
            "BY",
            "T1.owner_id",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "owner_id",
            ",",
            "t2",
            ".",
            "first_name",
            ",",
            "t2",
            ".",
            "last_name",
            "from",
            "dogs",
            "as",
            "t1",
            "join",
            "owners",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "owner_id",
            "=",
            "t2",
            ".",
            "owner_id",
            "group",
            "by",
            "t1",
            ".",
            "owner_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                21,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        5
                    ],
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    21,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                21,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of owner id of owner first name of owner last name of owner for each owner id of owner ordered by the total number of owner descendingly",
        "gold_question": "list top value items of owner id of dog first name of owner last name of owner for each owner id of dog ordered by the total number of dog descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "owner",
            "id",
            "of",
            "owner",
            "first",
            "name",
            "of",
            "owner",
            "last",
            "name",
            "of",
            "owner",
            "for",
            "each",
            "owner",
            "id",
            "of",
            "owner",
            "ordered",
            "by",
            "the",
            "total",
            "number",
            "of",
            "owner",
            "descendingly"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2",
        "query_toks": [
            "SELECT",
            "T1.professional_id",
            ",",
            "T1.role_code",
            ",",
            "T1.first_name",
            "FROM",
            "Professionals",
            "AS",
            "T1",
            "JOIN",
            "Treatments",
            "AS",
            "T2",
            "ON",
            "T1.professional_id",
            "=",
            "T2.professional_id",
            "GROUP",
            "BY",
            "T1.professional_id",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "professional_id",
            ",",
            "t1",
            ".",
            "role_code",
            ",",
            "t1",
            ".",
            "first_name",
            "from",
            "professionals",
            "as",
            "t1",
            "join",
            "treatments",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "professional_id",
            "=",
            "t2",
            ".",
            "professional_id",
            "group",
            "by",
            "t1",
            ".",
            "professional_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                33,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            46,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ],
                    [
                        "table_unit",
                        7
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    33,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    5,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                33,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                34,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                35,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list professional id of treatment role code of professional first name of professional for each professional id of treatment that have the total number of treatment greater than or equal to value",
        "gold_question": "list professional id of professional role code of professional first name of professional for each professional id of professional that have the total number of professional greater than or equal to value",
        "question_toks": [
            "list",
            "professional",
            "id",
            "of",
            "treatment",
            "role",
            "code",
            "of",
            "professional",
            "first",
            "name",
            "of",
            "professional",
            "for",
            "each",
            "professional",
            "id",
            "of",
            "treatment",
            "that",
            "have",
            "the",
            "total",
            "number",
            "of",
            "treatment",
            "greater",
            "than",
            "or",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2",
        "query_toks": [
            "SELECT",
            "T1.professional_id",
            ",",
            "T1.role_code",
            ",",
            "T1.first_name",
            "FROM",
            "Professionals",
            "AS",
            "T1",
            "JOIN",
            "Treatments",
            "AS",
            "T2",
            "ON",
            "T1.professional_id",
            "=",
            "T2.professional_id",
            "GROUP",
            "BY",
            "T1.professional_id",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "professional_id",
            ",",
            "t1",
            ".",
            "role_code",
            ",",
            "t1",
            ".",
            "first_name",
            "from",
            "professionals",
            "as",
            "t1",
            "join",
            "treatments",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "professional_id",
            "=",
            "t2",
            ".",
            "professional_id",
            "group",
            "by",
            "t1",
            ".",
            "professional_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                33,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            46,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ],
                    [
                        "table_unit",
                        7
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    33,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    5,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                33,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                34,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                35,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list professional id of professional role code of professional first name of professional for each professional id of professional that have the total number of professional greater than or equal to value",
        "gold_question": "list professional id of professional role code of professional first name of professional for each professional id of professional that have the total number of professional greater than or equal to value",
        "question_toks": [
            "list",
            "professional",
            "id",
            "of",
            "professional",
            "role",
            "code",
            "of",
            "professional",
            "first",
            "name",
            "of",
            "professional",
            "for",
            "each",
            "professional",
            "id",
            "of",
            "professional",
            "that",
            "have",
            "the",
            "total",
            "number",
            "of",
            "professional",
            "greater",
            "than",
            "or",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T1.breed_name",
            "FROM",
            "Breeds",
            "AS",
            "T1",
            "JOIN",
            "Dogs",
            "AS",
            "T2",
            "ON",
            "T1.breed_code",
            "=",
            "T2.breed_code",
            "GROUP",
            "BY",
            "T1.breed_name",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "breed_name",
            "from",
            "breeds",
            "as",
            "t1",
            "join",
            "dogs",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "breed_code",
            "=",
            "t2",
            ".",
            "breed_code",
            "group",
            "by",
            "t1",
            ".",
            "breed_name",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            23,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        5
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    2,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of breed name of breed for each breed code of dog ordered by the total number of dog descendingly",
        "gold_question": "list top value items of breed name of breed for each breed name of breed ordered by the total number of breed descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "breed",
            "name",
            "of",
            "breed",
            "for",
            "each",
            "breed",
            "code",
            "of",
            "dog",
            "ordered",
            "by",
            "the",
            "total",
            "number",
            "of",
            "dog",
            "descendingly"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T1.breed_name",
            "FROM",
            "Breeds",
            "AS",
            "T1",
            "JOIN",
            "Dogs",
            "AS",
            "T2",
            "ON",
            "T1.breed_code",
            "=",
            "T2.breed_code",
            "GROUP",
            "BY",
            "T1.breed_name",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "breed_name",
            "from",
            "breeds",
            "as",
            "t1",
            "join",
            "dogs",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "breed_code",
            "=",
            "t2",
            ".",
            "breed_code",
            "group",
            "by",
            "t1",
            ".",
            "breed_name",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            23,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        5
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    2,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of breed name of breed for each breed code of dog ordered by the total number of dog descendingly",
        "gold_question": "list top value items of breed name of breed for each breed name of breed ordered by the total number of breed descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "breed",
            "name",
            "of",
            "breed",
            "for",
            "each",
            "breed",
            "code",
            "of",
            "dog",
            "ordered",
            "by",
            "the",
            "total",
            "number",
            "of",
            "dog",
            "descendingly"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T1.owner_id",
            ",",
            "T1.last_name",
            "FROM",
            "Owners",
            "AS",
            "T1",
            "JOIN",
            "Dogs",
            "AS",
            "T2",
            "ON",
            "T1.owner_id",
            "=",
            "T2.owner_id",
            "JOIN",
            "Treatments",
            "AS",
            "T3",
            "ON",
            "T2.dog_id",
            "=",
            "T3.dog_id",
            "GROUP",
            "BY",
            "T1.owner_id",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "owner_id",
            ",",
            "t1",
            ".",
            "last_name",
            "from",
            "owners",
            "as",
            "t1",
            "join",
            "dogs",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "owner_id",
            "=",
            "t2",
            ".",
            "owner_id",
            "join",
            "treatments",
            "as",
            "t3",
            "on",
            "t2",
            ".",
            "dog_id",
            "=",
            "t3",
            ".",
            "dog_id",
            "group",
            "by",
            "t1",
            ".",
            "owner_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            21,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                20,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            45,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ],
                    [
                        "table_unit",
                        5
                    ],
                    [
                        "table_unit",
                        7
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    10,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of owner id of owner last name of owner for each owner id of owner ordered by the sum of cost of treatment of treatment descendingly",
        "gold_question": "list top value items of owner id of owner last name of owner for each owner id of owner ordered by the total number of owner descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "owner",
            "id",
            "of",
            "owner",
            "last",
            "name",
            "of",
            "owner",
            "for",
            "each",
            "owner",
            "id",
            "of",
            "owner",
            "ordered",
            "by",
            "the",
            "sum",
            "of",
            "cost",
            "of",
            "treatment",
            "of",
            "treatment",
            "descendingly"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T1.owner_id",
            ",",
            "T1.last_name",
            "FROM",
            "Owners",
            "AS",
            "T1",
            "JOIN",
            "Dogs",
            "AS",
            "T2",
            "ON",
            "T1.owner_id",
            "=",
            "T2.owner_id",
            "JOIN",
            "Treatments",
            "AS",
            "T3",
            "ON",
            "T2.dog_id",
            "=",
            "T3.dog_id",
            "GROUP",
            "BY",
            "T1.owner_id",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "owner_id",
            ",",
            "t1",
            ".",
            "last_name",
            "from",
            "owners",
            "as",
            "t1",
            "join",
            "dogs",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "owner_id",
            "=",
            "t2",
            ".",
            "owner_id",
            "join",
            "treatments",
            "as",
            "t3",
            "on",
            "t2",
            ".",
            "dog_id",
            "=",
            "t3",
            ".",
            "dog_id",
            "group",
            "by",
            "t1",
            ".",
            "owner_id",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            21,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                20,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            45,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ],
                    [
                        "table_unit",
                        5
                    ],
                    [
                        "table_unit",
                        7
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    10,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of owner id of owner last name of owner for each owner id of owner ordered by the sum of cost of treatment of treatment descendingly",
        "gold_question": "list top value items of owner id of owner last name of owner for each owner id of owner ordered by the total number of owner descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "owner",
            "id",
            "of",
            "owner",
            "last",
            "name",
            "of",
            "owner",
            "for",
            "each",
            "owner",
            "id",
            "of",
            "owner",
            "ordered",
            "by",
            "the",
            "sum",
            "of",
            "cost",
            "of",
            "treatment",
            "of",
            "treatment",
            "descendingly"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T1.treatment_type_description",
            "FROM",
            "Treatment_types",
            "AS",
            "T1",
            "JOIN",
            "Treatments",
            "AS",
            "T2",
            "ON",
            "T1.treatment_type_code",
            "=",
            "T2.treatment_type_code",
            "GROUP",
            "BY",
            "T1.treatment_type_code",
            "ORDER",
            "BY",
            "sum",
            "(",
            "cost_of_treatment",
            ")",
            "ASC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "treatment_type_description",
            "from",
            "treatment_types",
            "as",
            "t1",
            "join",
            "treatments",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "treatment_type_code",
            "=",
            "t2",
            ".",
            "treatment_type_code",
            "group",
            "by",
            "t1",
            ".",
            "treatment_type_code",
            "order",
            "by",
            "sum",
            "(",
            "cost_of_treatment",
            ")",
            "asc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            47,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ],
                    [
                        "table_unit",
                        7
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    8,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "asc",
                [
                    [
                        0,
                        [
                            4,
                            49,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of treatment type description of treatment type for each treatment type code of treatment ordered by the sum of cost of treatment of treatment ascendingly",
        "gold_question": "list top value items of treatment type description of treatment type for each treatment type code of treatment type ordered by the sum of cost of treatment of treatment ascendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "treatment",
            "type",
            "description",
            "of",
            "treatment",
            "type",
            "for",
            "each",
            "treatment",
            "type",
            "code",
            "of",
            "treatment",
            "ordered",
            "by",
            "the",
            "sum",
            "of",
            "cost",
            "of",
            "treatment",
            "of",
            "treatment",
            "ascendingly"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T1.treatment_type_description",
            "FROM",
            "Treatment_types",
            "AS",
            "T1",
            "JOIN",
            "Treatments",
            "AS",
            "T2",
            "ON",
            "T1.treatment_type_code",
            "=",
            "T2.treatment_type_code",
            "GROUP",
            "BY",
            "T1.treatment_type_code",
            "ORDER",
            "BY",
            "sum",
            "(",
            "cost_of_treatment",
            ")",
            "ASC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "treatment_type_description",
            "from",
            "treatment_types",
            "as",
            "t1",
            "join",
            "treatments",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "treatment_type_code",
            "=",
            "t2",
            ".",
            "treatment_type_code",
            "group",
            "by",
            "t1",
            ".",
            "treatment_type_code",
            "order",
            "by",
            "sum",
            "(",
            "cost_of_treatment",
            ")",
            "asc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            47,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ],
                    [
                        "table_unit",
                        7
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    8,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "asc",
                [
                    [
                        0,
                        [
                            4,
                            49,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of treatment type description of treatment type for each treatment type code of treatment ordered by the sum of cost of treatment of treatment ascendingly",
        "gold_question": "list top value items of treatment type description of treatment type for each treatment type code of treatment type ordered by the sum of cost of treatment of treatment ascendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "treatment",
            "type",
            "description",
            "of",
            "treatment",
            "type",
            "for",
            "each",
            "treatment",
            "type",
            "code",
            "of",
            "treatment",
            "ordered",
            "by",
            "the",
            "sum",
            "of",
            "cost",
            "of",
            "treatment",
            "of",
            "treatment",
            "ascendingly"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T1.owner_id",
            ",",
            "T1.zip_code",
            "FROM",
            "Owners",
            "AS",
            "T1",
            "JOIN",
            "Dogs",
            "AS",
            "T2",
            "ON",
            "T1.owner_id",
            "=",
            "T2.owner_id",
            "JOIN",
            "Treatments",
            "AS",
            "T3",
            "ON",
            "T2.dog_id",
            "=",
            "T3.dog_id",
            "GROUP",
            "BY",
            "T1.owner_id",
            "ORDER",
            "BY",
            "sum",
            "(",
            "T3.cost_of_treatment",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "owner_id",
            ",",
            "t1",
            ".",
            "zip_code",
            "from",
            "owners",
            "as",
            "t1",
            "join",
            "dogs",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "owner_id",
            "=",
            "t2",
            ".",
            "owner_id",
            "join",
            "treatments",
            "as",
            "t3",
            "on",
            "t2",
            ".",
            "dog_id",
            "=",
            "t3",
            ".",
            "dog_id",
            "group",
            "by",
            "t1",
            ".",
            "owner_id",
            "order",
            "by",
            "sum",
            "(",
            "t3",
            ".",
            "cost_of_treatment",
            ")",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            21,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                20,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            45,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ],
                    [
                        "table_unit",
                        5
                    ],
                    [
                        "table_unit",
                        7
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    10,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            4,
                            49,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                16,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of owner id of dog zip code of owner for each owner id of dog ordered by the sum of charge amount of charge descendingly",
        "gold_question": "list top value items of owner id of owner zip code of owner for each owner id of owner ordered by the sum of cost of treatment of treatment descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "owner",
            "id",
            "of",
            "dog",
            "zip",
            "code",
            "of",
            "owner",
            "for",
            "each",
            "owner",
            "id",
            "of",
            "dog",
            "ordered",
            "by",
            "the",
            "sum",
            "of",
            "charge",
            "amount",
            "of",
            "charge",
            "descendingly"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T1.owner_id",
            ",",
            "T1.zip_code",
            "FROM",
            "Owners",
            "AS",
            "T1",
            "JOIN",
            "Dogs",
            "AS",
            "T2",
            "ON",
            "T1.owner_id",
            "=",
            "T2.owner_id",
            "JOIN",
            "Treatments",
            "AS",
            "T3",
            "ON",
            "T2.dog_id",
            "=",
            "T3.dog_id",
            "GROUP",
            "BY",
            "T1.owner_id",
            "ORDER",
            "BY",
            "sum",
            "(",
            "T3.cost_of_treatment",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "owner_id",
            ",",
            "t1",
            ".",
            "zip_code",
            "from",
            "owners",
            "as",
            "t1",
            "join",
            "dogs",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "owner_id",
            "=",
            "t2",
            ".",
            "owner_id",
            "join",
            "treatments",
            "as",
            "t3",
            "on",
            "t2",
            ".",
            "dog_id",
            "=",
            "t3",
            ".",
            "dog_id",
            "group",
            "by",
            "t1",
            ".",
            "owner_id",
            "order",
            "by",
            "sum",
            "(",
            "t3",
            ".",
            "cost_of_treatment",
            ")",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            21,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                20,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            45,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ],
                    [
                        "table_unit",
                        5
                    ],
                    [
                        "table_unit",
                        7
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    10,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            4,
                            49,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                16,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of owner id of dog zip code of owner for each owner id of dog ordered by the sum of charge amount of charge descendingly",
        "gold_question": "list top value items of owner id of owner zip code of owner for each owner id of owner ordered by the sum of cost of treatment of treatment descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "owner",
            "id",
            "of",
            "dog",
            "zip",
            "code",
            "of",
            "owner",
            "for",
            "each",
            "owner",
            "id",
            "of",
            "dog",
            "ordered",
            "by",
            "the",
            "sum",
            "of",
            "charge",
            "amount",
            "of",
            "charge",
            "descendingly"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2",
        "query_toks": [
            "SELECT",
            "T1.professional_id",
            ",",
            "T1.cell_number",
            "FROM",
            "Professionals",
            "AS",
            "T1",
            "JOIN",
            "Treatments",
            "AS",
            "T2",
            "ON",
            "T1.professional_id",
            "=",
            "T2.professional_id",
            "GROUP",
            "BY",
            "T1.professional_id",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "professional_id",
            ",",
            "t1",
            ".",
            "cell_number",
            "from",
            "professionals",
            "as",
            "t1",
            "join",
            "treatments",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "professional_id",
            "=",
            "t2",
            ".",
            "professional_id",
            "group",
            "by",
            "t1",
            ".",
            "professional_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                33,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            46,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ],
                    [
                        "table_unit",
                        7
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    33,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    5,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                33,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                43,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list professional id of treatment cell number of professional for each professional id of treatment that have the total number of treatment greater than or equal to value",
        "gold_question": "list professional id of professional cell number of professional for each professional id of professional that have the total number of professional greater than or equal to value",
        "question_toks": [
            "list",
            "professional",
            "id",
            "of",
            "treatment",
            "cell",
            "number",
            "of",
            "professional",
            "for",
            "each",
            "professional",
            "id",
            "of",
            "treatment",
            "that",
            "have",
            "the",
            "total",
            "number",
            "of",
            "treatment",
            "greater",
            "than",
            "or",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2",
        "query_toks": [
            "SELECT",
            "T1.professional_id",
            ",",
            "T1.cell_number",
            "FROM",
            "Professionals",
            "AS",
            "T1",
            "JOIN",
            "Treatments",
            "AS",
            "T2",
            "ON",
            "T1.professional_id",
            "=",
            "T2.professional_id",
            "GROUP",
            "BY",
            "T1.professional_id",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "professional_id",
            ",",
            "t1",
            ".",
            "cell_number",
            "from",
            "professionals",
            "as",
            "t1",
            "join",
            "treatments",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "professional_id",
            "=",
            "t2",
            ".",
            "professional_id",
            "group",
            "by",
            "t1",
            ".",
            "professional_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                33,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            46,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ],
                    [
                        "table_unit",
                        7
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    33,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    5,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                33,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                43,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list professional id of treatment cell number of professional for each professional id of treatment that have the total number of treatment greater than or equal to value",
        "gold_question": "list professional id of professional cell number of professional for each professional id of professional that have the total number of professional greater than or equal to value",
        "question_toks": [
            "list",
            "professional",
            "id",
            "of",
            "treatment",
            "cell",
            "number",
            "of",
            "professional",
            "for",
            "each",
            "professional",
            "id",
            "of",
            "treatment",
            "that",
            "have",
            "the",
            "total",
            "number",
            "of",
            "treatment",
            "greater",
            "than",
            "or",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments )",
        "query_toks": [
            "SELECT",
            "DISTINCT",
            "T1.first_name",
            ",",
            "T1.last_name",
            "FROM",
            "Professionals",
            "AS",
            "T1",
            "JOIN",
            "Treatments",
            "AS",
            "T2",
            "WHERE",
            "cost_of_treatment",
            "<",
            "(",
            "SELECT",
            "avg",
            "(",
            "cost_of_treatment",
            ")",
            "FROM",
            "Treatments",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "t1",
            ".",
            "first_name",
            ",",
            "t1",
            ".",
            "last_name",
            "from",
            "professionals",
            "as",
            "t1",
            "join",
            "treatments",
            "as",
            "t2",
            "where",
            "cost_of_treatment",
            "<",
            "(",
            "select",
            "avg",
            "(",
            "cost_of_treatment",
            ")",
            "from",
            "treatments",
            ")"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ],
                    [
                        "table_unit",
                        7
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                35,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                40,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    4,
                    [
                        0,
                        [
                            0,
                            49,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    7
                                ]
                            ]
                        },
                        "groupby": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderby": [],
                        "select": [
                            false,
                            [
                                [
                                    5,
                                    [
                                        0,
                                        [
                                            0,
                                            49,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": []
                    },
                    null
                ]
            ]
        },
        "question": "list first name of professional last name of professional with cost of treatment of treatment less than ( the average of cost of treatment of treatment )",
        "gold_question": "list first name of professional last name of professional with cost of treatment of treatment less than ( the average of cost of treatment of treatment )",
        "question_toks": [
            "list",
            "first",
            "name",
            "of",
            "professional",
            "last",
            "name",
            "of",
            "professional",
            "with",
            "cost",
            "of",
            "treatment",
            "of",
            "treatment",
            "less",
            "than",
            "(",
            "the",
            "average",
            "of",
            "cost",
            "of",
            "treatment",
            "of",
            "treatment",
            ")"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments )",
        "query_toks": [
            "SELECT",
            "DISTINCT",
            "T1.first_name",
            ",",
            "T1.last_name",
            "FROM",
            "Professionals",
            "AS",
            "T1",
            "JOIN",
            "Treatments",
            "AS",
            "T2",
            "WHERE",
            "cost_of_treatment",
            "<",
            "(",
            "SELECT",
            "avg",
            "(",
            "cost_of_treatment",
            ")",
            "FROM",
            "Treatments",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "t1",
            ".",
            "first_name",
            ",",
            "t1",
            ".",
            "last_name",
            "from",
            "professionals",
            "as",
            "t1",
            "join",
            "treatments",
            "as",
            "t2",
            "where",
            "cost_of_treatment",
            "<",
            "(",
            "select",
            "avg",
            "(",
            "cost_of_treatment",
            ")",
            "from",
            "treatments",
            ")"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ],
                    [
                        "table_unit",
                        7
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                35,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                40,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    4,
                    [
                        0,
                        [
                            0,
                            49,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    7
                                ]
                            ]
                        },
                        "groupby": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderby": [],
                        "select": [
                            false,
                            [
                                [
                                    5,
                                    [
                                        0,
                                        [
                                            0,
                                            49,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": []
                    },
                    null
                ]
            ]
        },
        "question": "list first name of professional last name of professional with cost of treatment of treatment less than ( the average of cost of treatment of treatment )",
        "gold_question": "list first name of professional last name of professional with cost of treatment of treatment less than ( the average of cost of treatment of treatment )",
        "question_toks": [
            "list",
            "first",
            "name",
            "of",
            "professional",
            "last",
            "name",
            "of",
            "professional",
            "with",
            "cost",
            "of",
            "treatment",
            "of",
            "treatment",
            "less",
            "than",
            "(",
            "the",
            "average",
            "of",
            "cost",
            "of",
            "treatment",
            "of",
            "treatment",
            ")"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT T1.date_of_treatment ,  T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id",
        "query_toks": [
            "SELECT",
            "T1.date_of_treatment",
            ",",
            "T2.first_name",
            "FROM",
            "Treatments",
            "AS",
            "T1",
            "JOIN",
            "Professionals",
            "AS",
            "T2",
            "ON",
            "T1.professional_id",
            "=",
            "T2.professional_id"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "date_of_treatment",
            ",",
            "t2",
            ".",
            "first_name",
            "from",
            "treatments",
            "as",
            "t1",
            "join",
            "professionals",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "professional_id",
            "=",
            "t2",
            ".",
            "professional_id"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                46,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            33,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        7
                    ],
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                48,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                35,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list date of treatment of treatment first name of professional",
        "gold_question": "list date of treatment of treatment first name of professional",
        "question_toks": [
            "list",
            "date",
            "of",
            "treatment",
            "of",
            "treatment",
            "first",
            "name",
            "of",
            "professional"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT T1.date_of_treatment ,  T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id",
        "query_toks": [
            "SELECT",
            "T1.date_of_treatment",
            ",",
            "T2.first_name",
            "FROM",
            "Treatments",
            "AS",
            "T1",
            "JOIN",
            "Professionals",
            "AS",
            "T2",
            "ON",
            "T1.professional_id",
            "=",
            "T2.professional_id"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "date_of_treatment",
            ",",
            "t2",
            ".",
            "first_name",
            "from",
            "treatments",
            "as",
            "t1",
            "join",
            "professionals",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "professional_id",
            "=",
            "t2",
            ".",
            "professional_id"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                46,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            33,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        7
                    ],
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                48,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                35,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list date of treatment of treatment first name of professional",
        "gold_question": "list date of treatment of treatment first name of professional",
        "question_toks": [
            "list",
            "date",
            "of",
            "treatment",
            "of",
            "treatment",
            "first",
            "name",
            "of",
            "professional"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT T1.cost_of_treatment ,  T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code",
        "query_toks": [
            "SELECT",
            "T1.cost_of_treatment",
            ",",
            "T2.treatment_type_description",
            "FROM",
            "Treatments",
            "AS",
            "T1",
            "JOIN",
            "treatment_types",
            "AS",
            "T2",
            "ON",
            "T1.treatment_type_code",
            "=",
            "T2.treatment_type_code"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "cost_of_treatment",
            ",",
            "t2",
            ".",
            "treatment_type_description",
            "from",
            "treatments",
            "as",
            "t1",
            "join",
            "treatment_types",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "treatment_type_code",
            "=",
            "t2",
            ".",
            "treatment_type_code"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                47,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        7
                    ],
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                49,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list cost of treatment of treatment treatment type description of treatment type",
        "gold_question": "list cost of treatment of treatment treatment type description of treatment type",
        "question_toks": [
            "list",
            "cost",
            "of",
            "treatment",
            "of",
            "treatment",
            "treatment",
            "type",
            "description",
            "of",
            "treatment",
            "type"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT T1.cost_of_treatment ,  T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code",
        "query_toks": [
            "SELECT",
            "T1.cost_of_treatment",
            ",",
            "T2.treatment_type_description",
            "FROM",
            "Treatments",
            "AS",
            "T1",
            "JOIN",
            "treatment_types",
            "AS",
            "T2",
            "ON",
            "T1.treatment_type_code",
            "=",
            "T2.treatment_type_code"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "cost_of_treatment",
            ",",
            "t2",
            ".",
            "treatment_type_description",
            "from",
            "treatments",
            "as",
            "t1",
            "join",
            "treatment_types",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "treatment_type_code",
            "=",
            "t2",
            ".",
            "treatment_type_code"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                47,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        7
                    ],
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                49,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list cost of treatment of treatment treatment type description of treatment type",
        "gold_question": "list cost of treatment of treatment treatment type description of treatment type",
        "question_toks": [
            "list",
            "cost",
            "of",
            "treatment",
            "of",
            "treatment",
            "treatment",
            "type",
            "description",
            "of",
            "treatment",
            "type"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT T1.first_name ,  T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id",
        "query_toks": [
            "SELECT",
            "T1.first_name",
            ",",
            "T1.last_name",
            ",",
            "T2.size_code",
            "FROM",
            "Owners",
            "AS",
            "T1",
            "JOIN",
            "Dogs",
            "AS",
            "T2",
            "ON",
            "T1.owner_id",
            "=",
            "T2.owner_id"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "first_name",
            ",",
            "t1",
            ".",
            "last_name",
            ",",
            "t2",
            ".",
            "size_code",
            "from",
            "owners",
            "as",
            "t1",
            "join",
            "dogs",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "owner_id",
            "=",
            "t2",
            ".",
            "owner_id"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            21,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ],
                    [
                        "table_unit",
                        5
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                24,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list first name of owner last name of owner size code of dog size code of dog",
        "gold_question": "list first name of owner last name of owner size code of dog",
        "question_toks": [
            "list",
            "first",
            "name",
            "of",
            "owner",
            "last",
            "name",
            "of",
            "owner",
            "size",
            "code",
            "of",
            "dog",
            "size",
            "code",
            "of",
            "dog"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT T1.first_name ,  T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id",
        "query_toks": [
            "SELECT",
            "T1.first_name",
            ",",
            "T1.last_name",
            ",",
            "T2.size_code",
            "FROM",
            "Owners",
            "AS",
            "T1",
            "JOIN",
            "Dogs",
            "AS",
            "T2",
            "ON",
            "T1.owner_id",
            "=",
            "T2.owner_id"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "first_name",
            ",",
            "t1",
            ".",
            "last_name",
            ",",
            "t2",
            ".",
            "size_code",
            "from",
            "owners",
            "as",
            "t1",
            "join",
            "dogs",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "owner_id",
            "=",
            "t2",
            ".",
            "owner_id"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            21,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ],
                    [
                        "table_unit",
                        5
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                24,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list first name of owner last name of owner size code of dog size code of dog",
        "gold_question": "list first name of owner last name of owner size code of dog",
        "question_toks": [
            "list",
            "first",
            "name",
            "of",
            "owner",
            "last",
            "name",
            "of",
            "owner",
            "size",
            "code",
            "of",
            "dog",
            "size",
            "code",
            "of",
            "dog"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id",
        "query_toks": [
            "SELECT",
            "T1.first_name",
            ",",
            "T2.name",
            "FROM",
            "Owners",
            "AS",
            "T1",
            "JOIN",
            "Dogs",
            "AS",
            "T2",
            "ON",
            "T1.owner_id",
            "=",
            "T2.owner_id"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "first_name",
            ",",
            "t2",
            ".",
            "name",
            "from",
            "owners",
            "as",
            "t1",
            "join",
            "dogs",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "owner_id",
            "=",
            "t2",
            ".",
            "owner_id"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            21,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ],
                    [
                        "table_unit",
                        5
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                25,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list first name of owner name of dog",
        "gold_question": "list first name of owner name of dog",
        "question_toks": [
            "list",
            "first",
            "name",
            "of",
            "owner",
            "name",
            "of",
            "dog"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id",
        "query_toks": [
            "SELECT",
            "T1.first_name",
            ",",
            "T2.name",
            "FROM",
            "Owners",
            "AS",
            "T1",
            "JOIN",
            "Dogs",
            "AS",
            "T2",
            "ON",
            "T1.owner_id",
            "=",
            "T2.owner_id"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "first_name",
            ",",
            "t2",
            ".",
            "name",
            "from",
            "owners",
            "as",
            "t1",
            "join",
            "dogs",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "owner_id",
            "=",
            "t2",
            ".",
            "owner_id"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            21,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ],
                    [
                        "table_unit",
                        5
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                25,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list first name of owner name of dog",
        "gold_question": "list first name of owner name of dog",
        "question_toks": [
            "list",
            "first",
            "name",
            "of",
            "owner",
            "name",
            "of",
            "dog"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )",
        "query_toks": [
            "SELECT",
            "T1.name",
            ",",
            "T2.date_of_treatment",
            "FROM",
            "Dogs",
            "AS",
            "T1",
            "JOIN",
            "Treatments",
            "AS",
            "T2",
            "ON",
            "T1.dog_id",
            "=",
            "T2.dog_id",
            "WHERE",
            "T1.breed_code",
            "=",
            "(",
            "SELECT",
            "breed_code",
            "FROM",
            "Dogs",
            "GROUP",
            "BY",
            "breed_code",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "ASC",
            "LIMIT",
            "1",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "name",
            ",",
            "t2",
            ".",
            "date_of_treatment",
            "from",
            "dogs",
            "as",
            "t1",
            "join",
            "treatments",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "dog_id",
            "=",
            "t2",
            ".",
            "dog_id",
            "where",
            "t1",
            ".",
            "breed_code",
            "=",
            "(",
            "select",
            "breed_code",
            "from",
            "dogs",
            "group",
            "by",
            "breed_code",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "asc",
            "limit",
            "value",
            ")"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                20,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            45,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        5
                    ],
                    [
                        "table_unit",
                        7
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                25,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                48,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            23,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    5
                                ]
                            ]
                        },
                        "groupby": [
                            [
                                0,
                                23,
                                false
                            ]
                        ],
                        "having": [],
                        "intersect": null,
                        "limit": 1,
                        "orderby": [
                            "asc",
                            [
                                [
                                    0,
                                    [
                                        3,
                                        0,
                                        false
                                    ],
                                    null
                                ]
                            ]
                        ],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            23,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": []
                    },
                    null
                ]
            ]
        },
        "question": "list top value items of name of dog date of treatment of treatment ordered by age of dog descendingly",
        "gold_question": "list name of dog date of treatment of treatment with breed code of dog equal to ( breed code top value items of of dog for each breed code ordered by the total number of dog ascendingly )",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "name",
            "of",
            "dog",
            "date",
            "of",
            "treatment",
            "of",
            "treatment",
            "ordered",
            "by",
            "age",
            "of",
            "dog",
            "descendingly"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )",
        "query_toks": [
            "SELECT",
            "T1.name",
            ",",
            "T2.date_of_treatment",
            "FROM",
            "Dogs",
            "AS",
            "T1",
            "JOIN",
            "Treatments",
            "AS",
            "T2",
            "ON",
            "T1.dog_id",
            "=",
            "T2.dog_id",
            "WHERE",
            "T1.breed_code",
            "=",
            "(",
            "SELECT",
            "breed_code",
            "FROM",
            "Dogs",
            "GROUP",
            "BY",
            "breed_code",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "ASC",
            "LIMIT",
            "1",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "name",
            ",",
            "t2",
            ".",
            "date_of_treatment",
            "from",
            "dogs",
            "as",
            "t1",
            "join",
            "treatments",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "dog_id",
            "=",
            "t2",
            ".",
            "dog_id",
            "where",
            "t1",
            ".",
            "breed_code",
            "=",
            "(",
            "select",
            "breed_code",
            "from",
            "dogs",
            "group",
            "by",
            "breed_code",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "asc",
            "limit",
            "value",
            ")"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                20,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            45,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        5
                    ],
                    [
                        "table_unit",
                        7
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                25,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                48,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            23,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    5
                                ]
                            ]
                        },
                        "groupby": [
                            [
                                0,
                                23,
                                false
                            ]
                        ],
                        "having": [],
                        "intersect": null,
                        "limit": 1,
                        "orderby": [
                            "asc",
                            [
                                [
                                    0,
                                    [
                                        3,
                                        0,
                                        false
                                    ],
                                    null
                                ]
                            ]
                        ],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            23,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": []
                    },
                    null
                ]
            ]
        },
        "question": "list top value items of name of dog breed name of breed ordered by age of dog descendingly",
        "gold_question": "list name of dog date of treatment of treatment with breed code of dog equal to ( breed code top value items of of dog for each breed code ordered by the total number of dog ascendingly )",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "name",
            "of",
            "dog",
            "breed",
            "name",
            "of",
            "breed",
            "ordered",
            "by",
            "age",
            "of",
            "dog",
            "descendingly"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Virginia'",
        "query_toks": [
            "SELECT",
            "T1.first_name",
            ",",
            "T2.name",
            "FROM",
            "Owners",
            "AS",
            "T1",
            "JOIN",
            "Dogs",
            "AS",
            "T2",
            "ON",
            "T1.owner_id",
            "=",
            "T2.owner_id",
            "WHERE",
            "T1.state",
            "=",
            "'Virginia",
            "'"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "first_name",
            ",",
            "t2",
            ".",
            "name",
            "from",
            "owners",
            "as",
            "t1",
            "join",
            "dogs",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "owner_id",
            "=",
            "t2",
            ".",
            "owner_id",
            "where",
            "t1",
            ".",
            "state",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            21,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ],
                    [
                        "table_unit",
                        5
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                25,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            15,
                            false
                        ],
                        null
                    ],
                    "\"Virginia\"",
                    null
                ]
            ]
        },
        "question": "list first name of owner name of dog with state of owner equal to value",
        "gold_question": "list first name of owner name of dog with state of owner equal to value",
        "question_toks": [
            "list",
            "first",
            "name",
            "of",
            "owner",
            "name",
            "of",
            "dog",
            "with",
            "state",
            "of",
            "owner",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Virginia'",
        "query_toks": [
            "SELECT",
            "T1.first_name",
            ",",
            "T2.name",
            "FROM",
            "Owners",
            "AS",
            "T1",
            "JOIN",
            "Dogs",
            "AS",
            "T2",
            "ON",
            "T1.owner_id",
            "=",
            "T2.owner_id",
            "WHERE",
            "T1.state",
            "=",
            "'Virginia",
            "'"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "first_name",
            ",",
            "t2",
            ".",
            "name",
            "from",
            "owners",
            "as",
            "t1",
            "join",
            "dogs",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "owner_id",
            "=",
            "t2",
            ".",
            "owner_id",
            "where",
            "t1",
            ".",
            "state",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            21,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ],
                    [
                        "table_unit",
                        5
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                25,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            15,
                            false
                        ],
                        null
                    ],
                    "\"Virginia\"",
                    null
                ]
            ]
        },
        "question": "list first name of owner name of dog with state of owner equal to value",
        "gold_question": "list first name of owner name of dog with state of owner equal to value",
        "question_toks": [
            "list",
            "first",
            "name",
            "of",
            "owner",
            "name",
            "of",
            "dog",
            "with",
            "state",
            "of",
            "owner",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT DISTINCT T1.date_arrived ,  T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id",
        "query_toks": [
            "SELECT",
            "DISTINCT",
            "T1.date_arrived",
            ",",
            "T1.date_departed",
            "FROM",
            "Dogs",
            "AS",
            "T1",
            "JOIN",
            "Treatments",
            "AS",
            "T2",
            "ON",
            "T1.dog_id",
            "=",
            "T2.dog_id"
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "t1",
            ".",
            "date_arrived",
            ",",
            "t1",
            ".",
            "date_departed",
            "from",
            "dogs",
            "as",
            "t1",
            "join",
            "treatments",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "dog_id",
            "=",
            "t2",
            ".",
            "dog_id"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                20,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            45,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        5
                    ],
                    [
                        "table_unit",
                        7
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                30,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                32,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list date arrive of dog date depart of dog",
        "gold_question": "list date arrive of dog date depart of dog",
        "question_toks": [
            "list",
            "date",
            "arrive",
            "of",
            "dog",
            "date",
            "depart",
            "of",
            "dog"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT DISTINCT T1.date_arrived ,  T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id",
        "query_toks": [
            "SELECT",
            "DISTINCT",
            "T1.date_arrived",
            ",",
            "T1.date_departed",
            "FROM",
            "Dogs",
            "AS",
            "T1",
            "JOIN",
            "Treatments",
            "AS",
            "T2",
            "ON",
            "T1.dog_id",
            "=",
            "T2.dog_id"
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "t1",
            ".",
            "date_arrived",
            ",",
            "t1",
            ".",
            "date_departed",
            "from",
            "dogs",
            "as",
            "t1",
            "join",
            "treatments",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "dog_id",
            "=",
            "t2",
            ".",
            "dog_id"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                20,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            45,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        5
                    ],
                    [
                        "table_unit",
                        7
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                30,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                32,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list date arrive of dog date depart of dog",
        "gold_question": "list date arrive of dog date depart of dog",
        "question_toks": [
            "list",
            "date",
            "arrive",
            "of",
            "dog",
            "date",
            "depart",
            "of",
            "dog"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs )",
        "query_toks": [
            "SELECT",
            "T1.last_name",
            "FROM",
            "Owners",
            "AS",
            "T1",
            "JOIN",
            "Dogs",
            "AS",
            "T2",
            "ON",
            "T1.owner_id",
            "=",
            "T2.owner_id",
            "WHERE",
            "T2.age",
            "=",
            "(",
            "SELECT",
            "max",
            "(",
            "age",
            ")",
            "FROM",
            "Dogs",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "last_name",
            "from",
            "owners",
            "as",
            "t1",
            "join",
            "dogs",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "owner_id",
            "=",
            "t2",
            ".",
            "owner_id",
            "where",
            "t2",
            ".",
            "age",
            "=",
            "(",
            "select",
            "max",
            "(",
            "age",
            ")",
            "from",
            "dogs",
            ")"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            21,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ],
                    [
                        "table_unit",
                        5
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            26,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    5
                                ]
                            ]
                        },
                        "groupby": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderby": [],
                        "select": [
                            false,
                            [
                                [
                                    1,
                                    [
                                        0,
                                        [
                                            0,
                                            26,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": []
                    },
                    null
                ]
            ]
        },
        "question": "list top value items of last name of owner ordered by age of dog ascendingly",
        "gold_question": "list last name of owner with age of dog equal to ( the maximum of age of dog )",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "last",
            "name",
            "of",
            "owner",
            "ordered",
            "by",
            "age",
            "of",
            "dog",
            "ascendingly"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs )",
        "query_toks": [
            "SELECT",
            "T1.last_name",
            "FROM",
            "Owners",
            "AS",
            "T1",
            "JOIN",
            "Dogs",
            "AS",
            "T2",
            "ON",
            "T1.owner_id",
            "=",
            "T2.owner_id",
            "WHERE",
            "T2.age",
            "=",
            "(",
            "SELECT",
            "max",
            "(",
            "age",
            ")",
            "FROM",
            "Dogs",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "last_name",
            "from",
            "owners",
            "as",
            "t1",
            "join",
            "dogs",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "owner_id",
            "=",
            "t2",
            ".",
            "owner_id",
            "where",
            "t2",
            ".",
            "age",
            "=",
            "(",
            "select",
            "max",
            "(",
            "age",
            ")",
            "from",
            "dogs",
            ")"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            21,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ],
                    [
                        "table_unit",
                        5
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            26,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    5
                                ]
                            ]
                        },
                        "groupby": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderby": [],
                        "select": [
                            false,
                            [
                                [
                                    1,
                                    [
                                        0,
                                        [
                                            0,
                                            26,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": []
                    },
                    null
                ]
            ]
        },
        "question": "list top value items of last name of owner ordered by age of dog ascendingly",
        "gold_question": "list last name of owner with age of dog equal to ( the maximum of age of dog )",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "last",
            "name",
            "of",
            "owner",
            "ordered",
            "by",
            "age",
            "of",
            "dog",
            "ascendingly"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT email_address FROM Professionals WHERE state  =  'Hawaii' OR state  =  'Wisconsin'",
        "query_toks": [
            "SELECT",
            "email_address",
            "FROM",
            "Professionals",
            "WHERE",
            "state",
            "=",
            "'Hawaii",
            "'",
            "OR",
            "state",
            "=",
            "'Wisconsin",
            "'"
        ],
        "query_toks_no_value": [
            "select",
            "email_address",
            "from",
            "professionals",
            "where",
            "state",
            "=",
            "value",
            "or",
            "state",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                41,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            38,
                            false
                        ],
                        null
                    ],
                    "\"Hawaii\"",
                    null
                ],
                "or",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            38,
                            false
                        ],
                        null
                    ],
                    "\"Wisconsin\"",
                    null
                ]
            ]
        },
        "question": "list email addres of professional with state equal to value or state equal to value",
        "gold_question": "list email addres of professional with state equal to value or state equal to value",
        "question_toks": [
            "list",
            "email",
            "addres",
            "of",
            "professional",
            "with",
            "state",
            "equal",
            "to",
            "value",
            "or",
            "state",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT email_address FROM Professionals WHERE state  =  'Hawaii' OR state  =  'Wisconsin'",
        "query_toks": [
            "SELECT",
            "email_address",
            "FROM",
            "Professionals",
            "WHERE",
            "state",
            "=",
            "'Hawaii",
            "'",
            "OR",
            "state",
            "=",
            "'Wisconsin",
            "'"
        ],
        "query_toks_no_value": [
            "select",
            "email_address",
            "from",
            "professionals",
            "where",
            "state",
            "=",
            "value",
            "or",
            "state",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                41,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            38,
                            false
                        ],
                        null
                    ],
                    "\"Hawaii\"",
                    null
                ],
                "or",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            38,
                            false
                        ],
                        null
                    ],
                    "\"Wisconsin\"",
                    null
                ]
            ]
        },
        "question": "list email addres of professional with state equal to value or state equal to value",
        "gold_question": "list email addres of professional with state equal to value or state equal to value",
        "question_toks": [
            "list",
            "email",
            "addres",
            "of",
            "professional",
            "with",
            "state",
            "equal",
            "to",
            "value",
            "or",
            "state",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT date_arrived ,  date_departed FROM Dogs",
        "query_toks": [
            "SELECT",
            "date_arrived",
            ",",
            "date_departed",
            "FROM",
            "Dogs"
        ],
        "query_toks_no_value": [
            "select",
            "date_arrived",
            ",",
            "date_departed",
            "from",
            "dogs"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                30,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                32,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list date arrive date depart of dog",
        "gold_question": "list date arrive date depart of dog",
        "question_toks": [
            "list",
            "date",
            "arrive",
            "date",
            "depart",
            "of",
            "dog"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT date_arrived ,  date_departed FROM Dogs",
        "query_toks": [
            "SELECT",
            "date_arrived",
            ",",
            "date_departed",
            "FROM",
            "Dogs"
        ],
        "query_toks_no_value": [
            "select",
            "date_arrived",
            ",",
            "date_departed",
            "from",
            "dogs"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                30,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                32,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list date arrive date depart of dog",
        "gold_question": "list date arrive date depart of dog",
        "question_toks": [
            "list",
            "date",
            "arrive",
            "date",
            "depart",
            "of",
            "dog"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT count(DISTINCT dog_id) FROM Treatments",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "DISTINCT",
            "dog_id",
            ")",
            "FROM",
            "Treatments"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "distinct",
            "dog_id",
            ")",
            "from",
            "treatments"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        7
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                45,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list the number of dog id of treatment",
        "gold_question": "list the number of dog id of treatment",
        "question_toks": [
            "list",
            "the",
            "number",
            "of",
            "dog",
            "id",
            "of",
            "treatment"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT count(DISTINCT dog_id) FROM Treatments",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "DISTINCT",
            "dog_id",
            ")",
            "FROM",
            "Treatments"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "distinct",
            "dog_id",
            ")",
            "from",
            "treatments"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        7
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                45,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list the number of dog id of treatment",
        "gold_question": "list the number of dog id of treatment",
        "question_toks": [
            "list",
            "the",
            "number",
            "of",
            "dog",
            "id",
            "of",
            "treatment"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT count(DISTINCT professional_id) FROM Treatments",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "DISTINCT",
            "professional_id",
            ")",
            "FROM",
            "Treatments"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "distinct",
            "professional_id",
            ")",
            "from",
            "treatments"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        7
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                46,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list the number of professional id of treatment",
        "gold_question": "list the number of professional id of treatment",
        "question_toks": [
            "list",
            "the",
            "number",
            "of",
            "professional",
            "id",
            "of",
            "treatment"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT count(DISTINCT professional_id) FROM Treatments",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "DISTINCT",
            "professional_id",
            ")",
            "FROM",
            "Treatments"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "distinct",
            "professional_id",
            ")",
            "from",
            "treatments"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        7
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                46,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list the number of professional id of treatment",
        "gold_question": "list the number of professional id of treatment",
        "question_toks": [
            "list",
            "the",
            "number",
            "of",
            "professional",
            "id",
            "of",
            "treatment"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%West%'",
        "query_toks": [
            "SELECT",
            "role_code",
            ",",
            "street",
            ",",
            "city",
            ",",
            "state",
            "FROM",
            "professionals",
            "WHERE",
            "city",
            "LIKE",
            "'",
            "%",
            "West",
            "%",
            "'"
        ],
        "query_toks_no_value": [
            "select",
            "role_code",
            ",",
            "street",
            ",",
            "city",
            ",",
            "state",
            "from",
            "professionals",
            "where",
            "city",
            "like",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                34,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                36,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                37,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                38,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    9,
                    [
                        0,
                        [
                            0,
                            37,
                            false
                        ],
                        null
                    ],
                    "\"%West%\"",
                    null
                ]
            ]
        },
        "question": "list role code street city state of professional with city formatted as value",
        "gold_question": "list role code street city state of professional with city formatted as value",
        "question_toks": [
            "list",
            "role",
            "code",
            "street",
            "city",
            "state",
            "of",
            "professional",
            "with",
            "city",
            "formatted",
            "as",
            "value"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%West%'",
        "query_toks": [
            "SELECT",
            "role_code",
            ",",
            "street",
            ",",
            "city",
            ",",
            "state",
            "FROM",
            "professionals",
            "WHERE",
            "city",
            "LIKE",
            "'",
            "%",
            "West",
            "%",
            "'"
        ],
        "query_toks_no_value": [
            "select",
            "role_code",
            ",",
            "street",
            ",",
            "city",
            ",",
            "state",
            "from",
            "professionals",
            "where",
            "city",
            "like",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                34,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                36,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                37,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                38,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    9,
                    [
                        0,
                        [
                            0,
                            37,
                            false
                        ],
                        null
                    ],
                    "\"%West%\"",
                    null
                ]
            ]
        },
        "question": "list role code street city state of professional with city formatted as value",
        "gold_question": "list role code street city state of professional with city formatted as value",
        "question_toks": [
            "list",
            "role",
            "code",
            "street",
            "city",
            "state",
            "of",
            "professional",
            "with",
            "city",
            "formatted",
            "as",
            "value"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE '%North%'",
        "query_toks": [
            "SELECT",
            "first_name",
            ",",
            "last_name",
            ",",
            "email_address",
            "FROM",
            "Owners",
            "WHERE",
            "state",
            "LIKE",
            "'",
            "%",
            "North",
            "%",
            "'"
        ],
        "query_toks_no_value": [
            "select",
            "first_name",
            ",",
            "last_name",
            ",",
            "email_address",
            "from",
            "owners",
            "where",
            "state",
            "like",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                17,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    9,
                    [
                        0,
                        [
                            0,
                            15,
                            false
                        ],
                        null
                    ],
                    "\"%North%\"",
                    null
                ]
            ]
        },
        "question": "list first name last name email addres of owner with state formatted as value",
        "gold_question": "list first name last name email addres of owner with state formatted as value",
        "question_toks": [
            "list",
            "first",
            "name",
            "last",
            "name",
            "email",
            "addres",
            "of",
            "owner",
            "with",
            "state",
            "formatted",
            "as",
            "value"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE '%North%'",
        "query_toks": [
            "SELECT",
            "first_name",
            ",",
            "last_name",
            ",",
            "email_address",
            "FROM",
            "Owners",
            "WHERE",
            "state",
            "LIKE",
            "'",
            "%",
            "North",
            "%",
            "'"
        ],
        "query_toks_no_value": [
            "select",
            "first_name",
            ",",
            "last_name",
            ",",
            "email_address",
            "from",
            "owners",
            "where",
            "state",
            "like",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                17,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    9,
                    [
                        0,
                        [
                            0,
                            15,
                            false
                        ],
                        null
                    ],
                    "\"%North%\"",
                    null
                ]
            ]
        },
        "question": "list first name last name email addres of owner with state formatted as value",
        "gold_question": "list first name last name email addres of owner with state formatted as value",
        "question_toks": [
            "list",
            "first",
            "name",
            "last",
            "name",
            "email",
            "addres",
            "of",
            "owner",
            "with",
            "state",
            "formatted",
            "as",
            "value"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT count(*) FROM Dogs WHERE age  <  ( SELECT avg(age) FROM Dogs )",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "Dogs",
            "WHERE",
            "age",
            "<",
            "(",
            "SELECT",
            "avg",
            "(",
            "age",
            ")",
            "FROM",
            "Dogs",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "dogs",
            "where",
            "age",
            "<",
            "(",
            "select",
            "avg",
            "(",
            "age",
            ")",
            "from",
            "dogs",
            ")"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    4,
                    [
                        0,
                        [
                            0,
                            26,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    5
                                ]
                            ]
                        },
                        "groupby": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderby": [],
                        "select": [
                            false,
                            [
                                [
                                    5,
                                    [
                                        0,
                                        [
                                            0,
                                            26,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": []
                    },
                    null
                ]
            ]
        },
        "question": "list the total number of dog with age less than ( the average of age of dog )",
        "gold_question": "list the total number of dog with age less than ( the average of age of dog )",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "dog",
            "with",
            "age",
            "less",
            "than",
            "(",
            "the",
            "average",
            "of",
            "age",
            "of",
            "dog",
            ")"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT count(*) FROM Dogs WHERE age  <  ( SELECT avg(age) FROM Dogs )",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "Dogs",
            "WHERE",
            "age",
            "<",
            "(",
            "SELECT",
            "avg",
            "(",
            "age",
            ")",
            "FROM",
            "Dogs",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "dogs",
            "where",
            "age",
            "<",
            "(",
            "select",
            "avg",
            "(",
            "age",
            ")",
            "from",
            "dogs",
            ")"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    4,
                    [
                        0,
                        [
                            0,
                            26,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    5
                                ]
                            ]
                        },
                        "groupby": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderby": [],
                        "select": [
                            false,
                            [
                                [
                                    5,
                                    [
                                        0,
                                        [
                                            0,
                                            26,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": []
                    },
                    null
                ]
            ]
        },
        "question": "list the total number of dog with age less than ( the average of age of dog )",
        "gold_question": "list the total number of dog with age less than ( the average of age of dog )",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "dog",
            "with",
            "age",
            "less",
            "than",
            "(",
            "the",
            "average",
            "of",
            "age",
            "of",
            "dog",
            ")"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "cost_of_treatment",
            "FROM",
            "Treatments",
            "ORDER",
            "BY",
            "date_of_treatment",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "cost_of_treatment",
            "from",
            "treatments",
            "order",
            "by",
            "date_of_treatment",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        7
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            48,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                49,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of cost of treatment of treatment ordered by date of treatment descendingly",
        "gold_question": "list top value items of cost of treatment of treatment ordered by date of treatment descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "cost",
            "of",
            "treatment",
            "of",
            "treatment",
            "ordered",
            "by",
            "date",
            "of",
            "treatment",
            "descendingly"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "cost_of_treatment",
            "FROM",
            "Treatments",
            "ORDER",
            "BY",
            "date_of_treatment",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "cost_of_treatment",
            "from",
            "treatments",
            "order",
            "by",
            "date_of_treatment",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        7
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            48,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                49,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of cost of treatment of treatment ordered by date of treatment descendingly",
        "gold_question": "list top value items of cost of treatment of treatment ordered by date of treatment descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "cost",
            "of",
            "treatment",
            "of",
            "treatment",
            "ordered",
            "by",
            "date",
            "of",
            "treatment",
            "descendingly"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT count(*) FROM Dogs WHERE dog_id NOT IN ( SELECT dog_id FROM Treatments )",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "Dogs",
            "WHERE",
            "dog_id",
            "NOT",
            "IN",
            "(",
            "SELECT",
            "dog_id",
            "FROM",
            "Treatments",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "dogs",
            "where",
            "dog_id",
            "not",
            "in",
            "(",
            "select",
            "dog_id",
            "from",
            "treatments",
            ")"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    true,
                    8,
                    [
                        0,
                        [
                            0,
                            20,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    7
                                ]
                            ]
                        },
                        "groupby": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderby": [],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            45,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": []
                    },
                    null
                ]
            ]
        },
        "question": "list the total number of dog with dog id that is not in ( dog id of treatment )",
        "gold_question": "list the total number of dog with dog id that is not in ( dog id of treatment )",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "dog",
            "with",
            "dog",
            "id",
            "that",
            "is",
            "not",
            "in",
            "(",
            "dog",
            "id",
            "of",
            "treatment",
            ")"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "select count(*) from dogs where dog_id not in ( select dog_id from treatments )",
        "query_toks": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "dogs",
            "where",
            "dog_id",
            "not",
            "in",
            "(",
            "select",
            "dog_id",
            "from",
            "treatments",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "dogs",
            "where",
            "dog_id",
            "not",
            "in",
            "(",
            "select",
            "dog_id",
            "from",
            "treatments",
            ")"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    true,
                    8,
                    [
                        0,
                        [
                            0,
                            20,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    7
                                ]
                            ]
                        },
                        "groupby": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderby": [],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            45,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": []
                    },
                    null
                ]
            ]
        },
        "question": "list the total number of dog with dog id that is not in ( dog id of treatment )",
        "gold_question": "list the total number of dog with dog id that is not in ( dog id of treatment )",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "dog",
            "with",
            "dog",
            "id",
            "that",
            "is",
            "not",
            "in",
            "(",
            "dog",
            "id",
            "of",
            "treatment",
            ")"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs )",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "Owners",
            "WHERE",
            "owner_id",
            "NOT",
            "IN",
            "(",
            "SELECT",
            "owner_id",
            "FROM",
            "Dogs",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "owners",
            "where",
            "owner_id",
            "not",
            "in",
            "(",
            "select",
            "owner_id",
            "from",
            "dogs",
            ")"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    true,
                    8,
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    5
                                ]
                            ]
                        },
                        "groupby": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderby": [],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            21,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": []
                    },
                    null
                ]
            ]
        },
        "question": "list the total number of owner with owner id that is not in ( owner id of dog )",
        "gold_question": "list the total number of owner with owner id that is not in ( owner id of dog )",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "owner",
            "with",
            "owner",
            "id",
            "that",
            "is",
            "not",
            "in",
            "(",
            "owner",
            "id",
            "of",
            "dog",
            ")"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs )",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "Owners",
            "WHERE",
            "owner_id",
            "NOT",
            "IN",
            "(",
            "SELECT",
            "owner_id",
            "FROM",
            "Dogs",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "owners",
            "where",
            "owner_id",
            "not",
            "in",
            "(",
            "select",
            "owner_id",
            "from",
            "dogs",
            ")"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    true,
                    8,
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    5
                                ]
                            ]
                        },
                        "groupby": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderby": [],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            21,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": []
                    },
                    null
                ]
            ]
        },
        "question": "list the total number of owner with owner id that is not in ( owner id of dog )",
        "gold_question": "list the total number of owner with owner id that is not in ( owner id of dog )",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "owner",
            "with",
            "owner",
            "id",
            "that",
            "is",
            "not",
            "in",
            "(",
            "owner",
            "id",
            "of",
            "dog",
            ")"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments )",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "Professionals",
            "WHERE",
            "professional_id",
            "NOT",
            "IN",
            "(",
            "SELECT",
            "professional_id",
            "FROM",
            "Treatments",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "professionals",
            "where",
            "professional_id",
            "not",
            "in",
            "(",
            "select",
            "professional_id",
            "from",
            "treatments",
            ")"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    true,
                    8,
                    [
                        0,
                        [
                            0,
                            33,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    7
                                ]
                            ]
                        },
                        "groupby": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderby": [],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            46,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": []
                    },
                    null
                ]
            ]
        },
        "question": "list the total number of professional with professional id that is not in ( professional id of treatment )",
        "gold_question": "list the total number of professional with professional id that is not in ( professional id of treatment )",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "professional",
            "with",
            "professional",
            "id",
            "that",
            "is",
            "not",
            "in",
            "(",
            "professional",
            "id",
            "of",
            "treatment",
            ")"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments )",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "Professionals",
            "WHERE",
            "professional_id",
            "NOT",
            "IN",
            "(",
            "SELECT",
            "professional_id",
            "FROM",
            "Treatments",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "professionals",
            "where",
            "professional_id",
            "not",
            "in",
            "(",
            "select",
            "professional_id",
            "from",
            "treatments",
            ")"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    true,
                    8,
                    [
                        0,
                        [
                            0,
                            33,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    7
                                ]
                            ]
                        },
                        "groupby": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderby": [],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            46,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": []
                    },
                    null
                ]
            ]
        },
        "question": "list the total number of professional with professional id that is not in ( professional id of treatment )",
        "gold_question": "list the total number of professional with professional id that is not in ( professional id of treatment )",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "professional",
            "with",
            "professional",
            "id",
            "that",
            "is",
            "not",
            "in",
            "(",
            "professional",
            "id",
            "of",
            "treatment",
            ")"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1",
        "query_toks": [
            "SELECT",
            "name",
            ",",
            "age",
            ",",
            "weight",
            "FROM",
            "Dogs",
            "WHERE",
            "abandoned_yn",
            "=",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "age",
            ",",
            "weight",
            "from",
            "dogs",
            "where",
            "abandoned_yn",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                25,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                26,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                29,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            22,
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ]
        },
        "question": "list name age weight of dog with abandoned yes or no equal to value or abandoned yes or no equal to value",
        "gold_question": "list name age weight of dog with abandoned yes or no equal to value",
        "question_toks": [
            "list",
            "name",
            "age",
            "weight",
            "of",
            "dog",
            "with",
            "abandoned",
            "yes",
            "or",
            "no",
            "equal",
            "to",
            "value",
            "or",
            "abandoned",
            "yes",
            "or",
            "no",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1",
        "query_toks": [
            "SELECT",
            "name",
            ",",
            "age",
            ",",
            "weight",
            "FROM",
            "Dogs",
            "WHERE",
            "abandoned_yn",
            "=",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "age",
            ",",
            "weight",
            "from",
            "dogs",
            "where",
            "abandoned_yn",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                25,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                26,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                29,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            22,
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ]
        },
        "question": "list name age weight of dog with abandoned yes or no equal to value or abandoned yes or no equal to value",
        "gold_question": "list name age weight of dog with abandoned yes or no equal to value",
        "question_toks": [
            "list",
            "name",
            "age",
            "weight",
            "of",
            "dog",
            "with",
            "abandoned",
            "yes",
            "or",
            "no",
            "equal",
            "to",
            "value",
            "or",
            "abandoned",
            "yes",
            "or",
            "no",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT avg(age) FROM Dogs",
        "query_toks": [
            "SELECT",
            "avg",
            "(",
            "age",
            ")",
            "FROM",
            "Dogs"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "age",
            ")",
            "from",
            "dogs"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                26,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list the average of age of dog",
        "gold_question": "list the average of age of dog",
        "question_toks": [
            "list",
            "the",
            "average",
            "of",
            "age",
            "of",
            "dog"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT avg(age) FROM Dogs",
        "query_toks": [
            "SELECT",
            "avg",
            "(",
            "age",
            ")",
            "FROM",
            "Dogs"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "age",
            ")",
            "from",
            "dogs"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                26,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list the average of age of dog",
        "gold_question": "list the average of age of dog",
        "question_toks": [
            "list",
            "the",
            "average",
            "of",
            "age",
            "of",
            "dog"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT max(age) FROM Dogs",
        "query_toks": [
            "SELECT",
            "max",
            "(",
            "age",
            ")",
            "FROM",
            "Dogs"
        ],
        "query_toks_no_value": [
            "select",
            "max",
            "(",
            "age",
            ")",
            "from",
            "dogs"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                26,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of age of dog ordered by age descendingly",
        "gold_question": "list the maximum of age of dog",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "age",
            "of",
            "dog",
            "ordered",
            "by",
            "age",
            "descendingly"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT max(age) FROM Dogs",
        "query_toks": [
            "SELECT",
            "max",
            "(",
            "age",
            ")",
            "FROM",
            "Dogs"
        ],
        "query_toks_no_value": [
            "select",
            "max",
            "(",
            "age",
            ")",
            "from",
            "dogs"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                26,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of age of dog ordered by age descendingly",
        "gold_question": "list the maximum of age of dog",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "age",
            "of",
            "dog",
            "ordered",
            "by",
            "age",
            "descendingly"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT charge_type ,  charge_amount FROM Charges",
        "query_toks": [
            "SELECT",
            "charge_type",
            ",",
            "charge_amount",
            "FROM",
            "Charges"
        ],
        "query_toks_no_value": [
            "select",
            "charge_type",
            ",",
            "charge_amount",
            "from",
            "charges"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list charge type charge amount of charge",
        "gold_question": "list charge type charge amount of charge",
        "question_toks": [
            "list",
            "charge",
            "type",
            "charge",
            "amount",
            "of",
            "charge"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT charge_type ,  charge_amount FROM Charges",
        "query_toks": [
            "SELECT",
            "charge_type",
            ",",
            "charge_amount",
            "FROM",
            "Charges"
        ],
        "query_toks_no_value": [
            "select",
            "charge_type",
            ",",
            "charge_amount",
            "from",
            "charges"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list charge type charge amount of charge",
        "gold_question": "list charge type charge amount of charge",
        "question_toks": [
            "list",
            "charge",
            "type",
            "charge",
            "amount",
            "of",
            "charge"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT max(charge_amount) FROM Charges",
        "query_toks": [
            "SELECT",
            "max",
            "(",
            "charge_amount",
            ")",
            "FROM",
            "Charges"
        ],
        "query_toks_no_value": [
            "select",
            "max",
            "(",
            "charge_amount",
            ")",
            "from",
            "charges"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of charge type the maximum of charge amount of charge for each charge type ordered by the sum of charge amount descendingly",
        "gold_question": "list the maximum of charge amount of charge",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "charge",
            "type",
            "the",
            "maximum",
            "of",
            "charge",
            "amount",
            "of",
            "charge",
            "for",
            "each",
            "charge",
            "type",
            "ordered",
            "by",
            "the",
            "sum",
            "of",
            "charge",
            "amount",
            "descendingly"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT max(charge_amount) FROM Charges",
        "query_toks": [
            "SELECT",
            "max",
            "(",
            "charge_amount",
            ")",
            "FROM",
            "Charges"
        ],
        "query_toks_no_value": [
            "select",
            "max",
            "(",
            "charge_amount",
            ")",
            "from",
            "charges"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of charge amount of charge ordered by charge type descendingly",
        "gold_question": "list the maximum of charge amount of charge",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "charge",
            "amount",
            "of",
            "charge",
            "ordered",
            "by",
            "charge",
            "type",
            "descendingly"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT email_address ,  cell_number ,  home_phone FROM professionals",
        "query_toks": [
            "SELECT",
            "email_address",
            ",",
            "cell_number",
            ",",
            "home_phone",
            "FROM",
            "professionals"
        ],
        "query_toks_no_value": [
            "select",
            "email_address",
            ",",
            "cell_number",
            ",",
            "home_phone",
            "from",
            "professionals"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                41,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                43,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                42,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list email addres cell number home phone of professional",
        "gold_question": "list email addres cell number home phone of professional",
        "question_toks": [
            "list",
            "email",
            "addres",
            "cell",
            "number",
            "home",
            "phone",
            "of",
            "professional"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT email_address ,  cell_number ,  home_phone FROM professionals",
        "query_toks": [
            "SELECT",
            "email_address",
            ",",
            "cell_number",
            ",",
            "home_phone",
            "FROM",
            "professionals"
        ],
        "query_toks_no_value": [
            "select",
            "email_address",
            ",",
            "cell_number",
            ",",
            "home_phone",
            "from",
            "professionals"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                41,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                43,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                42,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list email addres cell number home phone of professional",
        "gold_question": "list email addres cell number home phone of professional",
        "question_toks": [
            "list",
            "email",
            "addres",
            "cell",
            "number",
            "home",
            "phone",
            "of",
            "professional"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT DISTINCT breed_code ,  size_code FROM dogs",
        "query_toks": [
            "SELECT",
            "DISTINCT",
            "breed_code",
            ",",
            "size_code",
            "FROM",
            "dogs"
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "breed_code",
            ",",
            "size_code",
            "from",
            "dogs"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                23,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                24,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list breed name of breed size code of size",
        "gold_question": "list breed code size code of dog",
        "question_toks": [
            "list",
            "breed",
            "name",
            "of",
            "breed",
            "size",
            "code",
            "of",
            "size"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT DISTINCT breed_code ,  size_code FROM dogs",
        "query_toks": [
            "SELECT",
            "DISTINCT",
            "breed_code",
            ",",
            "size_code",
            "FROM",
            "dogs"
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "breed_code",
            ",",
            "size_code",
            "from",
            "dogs"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                23,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                24,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list breed code size code of dog",
        "gold_question": "list breed code size code of dog",
        "question_toks": [
            "list",
            "breed",
            "code",
            "size",
            "code",
            "of",
            "dog"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code",
        "query_toks": [
            "SELECT",
            "DISTINCT",
            "T1.first_name",
            ",",
            "T3.treatment_type_description",
            "FROM",
            "professionals",
            "AS",
            "T1",
            "JOIN",
            "Treatments",
            "AS",
            "T2",
            "ON",
            "T1.professional_id",
            "=",
            "T2.professional_id",
            "JOIN",
            "Treatment_types",
            "AS",
            "T3",
            "ON",
            "T2.treatment_type_code",
            "=",
            "T3.treatment_type_code"
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "t1",
            ".",
            "first_name",
            ",",
            "t3",
            ".",
            "treatment_type_description",
            "from",
            "professionals",
            "as",
            "t1",
            "join",
            "treatments",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "professional_id",
            "=",
            "t2",
            ".",
            "professional_id",
            "join",
            "treatment_types",
            "as",
            "t3",
            "on",
            "t2",
            ".",
            "treatment_type_code",
            "=",
            "t3",
            ".",
            "treatment_type_code"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                33,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            46,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                47,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ],
                    [
                        "table_unit",
                        7
                    ],
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                35,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list first name of professional treatment type description of treatment type",
        "gold_question": "list first name of professional treatment type description of treatment type",
        "question_toks": [
            "list",
            "first",
            "name",
            "of",
            "professional",
            "treatment",
            "type",
            "description",
            "of",
            "treatment",
            "type"
        ]
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code",
        "query_toks": [
            "SELECT",
            "DISTINCT",
            "T1.first_name",
            ",",
            "T3.treatment_type_description",
            "FROM",
            "professionals",
            "AS",
            "T1",
            "JOIN",
            "Treatments",
            "AS",
            "T2",
            "ON",
            "T1.professional_id",
            "=",
            "T2.professional_id",
            "JOIN",
            "Treatment_types",
            "AS",
            "T3",
            "ON",
            "T2.treatment_type_code",
            "=",
            "T3.treatment_type_code"
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "t1",
            ".",
            "first_name",
            ",",
            "t3",
            ".",
            "treatment_type_description",
            "from",
            "professionals",
            "as",
            "t1",
            "join",
            "treatments",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "professional_id",
            "=",
            "t2",
            ".",
            "professional_id",
            "join",
            "treatment_types",
            "as",
            "t3",
            "on",
            "t2",
            ".",
            "treatment_type_code",
            "=",
            "t3",
            ".",
            "treatment_type_code"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                33,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            46,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                47,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ],
                    [
                        "table_unit",
                        7
                    ],
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                35,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list first name of professional treatment type description of treatment type",
        "gold_question": "list first name of professional treatment type description of treatment type",
        "question_toks": [
            "list",
            "first",
            "name",
            "of",
            "professional",
            "treatment",
            "type",
            "description",
            "of",
            "treatment",
            "type"
        ]
    },
    {
        "db_id": "singer",
        "query": "SELECT count(*) FROM singer",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "singer"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "singer"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list the total number of singer",
        "gold_question": "list the total number of singer",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "singer"
        ]
    },
    {
        "db_id": "singer",
        "query": "SELECT count(*) FROM singer",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "singer"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "singer"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list the total number of singer",
        "gold_question": "list the total number of singer",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "singer"
        ]
    },
    {
        "db_id": "singer",
        "query": "SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC",
        "query_toks": [
            "SELECT",
            "Name",
            "FROM",
            "singer",
            "ORDER",
            "BY",
            "Net_Worth_Millions",
            "ASC"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "singer",
            "order",
            "by",
            "net_worth_millions",
            "asc"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list name of singer ordered by net worth million ascendingly",
        "gold_question": "list name of singer ordered by net worth million ascendingly",
        "question_toks": [
            "list",
            "name",
            "of",
            "singer",
            "ordered",
            "by",
            "net",
            "worth",
            "million",
            "ascendingly"
        ]
    },
    {
        "db_id": "singer",
        "query": "SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC",
        "query_toks": [
            "SELECT",
            "Name",
            "FROM",
            "singer",
            "ORDER",
            "BY",
            "Net_Worth_Millions",
            "ASC"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "singer",
            "order",
            "by",
            "net_worth_millions",
            "asc"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list name of singer ordered by net worth million ascendingly",
        "gold_question": "list name of singer ordered by net worth million ascendingly",
        "question_toks": [
            "list",
            "name",
            "of",
            "singer",
            "ordered",
            "by",
            "net",
            "worth",
            "million",
            "ascendingly"
        ]
    },
    {
        "db_id": "singer",
        "query": "SELECT Birth_Year ,  Citizenship FROM singer",
        "query_toks": [
            "SELECT",
            "Birth_Year",
            ",",
            "Citizenship",
            "FROM",
            "singer"
        ],
        "query_toks_no_value": [
            "select",
            "birth_year",
            ",",
            "citizenship",
            "from",
            "singer"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list birth year citizenship of singer",
        "gold_question": "list birth year citizenship of singer",
        "question_toks": [
            "list",
            "birth",
            "year",
            "citizenship",
            "of",
            "singer"
        ]
    },
    {
        "db_id": "singer",
        "query": "SELECT Birth_Year ,  Citizenship FROM singer",
        "query_toks": [
            "SELECT",
            "Birth_Year",
            ",",
            "Citizenship",
            "FROM",
            "singer"
        ],
        "query_toks_no_value": [
            "select",
            "birth_year",
            ",",
            "citizenship",
            "from",
            "singer"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list birth year citizenship of singer",
        "gold_question": "list birth year citizenship of singer",
        "question_toks": [
            "list",
            "birth",
            "year",
            "citizenship",
            "of",
            "singer"
        ]
    },
    {
        "db_id": "singer",
        "query": "SELECT Name FROM singer WHERE Citizenship != \"France\"",
        "query_toks": [
            "SELECT",
            "Name",
            "FROM",
            "singer",
            "WHERE",
            "Citizenship",
            "!",
            "=",
            "``",
            "France",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "singer",
            "where",
            "citizenship",
            "!",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "\"France\"",
                    null
                ]
            ]
        },
        "question": "list name of singer with citizenship not equal to value",
        "gold_question": "list name of singer with citizenship not equal to value",
        "question_toks": [
            "list",
            "name",
            "of",
            "singer",
            "with",
            "citizenship",
            "not",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "singer",
        "query": "SELECT Name FROM singer WHERE Citizenship != \"France\"",
        "query_toks": [
            "SELECT",
            "Name",
            "FROM",
            "singer",
            "WHERE",
            "Citizenship",
            "!",
            "=",
            "``",
            "France",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "singer",
            "where",
            "citizenship",
            "!",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "\"France\"",
                    null
                ]
            ]
        },
        "question": "list name of singer with citizenship not equal to value",
        "gold_question": "list name of singer with citizenship not equal to value",
        "question_toks": [
            "list",
            "name",
            "of",
            "singer",
            "with",
            "citizenship",
            "not",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "singer",
        "query": "SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949",
        "query_toks": [
            "SELECT",
            "Name",
            "FROM",
            "singer",
            "WHERE",
            "Birth_Year",
            "=",
            "1948",
            "OR",
            "Birth_Year",
            "=",
            "1949"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "singer",
            "where",
            "birth_year",
            "=",
            "value",
            "or",
            "birth_year",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ],
                    1948.0,
                    null
                ],
                "or",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ],
                    1949.0,
                    null
                ]
            ]
        },
        "question": "list name of singer with birth year equal to value or birth year equal to value",
        "gold_question": "list name of singer with birth year equal to value or birth year equal to value",
        "question_toks": [
            "list",
            "name",
            "of",
            "singer",
            "with",
            "birth",
            "year",
            "equal",
            "to",
            "value",
            "or",
            "birth",
            "year",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "singer",
        "query": "SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949",
        "query_toks": [
            "SELECT",
            "Name",
            "FROM",
            "singer",
            "WHERE",
            "Birth_Year",
            "=",
            "1948",
            "OR",
            "Birth_Year",
            "=",
            "1949"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "singer",
            "where",
            "birth_year",
            "=",
            "value",
            "or",
            "birth_year",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ],
                    1948.0,
                    null
                ],
                "or",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ],
                    1949.0,
                    null
                ]
            ]
        },
        "question": "list name of singer with birth year equal to value or birth year equal to value",
        "gold_question": "list name of singer with birth year equal to value or birth year equal to value",
        "question_toks": [
            "list",
            "name",
            "of",
            "singer",
            "with",
            "birth",
            "year",
            "equal",
            "to",
            "value",
            "or",
            "birth",
            "year",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "singer",
        "query": "SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "Name",
            "FROM",
            "singer",
            "ORDER",
            "BY",
            "Net_Worth_Millions",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "singer",
            "order",
            "by",
            "net_worth_millions",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of name of singer ordered by net worth million descendingly",
        "gold_question": "list top value items of name of singer ordered by net worth million descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "name",
            "of",
            "singer",
            "ordered",
            "by",
            "net",
            "worth",
            "million",
            "descendingly"
        ]
    },
    {
        "db_id": "singer",
        "query": "SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "Name",
            "FROM",
            "singer",
            "ORDER",
            "BY",
            "Net_Worth_Millions",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "singer",
            "order",
            "by",
            "net_worth_millions",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of name of singer ordered by net worth million descendingly",
        "gold_question": "list top value items of name of singer ordered by net worth million descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "name",
            "of",
            "singer",
            "ordered",
            "by",
            "net",
            "worth",
            "million",
            "descendingly"
        ]
    },
    {
        "db_id": "singer",
        "query": "SELECT Citizenship ,  COUNT(*) FROM singer GROUP BY Citizenship",
        "query_toks": [
            "SELECT",
            "Citizenship",
            ",",
            "COUNT",
            "(",
            "*",
            ")",
            "FROM",
            "singer",
            "GROUP",
            "BY",
            "Citizenship"
        ],
        "query_toks_no_value": [
            "select",
            "citizenship",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "singer",
            "group",
            "by",
            "citizenship"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    5,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list citizenship the total number of singer for each citizenship",
        "gold_question": "list citizenship the total number of singer for each citizenship",
        "question_toks": [
            "list",
            "citizenship",
            "the",
            "total",
            "number",
            "of",
            "singer",
            "for",
            "each",
            "citizenship"
        ]
    },
    {
        "db_id": "singer",
        "query": "SELECT Citizenship ,  COUNT(*) FROM singer GROUP BY Citizenship",
        "query_toks": [
            "SELECT",
            "Citizenship",
            ",",
            "COUNT",
            "(",
            "*",
            ")",
            "FROM",
            "singer",
            "GROUP",
            "BY",
            "Citizenship"
        ],
        "query_toks_no_value": [
            "select",
            "citizenship",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "singer",
            "group",
            "by",
            "citizenship"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    5,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list citizenship the total number of singer for each citizenship",
        "gold_question": "list citizenship the total number of singer for each citizenship",
        "question_toks": [
            "list",
            "citizenship",
            "the",
            "total",
            "number",
            "of",
            "singer",
            "for",
            "each",
            "citizenship"
        ]
    },
    {
        "db_id": "singer",
        "query": "SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "Citizenship",
            "FROM",
            "singer",
            "GROUP",
            "BY",
            "Citizenship",
            "ORDER",
            "BY",
            "COUNT",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "citizenship",
            "from",
            "singer",
            "group",
            "by",
            "citizenship",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    5,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of citizenship of singer for each citizenship ordered by the total number of singer descendingly",
        "gold_question": "list top value items of citizenship of singer for each citizenship ordered by the total number of singer descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "citizenship",
            "of",
            "singer",
            "for",
            "each",
            "citizenship",
            "ordered",
            "by",
            "the",
            "total",
            "number",
            "of",
            "singer",
            "descendingly"
        ]
    },
    {
        "db_id": "singer",
        "query": "select citizenship from singer group by citizenship order by count(*) desc limit 1",
        "query_toks": [
            "select",
            "citizenship",
            "from",
            "singer",
            "group",
            "by",
            "citizenship",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "citizenship",
            "from",
            "singer",
            "group",
            "by",
            "citizenship",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    5,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderby": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list top value items of citizenship of singer for each citizenship ordered by the total number of singer descendingly",
        "gold_question": "list top value items of citizenship of singer for each citizenship ordered by the total number of singer descendingly",
        "question_toks": [
            "list",
            "top",
            "value",
            "items",
            "of",
            "citizenship",
            "of",
            "singer",
            "for",
            "each",
            "citizenship",
            "ordered",
            "by",
            "the",
            "total",
            "number",
            "of",
            "singer",
            "descendingly"
        ]
    },
    {
        "db_id": "singer",
        "query": "SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship",
        "query_toks": [
            "SELECT",
            "Citizenship",
            ",",
            "max",
            "(",
            "Net_Worth_Millions",
            ")",
            "FROM",
            "singer",
            "GROUP",
            "BY",
            "Citizenship"
        ],
        "query_toks_no_value": [
            "select",
            "citizenship",
            ",",
            "max",
            "(",
            "net_worth_millions",
            ")",
            "from",
            "singer",
            "group",
            "by",
            "citizenship"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    5,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list citizenship the maximum of net worth million of singer for each citizenship",
        "gold_question": "list citizenship the maximum of net worth million of singer for each citizenship",
        "question_toks": [
            "list",
            "citizenship",
            "the",
            "maximum",
            "of",
            "net",
            "worth",
            "million",
            "of",
            "singer",
            "for",
            "each",
            "citizenship"
        ]
    },
    {
        "db_id": "singer",
        "query": "SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship",
        "query_toks": [
            "SELECT",
            "Citizenship",
            ",",
            "max",
            "(",
            "Net_Worth_Millions",
            ")",
            "FROM",
            "singer",
            "GROUP",
            "BY",
            "Citizenship"
        ],
        "query_toks_no_value": [
            "select",
            "citizenship",
            ",",
            "max",
            "(",
            "net_worth_millions",
            ")",
            "from",
            "singer",
            "group",
            "by",
            "citizenship"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    5,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list citizenship the maximum of net worth million of singer for each citizenship",
        "gold_question": "list citizenship the maximum of net worth million of singer for each citizenship",
        "question_toks": [
            "list",
            "citizenship",
            "the",
            "maximum",
            "of",
            "net",
            "worth",
            "million",
            "of",
            "singer",
            "for",
            "each",
            "citizenship"
        ]
    },
    {
        "db_id": "singer",
        "query": "SELECT T2.Title ,  T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID",
        "query_toks": [
            "SELECT",
            "T2.Title",
            ",",
            "T1.Name",
            "FROM",
            "singer",
            "AS",
            "T1",
            "JOIN",
            "song",
            "AS",
            "T2",
            "ON",
            "T1.Singer_ID",
            "=",
            "T2.Singer_ID"
        ],
        "query_toks_no_value": [
            "select",
            "t2",
            ".",
            "title",
            ",",
            "t1",
            ".",
            "name",
            "from",
            "singer",
            "as",
            "t1",
            "join",
            "song",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "singer_id",
            "=",
            "t2",
            ".",
            "singer_id"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list title of song name of singer",
        "gold_question": "list title of song name of singer",
        "question_toks": [
            "list",
            "title",
            "of",
            "song",
            "name",
            "of",
            "singer"
        ]
    },
    {
        "db_id": "singer",
        "query": "SELECT T2.Title ,  T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID",
        "query_toks": [
            "SELECT",
            "T2.Title",
            ",",
            "T1.Name",
            "FROM",
            "singer",
            "AS",
            "T1",
            "JOIN",
            "song",
            "AS",
            "T2",
            "ON",
            "T1.Singer_ID",
            "=",
            "T2.Singer_ID"
        ],
        "query_toks_no_value": [
            "select",
            "t2",
            ".",
            "title",
            ",",
            "t1",
            ".",
            "name",
            "from",
            "singer",
            "as",
            "t1",
            "join",
            "song",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "singer_id",
            "=",
            "t2",
            ".",
            "singer_id"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list title of song name of singer",
        "gold_question": "list title of song name of singer",
        "question_toks": [
            "list",
            "title",
            "of",
            "song",
            "name",
            "of",
            "singer"
        ]
    },
    {
        "db_id": "singer",
        "query": "SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales  >  300000",
        "query_toks": [
            "SELECT",
            "DISTINCT",
            "T1.Name",
            "FROM",
            "singer",
            "AS",
            "T1",
            "JOIN",
            "song",
            "AS",
            "T2",
            "ON",
            "T1.Singer_ID",
            "=",
            "T2.Singer_ID",
            "WHERE",
            "T2.Sales",
            ">",
            "300000"
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "t1",
            ".",
            "name",
            "from",
            "singer",
            "as",
            "t1",
            "join",
            "song",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "singer_id",
            "=",
            "t2",
            ".",
            "singer_id",
            "where",
            "t2",
            ".",
            "sales",
            ">",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ],
                    300000.0,
                    null
                ]
            ]
        },
        "question": "list name of singer with sale of song greater than value",
        "gold_question": "list name of singer with sale of song greater than value",
        "question_toks": [
            "list",
            "name",
            "of",
            "singer",
            "with",
            "sale",
            "of",
            "song",
            "greater",
            "than",
            "value"
        ]
    },
    {
        "db_id": "singer",
        "query": "SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales  >  300000",
        "query_toks": [
            "SELECT",
            "DISTINCT",
            "T1.Name",
            "FROM",
            "singer",
            "AS",
            "T1",
            "JOIN",
            "song",
            "AS",
            "T2",
            "ON",
            "T1.Singer_ID",
            "=",
            "T2.Singer_ID",
            "WHERE",
            "T2.Sales",
            ">",
            "300000"
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "t1",
            ".",
            "name",
            "from",
            "singer",
            "as",
            "t1",
            "join",
            "song",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "singer_id",
            "=",
            "t2",
            ".",
            "singer_id",
            "where",
            "t2",
            ".",
            "sales",
            ">",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ],
                    300000.0,
                    null
                ]
            ]
        },
        "question": "list name of singer with sale of song greater than value",
        "gold_question": "list name of singer with sale of song greater than value",
        "question_toks": [
            "list",
            "name",
            "of",
            "singer",
            "with",
            "sale",
            "of",
            "song",
            "greater",
            "than",
            "value"
        ]
    },
    {
        "db_id": "singer",
        "query": "SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1",
        "query_toks": [
            "SELECT",
            "T1.Name",
            "FROM",
            "singer",
            "AS",
            "T1",
            "JOIN",
            "song",
            "AS",
            "T2",
            "ON",
            "T1.Singer_ID",
            "=",
            "T2.Singer_ID",
            "GROUP",
            "BY",
            "T1.Name",
            "HAVING",
            "COUNT",
            "(",
            "*",
            ")",
            ">",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "name",
            "from",
            "singer",
            "as",
            "t1",
            "join",
            "song",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "singer_id",
            "=",
            "t2",
            ".",
            "singer_id",
            "group",
            "by",
            "t1",
            ".",
            "name",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    2,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list name of singer for each singer id of song that have the total number of song greater than value",
        "gold_question": "list name of singer for each name of singer that have the total number of singer greater than value",
        "question_toks": [
            "list",
            "name",
            "of",
            "singer",
            "for",
            "each",
            "singer",
            "id",
            "of",
            "song",
            "that",
            "have",
            "the",
            "total",
            "number",
            "of",
            "song",
            "greater",
            "than",
            "value"
        ]
    },
    {
        "db_id": "singer",
        "query": "SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1",
        "query_toks": [
            "SELECT",
            "T1.Name",
            "FROM",
            "singer",
            "AS",
            "T1",
            "JOIN",
            "song",
            "AS",
            "T2",
            "ON",
            "T1.Singer_ID",
            "=",
            "T2.Singer_ID",
            "GROUP",
            "BY",
            "T1.Name",
            "HAVING",
            "COUNT",
            "(",
            "*",
            ")",
            ">",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "name",
            "from",
            "singer",
            "as",
            "t1",
            "join",
            "song",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "singer_id",
            "=",
            "t2",
            ".",
            "singer_id",
            "group",
            "by",
            "t1",
            ".",
            "name",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    2,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list name of singer for each singer id of song that have the total number of song greater than value",
        "gold_question": "list name of singer for each name of singer that have the total number of singer greater than value",
        "question_toks": [
            "list",
            "name",
            "of",
            "singer",
            "for",
            "each",
            "singer",
            "id",
            "of",
            "song",
            "that",
            "have",
            "the",
            "total",
            "number",
            "of",
            "song",
            "greater",
            "than",
            "value"
        ]
    },
    {
        "db_id": "singer",
        "query": "SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name",
        "query_toks": [
            "SELECT",
            "T1.Name",
            ",",
            "sum",
            "(",
            "T2.Sales",
            ")",
            "FROM",
            "singer",
            "AS",
            "T1",
            "JOIN",
            "song",
            "AS",
            "T2",
            "ON",
            "T1.Singer_ID",
            "=",
            "T2.Singer_ID",
            "GROUP",
            "BY",
            "T1.Name"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "name",
            ",",
            "sum",
            "(",
            "t2",
            ".",
            "sales",
            ")",
            "from",
            "singer",
            "as",
            "t1",
            "join",
            "song",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "singer_id",
            "=",
            "t2",
            ".",
            "singer_id",
            "group",
            "by",
            "t1",
            ".",
            "name"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    2,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        4,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list name of singer the sum of sale of song for each singer id of song",
        "gold_question": "list name of singer the sum of sale of song for each name of singer",
        "question_toks": [
            "list",
            "name",
            "of",
            "singer",
            "the",
            "sum",
            "of",
            "sale",
            "of",
            "song",
            "for",
            "each",
            "singer",
            "id",
            "of",
            "song"
        ]
    },
    {
        "db_id": "singer",
        "query": "SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name",
        "query_toks": [
            "SELECT",
            "T1.Name",
            ",",
            "sum",
            "(",
            "T2.Sales",
            ")",
            "FROM",
            "singer",
            "AS",
            "T1",
            "JOIN",
            "song",
            "AS",
            "T2",
            "ON",
            "T1.Singer_ID",
            "=",
            "T2.Singer_ID",
            "GROUP",
            "BY",
            "T1.Name"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "name",
            ",",
            "sum",
            "(",
            "t2",
            ".",
            "sales",
            ")",
            "from",
            "singer",
            "as",
            "t1",
            "join",
            "song",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "singer_id",
            "=",
            "t2",
            ".",
            "singer_id",
            "group",
            "by",
            "t1",
            ".",
            "name"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    2,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        4,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list the sum of sale of song name of singer for each name of singer",
        "gold_question": "list name of singer the sum of sale of song for each name of singer",
        "question_toks": [
            "list",
            "the",
            "sum",
            "of",
            "sale",
            "of",
            "song",
            "name",
            "of",
            "singer",
            "for",
            "each",
            "name",
            "of",
            "singer"
        ]
    },
    {
        "db_id": "singer",
        "query": "SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)",
        "query_toks": [
            "SELECT",
            "Name",
            "FROM",
            "singer",
            "WHERE",
            "Singer_ID",
            "NOT",
            "IN",
            "(",
            "SELECT",
            "Singer_ID",
            "FROM",
            "song",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "singer",
            "where",
            "singer_id",
            "not",
            "in",
            "(",
            "select",
            "singer_id",
            "from",
            "song",
            ")"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    true,
                    8,
                    [
                        0,
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    1
                                ]
                            ]
                        },
                        "groupby": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderby": [],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            8,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": []
                    },
                    null
                ]
            ]
        },
        "question": "list name of singer with singer id that is not in ( singer id of song )",
        "gold_question": "list name of singer with singer id that is not in ( singer id of song )",
        "question_toks": [
            "list",
            "name",
            "of",
            "singer",
            "with",
            "singer",
            "id",
            "that",
            "is",
            "not",
            "in",
            "(",
            "singer",
            "id",
            "of",
            "song",
            ")"
        ]
    },
    {
        "db_id": "singer",
        "query": "SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)",
        "query_toks": [
            "SELECT",
            "Name",
            "FROM",
            "singer",
            "WHERE",
            "Singer_ID",
            "NOT",
            "IN",
            "(",
            "SELECT",
            "Singer_ID",
            "FROM",
            "song",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "singer",
            "where",
            "singer_id",
            "not",
            "in",
            "(",
            "select",
            "singer_id",
            "from",
            "song",
            ")"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    true,
                    8,
                    [
                        0,
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    1
                                ]
                            ]
                        },
                        "groupby": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderby": [],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            8,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": []
                    },
                    null
                ]
            ]
        },
        "question": "list name of singer with singer id that is not in ( singer id of song )",
        "gold_question": "list name of singer with singer id that is not in ( singer id of song )",
        "question_toks": [
            "list",
            "name",
            "of",
            "singer",
            "with",
            "singer",
            "id",
            "that",
            "is",
            "not",
            "in",
            "(",
            "singer",
            "id",
            "of",
            "song",
            ")"
        ]
    },
    {
        "db_id": "singer",
        "query": "SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year  >  1955",
        "query_toks": [
            "SELECT",
            "Citizenship",
            "FROM",
            "singer",
            "WHERE",
            "Birth_Year",
            "<",
            "1945",
            "INTERSECT",
            "SELECT",
            "Citizenship",
            "FROM",
            "singer",
            "WHERE",
            "Birth_Year",
            ">",
            "1955"
        ],
        "query_toks_no_value": [
            "select",
            "citizenship",
            "from",
            "singer",
            "where",
            "birth_year",
            "<",
            "value",
            "intersect",
            "select",
            "citizenship",
            "from",
            "singer",
            "where",
            "birth_year",
            ">",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": {
                "except": null,
                "from": {
                    "conds": [],
                    "table_units": [
                        [
                            "table_unit",
                            0
                        ]
                    ]
                },
                "groupby": [],
                "having": [],
                "intersect": null,
                "limit": null,
                "orderby": [],
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    5,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "union": null,
                "where": [
                    [
                        false,
                        3,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ],
                        1955.0,
                        null
                    ]
                ]
            },
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    4,
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ],
                    1945.0,
                    null
                ]
            ]
        },
        "question": "list citizenship of singer with birth year less than value and list citizenship of singer with birth year greater than value",
        "gold_question": "list citizenship of singer with birth year less than value and list citizenship of singer with birth year greater than value",
        "question_toks": [
            "list",
            "citizenship",
            "of",
            "singer",
            "with",
            "birth",
            "year",
            "less",
            "than",
            "value",
            "and",
            "list",
            "citizenship",
            "of",
            "singer",
            "with",
            "birth",
            "year",
            "greater",
            "than",
            "value"
        ]
    },
    {
        "db_id": "singer",
        "query": "SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year  >  1955",
        "query_toks": [
            "SELECT",
            "Citizenship",
            "FROM",
            "singer",
            "WHERE",
            "Birth_Year",
            "<",
            "1945",
            "INTERSECT",
            "SELECT",
            "Citizenship",
            "FROM",
            "singer",
            "WHERE",
            "Birth_Year",
            ">",
            "1955"
        ],
        "query_toks_no_value": [
            "select",
            "citizenship",
            "from",
            "singer",
            "where",
            "birth_year",
            "<",
            "value",
            "intersect",
            "select",
            "citizenship",
            "from",
            "singer",
            "where",
            "birth_year",
            ">",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": {
                "except": null,
                "from": {
                    "conds": [],
                    "table_units": [
                        [
                            "table_unit",
                            0
                        ]
                    ]
                },
                "groupby": [],
                "having": [],
                "intersect": null,
                "limit": null,
                "orderby": [],
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    5,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "union": null,
                "where": [
                    [
                        false,
                        3,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ],
                        1955.0,
                        null
                    ]
                ]
            },
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    4,
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ],
                    1945.0,
                    null
                ]
            ]
        },
        "question": "list citizenship of singer with birth year less than value and list citizenship of singer with birth year greater than value",
        "gold_question": "list citizenship of singer with birth year less than value and list citizenship of singer with birth year greater than value",
        "question_toks": [
            "list",
            "citizenship",
            "of",
            "singer",
            "with",
            "birth",
            "year",
            "less",
            "than",
            "value",
            "and",
            "list",
            "citizenship",
            "of",
            "singer",
            "with",
            "birth",
            "year",
            "greater",
            "than",
            "value"
        ]
    },
    {
        "db_id": "real_estate_properties",
        "query": "SELECT count(*) FROM Other_Available_Features",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "Other_Available_Features"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "other_available_features"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list the total number of other available feature",
        "gold_question": "list the total number of other available feature",
        "question_toks": [
            "list",
            "the",
            "total",
            "number",
            "of",
            "other",
            "available",
            "feature"
        ]
    },
    {
        "db_id": "real_estate_properties",
        "query": "SELECT T2.feature_type_name FROM Other_Available_Features AS T1 JOIN Ref_Feature_Types AS T2 ON T1.feature_type_code  =  T2.feature_type_code WHERE T1.feature_name  =  \"AirCon\"",
        "query_toks": [
            "SELECT",
            "T2.feature_type_name",
            "FROM",
            "Other_Available_Features",
            "AS",
            "T1",
            "JOIN",
            "Ref_Feature_Types",
            "AS",
            "T2",
            "ON",
            "T1.feature_type_code",
            "=",
            "T2.feature_type_code",
            "WHERE",
            "T1.feature_name",
            "=",
            "``",
            "AirCon",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "t2",
            ".",
            "feature_type_name",
            "from",
            "other_available_features",
            "as",
            "t1",
            "join",
            "ref_feature_types",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "feature_type_code",
            "=",
            "t2",
            ".",
            "feature_type_code",
            "where",
            "t1",
            ".",
            "feature_name",
            "=",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ],
                    "\"AirCon\"",
                    null
                ]
            ]
        },
        "question": "list feature type name of reference feature type with feature name of other available feature equal to value",
        "gold_question": "list feature type name of reference feature type with feature name of other available feature equal to value",
        "question_toks": [
            "list",
            "feature",
            "type",
            "name",
            "of",
            "reference",
            "feature",
            "type",
            "with",
            "feature",
            "name",
            "of",
            "other",
            "available",
            "feature",
            "equal",
            "to",
            "value"
        ]
    },
    {
        "db_id": "real_estate_properties",
        "query": "SELECT T2.property_type_description FROM Properties AS T1 JOIN Ref_Property_Types AS T2 ON T1.property_type_code  =  T2.property_type_code GROUP BY T1.property_type_code",
        "query_toks": [
            "SELECT",
            "T2.property_type_description",
            "FROM",
            "Properties",
            "AS",
            "T1",
            "JOIN",
            "Ref_Property_Types",
            "AS",
            "T2",
            "ON",
            "T1.property_type_code",
            "=",
            "T2.property_type_code",
            "GROUP",
            "BY",
            "T1.property_type_code"
        ],
        "query_toks_no_value": [
            "select",
            "t2",
            ".",
            "property_type_description",
            "from",
            "properties",
            "as",
            "t1",
            "join",
            "ref_property_types",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "property_type_code",
            "=",
            "t2",
            ".",
            "property_type_code",
            "group",
            "by",
            "t1",
            ".",
            "property_type_code"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupby": [
                [
                    0,
                    10,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        },
        "question": "list property type description of reference property type",
        "gold_question": "list property type description of reference property type for each property type code of property",
        "question_toks": [
            "list",
            "property",
            "type",
            "description",
            "of",
            "reference",
            "property",
            "type"
        ]
    },
    {
        "db_id": "real_estate_properties",
        "query": "SELECT property_name FROM Properties WHERE property_type_code  =  \"House\" UNION SELECT property_name FROM Properties WHERE property_type_code  =  \"Apartment\" AND room_count  >  1",
        "query_toks": [
            "SELECT",
            "property_name",
            "FROM",
            "Properties",
            "WHERE",
            "property_type_code",
            "=",
            "``",
            "House",
            "''",
            "UNION",
            "SELECT",
            "property_name",
            "FROM",
            "Properties",
            "WHERE",
            "property_type_code",
            "=",
            "``",
            "Apartment",
            "''",
            "AND",
            "room_count",
            ">",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "property_name",
            "from",
            "properties",
            "where",
            "property_type_code",
            "=",
            "value",
            "union",
            "select",
            "property_name",
            "from",
            "properties",
            "where",
            "property_type_code",
            "=",
            "value",
            "and",
            "room_count",
            ">",
            "value"
        ],
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupby": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderby": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": {
                "except": null,
                "from": {
                    "conds": [],
                    "table_units": [
                        [
                            "table_unit",
                            3
                        ]
                    ]
                },
                "groupby": [],
                "having": [],
                "intersect": null,
                "limit": null,
                "orderby": [],
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    13,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "union": null,
                "where": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ],
                        "\"Apartment\"",
                        null
                    ],
                    "and",
                    [
                        false,
                        3,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ],
                        1.0,
                        null
                    ]
                ]
            },
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    "\"House\"",
                    null
                ]
            ]
        },
        "question": "list property name of property with property type code equal to value or room count greater than value",
        "gold_question": "list property name of property with property type code equal to value or list property name of property with property type code equal to value and room count greater than value",
        "question_toks": [
            "list",
            "property",
            "name",
            "of",
            "property",
            "with",
            "property",
            "type",
            "code",
            "equal",
            "to",
            "value",
            "or",
            "room",
            "count",
            "greater",
            "than",
            "value"
        ]
    }
]